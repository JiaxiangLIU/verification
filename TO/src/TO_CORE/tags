!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADD_LOCO_AREA	OPTIMIZE/opt_definition.h	/^     ADD_LOCO_AREA = 78,\/**<补机区域*\/       \/\/!< PUSHER_ENGING_AREA$/;"	e	enum:opt_flag
ADD_LOCO_AREA	OPTIMIZE/tools/opt_definition.h	/^     ADD_LOCO_AREA = 78,\/**<补机区域*\/       \/\/!< PUSHER_ENGING_AREA$/;"	e	enum:opt_flag
AIRBRAKECHANGE	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^typedef struct air_brake_change AIRBRAKECHANGE;$/;"	t	typeref:struct:air_brake_change
AIRBRAKECHANGE	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^typedef struct air_brake_change AIRBRAKECHANGE;$/;"	t	typeref:struct:air_brake_change
AIRBRAKERESULT	OPTIMIZE/opt_definition.h	/^typedef struct airBrakeResult AIRBRAKERESULT;$/;"	t	typeref:struct:airBrakeResult
AIRBRAKERESULT	OPTIMIZE/tools/opt_definition.h	/^typedef struct airBrakeResult AIRBRAKERESULT;$/;"	t	typeref:struct:airBrakeResult
AIRE	OPTIMIZE/opt_definition.h	/^    int AIRE;\/**<用于标记空气制动降速结束匀速开始位置档位*\/$/;"	m	struct:optConstParam
AIRE	OPTIMIZE/tools/opt_definition.h	/^    int AIRE;\/**<用于标记空气制动降速结束匀速开始位置档位*\/$/;"	m	struct:optConstParam
AIRLENGTH	OPTIMIZE/opt_definition.h	/^	float AIRLENGTH;\/**<空气制动提前开启的距离*\/$/;"	m	struct:optConstParam
AIRLENGTH	OPTIMIZE/tools/opt_definition.h	/^	float AIRLENGTH;\/**<空气制动提前开启的距离*\/$/;"	m	struct:optConstParam
AIRS	OPTIMIZE/opt_definition.h	/^    int AIRS;\/**<用于标记空气制动降速起始位置档位*\/$/;"	m	struct:optConstParam
AIRS	OPTIMIZE/tools/opt_definition.h	/^    int AIRS;\/**<用于标记空气制动降速起始位置档位*\/$/;"	m	struct:optConstParam
AIR_DAMPING_AVG	OPTIMIZE/opt_definition.h	/^	 AIR_DAMPING_AVG = 81, \/**<空气制动匀速部分*\/        \/\/!< AIR_DAMPING_AVG$/;"	e	enum:opt_flag
AIR_DAMPING_AVG	OPTIMIZE/tools/opt_definition.h	/^	 AIR_DAMPING_AVG = 81, \/**<空气制动匀速部分*\/        \/\/!< AIR_DAMPING_AVG$/;"	e	enum:opt_flag
AIR_DAMPING_BRAKE	OPTIMIZE/opt_definition.h	/^	 AIR_DAMPING_BRAKE = 80 ,\/**<空气制动降速部分*\/      \/\/!< AIR_DAMPING_BRAKE$/;"	e	enum:opt_flag
AIR_DAMPING_BRAKE	OPTIMIZE/tools/opt_definition.h	/^	 AIR_DAMPING_BRAKE = 80 ,\/**<空气制动降速部分*\/      \/\/!< AIR_DAMPING_BRAKE$/;"	e	enum:opt_flag
AM3517_CROSS_COMPILE	Makefile	/^AM3517_CROSS_COMPILE := arm-am3517-linux-gnueabi-$/;"	m
APP_SOCKET_H_	app_socket/app_socket.h	15;"	d
ARRAY_LEN	conf_manage/xml_extract.h	6;"	d
BASE_OPT_FUC_H_	OPTIMIZE/optimize/rawoptimize/base/base_opt_fuc.h	9;"	d
BASE_OPT_FUC_H_	OPTIMIZE/tools/optimize/rawoptimize/base/base_opt_fuc.h	9;"	d
BOARD_PORT	app_socket/app_socket.h	28;"	d
BOOL	OPTIMIZE/optimize_curve.h	18;"	d
BOOL	OPTIMIZE/tools/optimize_curve.h	18;"	d
CARNUMS	OPTIMIZE/datacontrol/extractData.c	/^int CARNUMS;$/;"	v
CARNUMS	OPTIMIZE/tools/datacontrol/extractData.c	/^int CARNUMS;$/;"	v
CARSTRUCT	OPTIMIZE/opt_definition.h	/^typedef struct carStruct CARSTRUCT;$/;"	t	typeref:struct:carStruct
CARSTRUCT	OPTIMIZE/tools/opt_definition.h	/^typedef struct carStruct CARSTRUCT;$/;"	t	typeref:struct:carStruct
CATEGORY	OPTIMIZE/optimize/preprocess/roadCategory.h	/^typedef struct Category CATEGORY;$/;"	t	typeref:struct:Category
CATEGORY	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^typedef struct Category CATEGORY;$/;"	t	typeref:struct:Category
CATPOINT	OPTIMIZE/optimize/preprocess/roadCategory.h	/^typedef struct catPoint CATPOINT;$/;"	t	typeref:struct:catPoint
CATPOINT	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^typedef struct catPoint CATPOINT;$/;"	t	typeref:struct:catPoint
CFG_EXTR_SUCCESS	conf_manage/xml_extract.h	/^	CFG_EXTR_SUCCESS = 0,$/;"	e	enum:cfgExtractRslt
CFG_FIND_ELEMENT_ERR	conf_manage/xml_extract.h	/^	CFG_FIND_ELEMENT_ERR$/;"	e	enum:cfgExtractRslt
CFG_GROUP	conf_manage/xml_extract.h	/^enum CFG_GROUP{$/;"	g
CFG_LOAD_ERR	conf_manage/xml_extract.h	/^	CFG_LOAD_ERR,$/;"	e	enum:cfgExtractRslt
CFG_OPEN_ERR	conf_manage/xml_extract.h	/^	CFG_OPEN_ERR,$/;"	e	enum:cfgExtractRslt
COMGEARSTEP	OPTIMIZE/opt_definition.h	/^	float COMGEARSTEP;\/**<档位渐变中普通档位换档的持续时间*\/$/;"	m	struct:optConstParam
COMGEARSTEP	OPTIMIZE/tools/opt_definition.h	/^	float COMGEARSTEP;\/**<档位渐变中普通档位换档的持续时间*\/$/;"	m	struct:optConstParam
COMMAND_FRAME_CODE	app_socket/protocal.h	11;"	d
COMMAND_FRAME_SIZE	app_socket/protocal.h	13;"	d
COM_0_ADDR	app_socket/app_socket.h	20;"	d
COM_1_ADDR	app_socket/app_socket.h	21;"	d
CONTROLLER_H_	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_controller.h	9;"	d
CONTROLLER_H_	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_controller.h	9;"	d
CONTROL_BOX	message_queue/event.h	/^    CONTROL_BOX = 0x02,$/;"	e	enum:event_source
CORE_0_ADDR	app_socket/app_socket.h	22;"	d
CORE_1_ADDR	app_socket/app_socket.h	23;"	d
CORE_2_ADDR	app_socket/app_socket.h	24;"	d
CORE_3_ADDR	app_socket/app_socket.h	25;"	d
CRITICAL_V	OPTIMIZE/optimize/preprocess/roadCategory.h	/^typedef struct critical_v CRITICAL_V;$/;"	t	typeref:struct:critical_v
CRITICAL_V	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^typedef struct critical_v CRITICAL_V;$/;"	t	typeref:struct:critical_v
CTR_DEBUG	log.h	48;"	d
CURVE	OPTIMIZE/opt_definition.h	/^typedef struct curve CURVE;$/;"	t	typeref:struct:curve
CURVE	OPTIMIZE/tools/opt_definition.h	/^typedef struct curve CURVE;$/;"	t	typeref:struct:curve
CURVETEMP	OPTIMIZE/optimize/preprocess/preprocess.c	/^typedef struct curveTemp CURVETEMP;$/;"	t	typeref:struct:curveTemp	file:
CURVETEMP	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^typedef struct curveTemp CURVETEMP;$/;"	t	typeref:struct:curveTemp	file:
CZ	OPTIMIZE/optimize/preprocess/roadCategory.c	/^typedef struct cz CZ;$/;"	t	typeref:struct:cz	file:
CZ	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^typedef struct cz CZ;$/;"	t	typeref:struct:cz	file:
Category	OPTIMIZE/optimize/preprocess/roadCategory.h	/^struct Category$/;"	s
Category	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^struct Category$/;"	s
DATADEFINITION_H_	OPTIMIZE/opt_definition.h	9;"	d
DATADEFINITION_H_	OPTIMIZE/tools/opt_definition.h	9;"	d
DATA_FD	app_socket/protocal.c	/^}DATA_FD;$/;"	t	typeref:struct:data_frame_descriptor	file:
DATA_FRAME_CODE	app_socket/protocal.h	10;"	d
DATA_FRAME_HEAD_SIZE	app_socket/protocal.h	15;"	d
DELTAS	OPTIMIZE/opt_global_var.h	17;"	d
DELTAS	OPTIMIZE/tools/opt_global_var.h	17;"	d
DELTA_S	OPTIMIZE/opt_definition.h	/^	float DELTA_S;\/**<距离步长*\/$/;"	m	struct:optConstParam
DELTA_S	OPTIMIZE/tools/opt_definition.h	/^	float DELTA_S;\/**<距离步长*\/$/;"	m	struct:optConstParam
DISTANCE	OPTIMIZE/opt_definition.h	/^	int DISTANCE;\/**<坡段中划分出小的坡段的长度阈值*\/$/;"	m	struct:optConstParam
DISTANCE	OPTIMIZE/tools/opt_definition.h	/^	int DISTANCE;\/**<坡段中划分出小的坡段的长度阈值*\/$/;"	m	struct:optConstParam
DRIVER_CONTROLLER	message_queue/event.h	/^    DRIVER_CONTROLLER = 0x03,$/;"	e	enum:event_source
DRIVING_RECORD	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^typedef struct driving_record DRIVING_RECORD;$/;"	t	typeref:struct:driving_record
DRIVING_RECORD	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^typedef struct driving_record DRIVING_RECORD;$/;"	t	typeref:struct:driving_record
DllMain	conf_manage/xmlopt/mxml-private.c	/^DllMain(HINSTANCE hinst,		\/* I - DLL module handle *\/$/;"	f
DoCaculateByDistance	OPTIMIZE/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT  DoCaculateByDistance(float start, float v, int gear, float *delta_t,$/;"	f
DoCaculateByDistance	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT  DoCaculateByDistance(float start, float v, int gear, float *delta_t,$/;"	f
DoCaculateByTime	OPTIMIZE/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT  DoCaculateByTime(float start, float v, int gear, float tStep, int *count,$/;"	f
DoCaculateByTime	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT  DoCaculateByTime(float start, float v, int gear, float tStep, int *count,$/;"	f
EMPTYINTERVAL	OPTIMIZE/opt_definition.h	/^	float EMPTYINTERVAL;\/**<空车陡上坡的用于调整平均速度的阈值 *\/$/;"	m	struct:optConstParam
EMPTYINTERVAL	OPTIMIZE/tools/opt_definition.h	/^	float EMPTYINTERVAL;\/**<空车陡上坡的用于调整平均速度的阈值 *\/$/;"	m	struct:optConstParam
ENCODE_UTF16BE	conf_manage/xmlopt/mxml-file.c	67;"	d	file:
ENCODE_UTF16LE	conf_manage/xmlopt/mxml-file.c	68;"	d	file:
ENCODE_UTF8	conf_manage/xmlopt/mxml-file.c	66;"	d	file:
EVENT_FINISH	message_queue/event.h	/^    EVENT_FINISH = 0XFF     \/\/event_finish是一种特殊的事件，代表旧事件结束$/;"	e	enum:event_type
EVENT_H_	message_queue/event.h	4;"	d
EVENT_MANAGE_FAILURE	message_queue/event.h	/^    EVENT_MANAGE_FAILURE = -1$/;"	e	enum:event_manage_result
EVENT_MANAGE_RESULT	message_queue/event.h	/^}EVENT_MANAGE_RESULT;$/;"	t	typeref:enum:event_manage_result
EVENT_MANAGE_SUCCESS	message_queue/event.h	/^    EVENT_MANAGE_SUCCESS = 0,$/;"	e	enum:event_manage_result
EVENT_ROUTE_INIT	message_queue/event.h	/^    EVENT_ROUTE_INIT = 0X10,$/;"	e	enum:event_type
EVENT_SOURCE	message_queue/event.h	/^}EVENT_SOURCE;$/;"	t	typeref:enum:event_source
EVENT_STATUS	message_queue/event.h	/^}EVENT_STATUS;$/;"	t	typeref:enum:event_status
EVENT_TYPE	message_queue/event.h	/^}EVENT_TYPE;$/;"	t	typeref:enum:event_type
EXCEPTION	message_queue/event.h	/^    EXCEPTION = 4   \/*异常*\/$/;"	e	enum:event_status
EXP_DESC_LENGTH	OPTIMIZE/exception/exception.h	12;"	d
EXP_DESC_LENGTH	OPTIMIZE/opt_global_var.h	21;"	d
EXP_DESC_LENGTH	OPTIMIZE/tools/exception/exception.h	12;"	d
EXP_DESC_LENGTH	OPTIMIZE/tools/opt_global_var.h	21;"	d
EXTRACT_FR_STT	conf_manage/xml_extract.h	/^struct EXTRACT_FR_STT{$/;"	s
EXTRDATA_H_	OPTIMIZE/datacontrol/extrData.h	10;"	d
EXTRDATA_H_	OPTIMIZE/tools/datacontrol/extrData.h	10;"	d
EXTR_OPT_DATARANGE	conf_manage/xml_extract.h	/^struct EXTR_OPT_DATARANGE {$/;"	s
EXTR_OPT_RTN	conf_manage/xml_extract.h	/^struct EXTR_OPT_RTN {\/\/EXTR_OPT_RTN - extract optimize return,$/;"	s
EXTR_ROUTEINFO	conf_manage/xml_extract.h	/^struct EXTR_ROUTEINFO {$/;"	s
FALSE	OPTIMIZE/drivecontrol/rt_global_var.h	31;"	d
FALSE	OPTIMIZE/optimize_curve.h	20;"	d
FALSE	OPTIMIZE/tools/drivecontrol/rt_global_var.h	31;"	d
FALSE	OPTIMIZE/tools/optimize_curve.h	20;"	d
FEATUREINVALID	OPTIMIZE/opt_definition.h	/^	int FEATUREINVALID;\/**<策略配置文件中对应特征无效的标识*\/$/;"	m	struct:optConstParam
FEATUREINVALID	OPTIMIZE/tools/opt_definition.h	/^	int FEATUREINVALID;\/**<策略配置文件中对应特征无效的标识*\/$/;"	m	struct:optConstParam
FILE_OPEN_ERROR	OPTIMIZE/exception/exception.h	/^	FILE_OPEN_ERROR = 20,    \/\/!< 文件打开错误$/;"	e	enum:optimize_code
FILE_OPEN_ERROR	OPTIMIZE/tools/exception/exception.h	/^	FILE_OPEN_ERROR = 20,    \/\/!< 文件打开错误$/;"	e	enum:optimize_code
FILE_SEEK_ERROR	OPTIMIZE/exception/exception.h	/^	FILE_SEEK_ERROR = 40,    \/\/!< 文件读取时索引错误$/;"	e	enum:optimize_code
FILE_SEEK_ERROR	OPTIMIZE/tools/exception/exception.h	/^	FILE_SEEK_ERROR = 40,    \/\/!< 文件读取时索引错误$/;"	e	enum:optimize_code
FIND_INDEX_ERROR	OPTIMIZE/exception/exception.h	/^	FIND_INDEX_ERROR=75,      \/\/!< 未找到元素$/;"	e	enum:optimize_code
FIND_INDEX_ERROR	OPTIMIZE/tools/exception/exception.h	/^	FIND_INDEX_ERROR=75,      \/\/!< 未找到元素$/;"	e	enum:optimize_code
FINISH	message_queue/event.h	/^    FINISH = 3,     \/*完成*\/$/;"	e	enum:event_status
FINISHED_EVENT	message_queue/event.h	/^    FINISHED_EVENT = 0x04$/;"	e	enum:event_source
FORBID_STOP_CROSS_GRAD	OPTIMIZE/opt_definition.h	/^	 FORBID_STOP_CROSS_GRAD = 83, \/**<禁止跨坡停车区域标识*\/\/\/!< FORBID_STOP_CROSS_GRAD$/;"	e	enum:opt_flag
FORBID_STOP_CROSS_GRAD	OPTIMIZE/tools/opt_definition.h	/^	 FORBID_STOP_CROSS_GRAD = 83, \/**<禁止跨坡停车区域标识*\/\/\/!< FORBID_STOP_CROSS_GRAD$/;"	e	enum:opt_flag
FORBID_STOP_ON_GRAD	OPTIMIZE/opt_definition.h	/^	 FORBID_STOP_ON_GRAD = 82,\/**<禁止坡停区域标识*\/     \/\/!< FORBID_STOP_ON_GRAD$/;"	e	enum:opt_flag
FORBID_STOP_ON_GRAD	OPTIMIZE/tools/opt_definition.h	/^	 FORBID_STOP_ON_GRAD = 82,\/**<禁止坡停区域标识*\/     \/\/!< FORBID_STOP_ON_GRAD$/;"	e	enum:opt_flag
FRAME_ENCAP_FAILURE	app_socket/protocal.h	/^    FRAME_ENCAP_FAILURE = -3,$/;"	e	enum:protocal_result
FRAME_ERROR	app_socket/protocal.h	/^    FRAME_ERROR = -2,$/;"	e	enum:protocal_result
G	OPTIMIZE/opt_definition.h	/^	float G; \/**<重力加速度 *\/$/;"	m	struct:optConstParam
G	OPTIMIZE/tools/opt_definition.h	/^	float G; \/**<重力加速度 *\/$/;"	m	struct:optConstParam
GEARLENGTHLIMIT	OPTIMIZE/opt_definition.h	/^	float GEARLENGTHLIMIT;\/**<档位拉平中，需要进行档位拉平的最大的档位长度，若档位长度小于该值，则需要进行拉平*\/$/;"	m	struct:optConstParam
GEARLENGTHLIMIT	OPTIMIZE/tools/opt_definition.h	/^	float GEARLENGTHLIMIT;\/**<档位拉平中，需要进行档位拉平的最大的档位长度，若档位长度小于该值，则需要进行拉平*\/$/;"	m	struct:optConstParam
GEARSEGINFO	OPTIMIZE/optimize/afterprocess/after_process.h	/^}typedef GEARSEGINFO;$/;"	t
GEARSEGINFO	OPTIMIZE/tools/optimize/afterprocess/after_process.h	/^}typedef GEARSEGINFO;$/;"	t
GEAR_INVALID	OPTIMIZE/exception/exception.h	/^	GEAR_INVALID = 49,       \/\/!< 无效档位$/;"	e	enum:optimize_code
GEAR_INVALID	OPTIMIZE/tools/exception/exception.h	/^	GEAR_INVALID = 49,       \/\/!< 无效档位$/;"	e	enum:optimize_code
GEDATA	OPTIMIZE/opt_definition.h	/^typedef struct geData GEDATA;$/;"	t	typeref:struct:geData
GEDATA	OPTIMIZE/tools/opt_definition.h	/^typedef struct geData GEDATA;$/;"	t	typeref:struct:geData
GLOBALVAR_H_	OPTIMIZE/opt_global_var.h	8;"	d
GLOBALVAR_H_	OPTIMIZE/tools/opt_global_var.h	8;"	d
GLOBAL_H_	global.h	12;"	d
GRADIENT	OPTIMIZE/opt_definition.h	/^typedef struct gradient GRADIENT;$/;"	t	typeref:struct:gradient
GRADIENT	OPTIMIZE/tools/opt_definition.h	/^typedef struct gradient GRADIENT;$/;"	t	typeref:struct:gradient
GRADIENTTEMP	OPTIMIZE/optimize/preprocess/preprocess.c	/^typedef struct gradientTemp GRADIENTTEMP;$/;"	t	typeref:struct:gradientTemp	file:
GRADIENTTEMP	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^typedef struct gradientTemp GRADIENTTEMP;$/;"	t	typeref:struct:gradientTemp	file:
HANDAREA	OPTIMIZE/opt_definition.h	/^typedef struct handArea HANDAREA;$/;"	t	typeref:struct:handArea
HANDAREA	OPTIMIZE/tools/opt_definition.h	/^typedef struct handArea HANDAREA;$/;"	t	typeref:struct:handArea
HANDLE_H_	handle.h	10;"	d
HAND_AREA_INTERVAL	OPTIMIZE/optimize/limitadjust/limitStrategy10.c	10;"	d	file:
HAND_AREA_INTERVAL	OPTIMIZE/tools/optimize/limitadjust/limitStrategy10.c	10;"	d	file:
HAVE_LONG_LONG	conf_manage/xmlopt/config.h	47;"	d
HAVE_PTHREAD_H	conf_manage/xmlopt/config.h	69;"	d
HAVE_SNPRINTF	conf_manage/xmlopt/config.h	54;"	d
HAVE_STRDUP	conf_manage/xmlopt/config.h	62;"	d
HAVE_VSNPRINTF	conf_manage/xmlopt/config.h	55;"	d
IDELGEARSTEP	OPTIMIZE/opt_definition.h	/^	float IDELGEARSTEP;\/**<档位渐变中惰行档位换档的持续时间*\/$/;"	m	struct:optConstParam
IDELGEARSTEP	OPTIMIZE/tools/opt_definition.h	/^	float IDELGEARSTEP;\/**<档位渐变中惰行档位换档的持续时间*\/$/;"	m	struct:optConstParam
IMX287_CC	Makefile	/^IMX287_CC :=$(AM3517_CROSS_COMPILE)gcc$/;"	m
INC	Makefile	/^INC := -I.$/;"	m
INITIALDATA	OPTIMIZE/opt_definition.h	/^typedef struct initialData INITIALDATA;$/;"	t	typeref:struct:initialData
INITIALDATA	OPTIMIZE/tools/opt_definition.h	/^typedef struct initialData INITIALDATA;$/;"	t	typeref:struct:initialData
INITIAL_FAILURE	app_socket/app_socket.h	/^    INITIAL_FAILURE = -3,$/;"	e	enum:socket_result
INTERVALRUNTIMEUNIT	OPTIMIZE/opt_definition.h	/^typedef struct intervalRunTimeUnit INTERVALRUNTIMEUNIT;$/;"	t	typeref:struct:intervalRunTimeUnit
INTERVALRUNTIMEUNIT	OPTIMIZE/tools/opt_definition.h	/^typedef struct intervalRunTimeUnit INTERVALRUNTIMEUNIT;$/;"	t	typeref:struct:intervalRunTimeUnit
INVALID_GEAR	OPTIMIZE/exception/exception.h	/^	INVALID_GEAR = -1       \/\/!< 无效档位低于-8或者高于8$/;"	e	enum:trac_cal_code
INVALID_GEAR	OPTIMIZE/tools/exception/exception.h	/^	INVALID_GEAR = -1       \/\/!< 无效档位低于-8或者高于8$/;"	e	enum:trac_cal_code
IN_ROUTEINFO	conf_manage/xml_extract.h	/^struct IN_ROUTEINFO {$/;"	s
LIMIT	OPTIMIZE/opt_definition.h	/^typedef struct limit LIMIT;$/;"	t	typeref:struct:limit
LIMIT	OPTIMIZE/tools/opt_definition.h	/^typedef struct limit LIMIT;$/;"	t	typeref:struct:limit
LIMITADJUSTSTRATEGY_H_	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	9;"	d
LIMITADJUSTSTRATEGY_H_	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	9;"	d
LIMITADJUST_H_	OPTIMIZE/optimize/limitAdjust.h	9;"	d
LIMITADJUST_H_	OPTIMIZE/tools/optimize/limitAdjust.h	9;"	d
LIMITINFO	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^typedef struct limitInfo LIMITINFO ;$/;"	t	typeref:struct:limitInfo
LIMITINFO	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^typedef struct limitInfo LIMITINFO ;$/;"	t	typeref:struct:limitInfo
LIMITSTRFLAGS	OPTIMIZE/opt_definition.h	/^typedef struct limitStrategyFLags LIMITSTRFLAGS;$/;"	t	typeref:struct:limitStrategyFLags
LIMITSTRFLAGS	OPTIMIZE/tools/opt_definition.h	/^typedef struct limitStrategyFLags LIMITSTRFLAGS;$/;"	t	typeref:struct:limitStrategyFLags
LIMITTHRESHOLD	OPTIMIZE/opt_definition.h	/^	int LIMITTHRESHOLD;\/**<限速调整阈值，调整限速起始公里标的值*\/$/;"	m	struct:optConstParam
LIMITTHRESHOLD	OPTIMIZE/tools/opt_definition.h	/^	int LIMITTHRESHOLD;\/**<限速调整阈值，调整限速起始公里标的值*\/$/;"	m	struct:optConstParam
LIMITV	OPTIMIZE/opt_definition.h	/^	float LIMITV;\/**<设定的最大限速值*\/$/;"	m	struct:optConstParam
LIMITV	OPTIMIZE/tools/opt_definition.h	/^	float LIMITV;\/**<设定的最大限速值*\/$/;"	m	struct:optConstParam
LIMIT_INTERVAL	OPTIMIZE/opt_definition.h	/^	int LIMIT_INTERVAL;\/**<限速调整中，所用限速比正常限速低的阈值*\/$/;"	m	struct:optConstParam
LIMIT_INTERVAL	OPTIMIZE/tools/opt_definition.h	/^	int LIMIT_INTERVAL;\/**<限速调整中，所用限速比正常限速低的阈值*\/$/;"	m	struct:optConstParam
LIMIT_MALLOC_ERROR	OPTIMIZE/exception/exception.h	/^	LIMIT_MALLOC_ERROR=-1,        \/\/!< 内存分配失败$/;"	e	enum:limit_optimize_code
LIMIT_MALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^	LIMIT_MALLOC_ERROR=-1,        \/\/!< 内存分配失败$/;"	e	enum:limit_optimize_code
LIMIT_NOT_FIND_STRATEGY	OPTIMIZE/exception/exception.h	/^	LIMIT_NOT_FIND_STRATEGY=-3    \/\/!< 未找到策略$/;"	e	enum:limit_optimize_code
LIMIT_NOT_FIND_STRATEGY	OPTIMIZE/tools/exception/exception.h	/^	LIMIT_NOT_FIND_STRATEGY=-3    \/\/!< 未找到策略$/;"	e	enum:limit_optimize_code
LIMIT_OPTIMIZE_CODE	OPTIMIZE/exception/exception.h	/^}LIMIT_OPTIMIZE_CODE;$/;"	t	typeref:enum:limit_optimize_code
LIMIT_OPTIMIZE_CODE	OPTIMIZE/tools/exception/exception.h	/^}LIMIT_OPTIMIZE_CODE;$/;"	t	typeref:enum:limit_optimize_code
LIMIT_OPTIMIZE_RESULT	OPTIMIZE/exception/exception.h	/^}LIMIT_OPTIMIZE_RESULT;$/;"	t	typeref:struct:limit_optimize_result
LIMIT_OPTIMIZE_RESULT	OPTIMIZE/tools/exception/exception.h	/^}LIMIT_OPTIMIZE_RESULT;$/;"	t	typeref:struct:limit_optimize_result
LIMIT_OPTIMIZE_SUCCESS	OPTIMIZE/exception/exception.h	/^	LIMIT_OPTIMIZE_SUCCESS=1,\/\/!< 限速调整成功$/;"	e	enum:limit_optimize_code
LIMIT_OPTIMIZE_SUCCESS	OPTIMIZE/tools/exception/exception.h	/^	LIMIT_OPTIMIZE_SUCCESS=1,\/\/!< 限速调整成功$/;"	e	enum:limit_optimize_code
LIMIT_REALLOC_ERROR	OPTIMIZE/exception/exception.h	/^	LIMIT_REALLOC_ERROR=-2,       \/\/!< 内存再分配失败$/;"	e	enum:limit_optimize_code
LIMIT_REALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^	LIMIT_REALLOC_ERROR=-2,       \/\/!< 内存再分配失败$/;"	e	enum:limit_optimize_code
LINKED_LIST_OPERATIONS_H_	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.h	9;"	d
LINKED_LIST_OPERATIONS_H_	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.h	9;"	d
LL_GET_DISTANCE	OPTIMIZE/drivecontrol/rt_global_var.h	27;"	d
LL_GET_DISTANCE	OPTIMIZE/tools/drivecontrol/rt_global_var.h	27;"	d
LL_INPUT_DATA_NULL	OPTIMIZE/drivecontrol/rt_definition.h	/^		LL_INPUT_DATA_NULL,$/;"	e	enum:ll_manage_result
LL_INPUT_DATA_NULL	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		LL_INPUT_DATA_NULL,$/;"	e	enum:ll_manage_result
LL_LOCK_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		LL_LOCK_FAILURE,$/;"	e	enum:ll_manage_result
LL_LOCK_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		LL_LOCK_FAILURE,$/;"	e	enum:ll_manage_result
LL_MEMORRY_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		LL_MEMORRY_FAILURE,$/;"	e	enum:ll_manage_result
LL_MEMORRY_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		LL_MEMORRY_FAILURE,$/;"	e	enum:ll_manage_result
LL_NODE	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct ll_node LL_NODE;$/;"	t	typeref:struct:ll_node
LL_NODE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct ll_node LL_NODE;$/;"	t	typeref:struct:ll_node
LL_RESULT	OPTIMIZE/drivecontrol/rt_definition.h	/^} LL_RESULT;$/;"	t	typeref:enum:ll_manage_result
LL_RESULT	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^} LL_RESULT;$/;"	t	typeref:enum:ll_manage_result
LL_SUCCESS	OPTIMIZE/drivecontrol/rt_definition.h	/^		LL_SUCCESS = 0,$/;"	e	enum:ll_manage_result
LL_SUCCESS	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		LL_SUCCESS = 0,$/;"	e	enum:ll_manage_result
LL_UNLOCK_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		LL_UNLOCK_FAILURE,$/;"	e	enum:ll_manage_result
LL_UNLOCK_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		LL_UNLOCK_FAILURE,$/;"	e	enum:ll_manage_result
LOCK_FAILURE	message_queue/message_queue.h	/^    LOCK_FAILURE = 70,$/;"	e	enum:queue_manage_result
LOCOINFO	conf_manage/xml_extract.h	/^	LOCOINFO = 0,$/;"	e	enum:CFG_GROUP
LOCOPARAMETER	OPTIMIZE/opt_definition.h	/^typedef struct locoParameter LOCOPARAMETER;$/;"	t	typeref:struct:locoParameter
LOCOPARAMETER	OPTIMIZE/tools/opt_definition.h	/^typedef struct locoParameter LOCOPARAMETER;$/;"	t	typeref:struct:locoParameter
LOG_ALERT	log.h	7;"	d
LOG_DEBUG	log.h	12;"	d
LOG_EMERG	log.h	6;"	d
LOG_ERROR	log.h	8;"	d
LOG_H	log.h	2;"	d
LOG_INFO	log.h	11;"	d
LOG_LEVEL	log.h	15;"	d
LOG_NOTICE	log.h	10;"	d
LOG_WARNING	log.h	9;"	d
MALLOC_ERROR	OPTIMIZE/exception/exception.h	/^	MALLOC_ERROR = 60,       \/\/!< 内存分配失败$/;"	e	enum:optimize_code
MALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^	MALLOC_ERROR = 60,       \/\/!< 内存分配失败$/;"	e	enum:optimize_code
MALLOC_FAILED	conf_manage/xml_extract.h	/^	MALLOC_FAILED,$/;"	e	enum:cfgExtractRslt
MALLOC_FAILURE	message_queue/message_queue.h	/^    MALLOC_FAILURE = 71$/;"	e	enum:queue_manage_result
MAXGEAR	OPTIMIZE/opt_definition.h	/^    int MAXGEAR;\/**<标记机车最大牵引档位*\/$/;"	m	struct:optConstParam
MAXGEAR	OPTIMIZE/tools/opt_definition.h	/^    int MAXGEAR;\/**<标记机车最大牵引档位*\/$/;"	m	struct:optConstParam
MAXGEN	OPTIMIZE/optimize/afterprocess/tmp_gear_trasfer.h	11;"	d
MAXGEN	OPTIMIZE/tools/optimize/afterprocess/tmp_gear_trasfer.h	11;"	d
MAXLENGTH	OPTIMIZE/opt_definition.h	/^	float MAXLENGTH;\/**<设定的追上曲线的最大距离*\/$/;"	m	struct:optConstParam
MAXLENGTH	OPTIMIZE/tools/opt_definition.h	/^	float MAXLENGTH;\/**<设定的追上曲线的最大距离*\/$/;"	m	struct:optConstParam
MAXV	OPTIMIZE/opt_definition.h	/^	float MAXV;\/**<标记机车及限速理论允许的最大恒速值*\/$/;"	m	struct:optConstParam
MAXV	OPTIMIZE/tools/opt_definition.h	/^	float MAXV;\/**<标记机车及限速理论允许的最大恒速值*\/$/;"	m	struct:optConstParam
MAX_CURVE	OPTIMIZE/datacontrol/extractData.c	/^int MAX_CURVE;$/;"	v
MAX_CURVE	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_CURVE;$/;"	v
MAX_CUR_NUM	OPTIMIZE/datacontrol/read_binary_for_route.h	116;"	d
MAX_CUR_NUM	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	116;"	d
MAX_CUR_NUM	route_data.h	154;"	d
MAX_DATA_FRAME_SIZE	app_socket/protocal.h	14;"	d
MAX_FINAL_LENGTH	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^int MAX_FINAL_LENGTH;$/;"	v
MAX_FINAL_LENGTH	OPTIMIZE/optimize/optimize.c	/^int MAX_FINAL_LENGTH;$/;"	v
MAX_FINAL_LENGTH	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^int MAX_FINAL_LENGTH;$/;"	v
MAX_FINAL_LENGTH	OPTIMIZE/tools/optimize/optimize.c	/^int MAX_FINAL_LENGTH;$/;"	v
MAX_GEDATA	OPTIMIZE/datacontrol/extractData.c	/^int MAX_GEDATA;$/;"	v
MAX_GEDATA	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_GEDATA;$/;"	v
MAX_GRADIENT	OPTIMIZE/datacontrol/extractData.c	/^int MAX_GRADIENT;$/;"	v
MAX_GRADIENT	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_GRADIENT;$/;"	v
MAX_GRA_NUM	OPTIMIZE/datacontrol/read_binary_for_route.h	115;"	d
MAX_GRA_NUM	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	115;"	d
MAX_GRA_NUM	route_data.h	153;"	d
MAX_INITIALDATA	OPTIMIZE/datacontrol/extractData.c	/^int MAX_INITIALDATA;$/;"	v
MAX_INITIALDATA	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_INITIALDATA;$/;"	v
MAX_INTERVALRUNTIME	OPTIMIZE/datacontrol/extractData.c	/^int MAX_INTERVALRUNTIME;$/;"	v
MAX_INTERVALRUNTIME	OPTIMIZE/optimize/preprocess/preprocess.c	/^int MAX_INTERVALRUNTIME;$/;"	v
MAX_INTERVALRUNTIME	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_INTERVALRUNTIME;$/;"	v
MAX_INTERVALRUNTIME	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^int MAX_INTERVALRUNTIME;$/;"	v
MAX_LIMIT	OPTIMIZE/datacontrol/extractData.c	/^int MAX_LIMIT;$/;"	v
MAX_LIMIT	OPTIMIZE/optimize/common/optimizeTools.c	/^int MAX_LIMIT;$/;"	v
MAX_LIMIT	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_LIMIT;$/;"	v
MAX_LIMIT	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^int MAX_LIMIT;$/;"	v
MAX_LIMITSTRATEGY	OPTIMIZE/datacontrol/extractData.c	/^int MAX_LIMITSTRATEGY;$/;"	v
MAX_LIMITSTRATEGY	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_LIMITSTRATEGY;$/;"	v
MAX_LIM_NUM	OPTIMIZE/datacontrol/read_binary_for_route.h	117;"	d
MAX_LIM_NUM	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	117;"	d
MAX_LIM_NUM	route_data.h	155;"	d
MAX_MGRADIENT	OPTIMIZE/optimize/common/tractionCaculator.c	/^int MAX_MGRADIENT;$/;"	v
MAX_MGRADIENT	OPTIMIZE/optimize/preprocess/preprocess.c	/^int MAX_MGRADIENT;$/;"	v
MAX_MGRADIENT	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^int MAX_MGRADIENT;$/;"	v
MAX_MGRADIENT	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^int MAX_MGRADIENT;$/;"	v
MAX_MGRADIETTEMP	OPTIMIZE/optimize/preprocess/preprocess.c	65;"	d	file:
MAX_MGRADIETTEMP	OPTIMIZE/tools/optimize/preprocess/preprocess.c	65;"	d	file:
MAX_NEW_GRADIENTS	OPTIMIZE/optimize/preprocess/preprocess.c	/^int MAX_NEW_GRADIENTS;$/;"	v
MAX_NEW_GRADIENTS	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^int MAX_NEW_GRADIENTS;$/;"	v
MAX_OPTSCHLENGTH	OPTIMIZE/optimize/common/optimizeTools.c	/^int MAX_OPTSCHLENGTH;$/;"	v
MAX_OPTSCHLENGTH	OPTIMIZE/optimize/rawoptimize/rawOptimize.c	/^int MAX_OPTSCHLENGTH;$/;"	v
MAX_OPTSCHLENGTH	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^int MAX_OPTSCHLENGTH;$/;"	v
MAX_OPTSCHLENGTH	OPTIMIZE/tools/optimize/rawoptimize/rawOptimize.c	/^int MAX_OPTSCHLENGTH;$/;"	v
MAX_OPTSCHLENGTH	opt_init.c	/^int MAX_OPTSCHLENGTH;$/;"	v
MAX_RAWSTRATEGY	OPTIMIZE/datacontrol/extractData.c	/^int MAX_RAWSTRATEGY;$/;"	v
MAX_RAWSTRATEGY	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_RAWSTRATEGY;$/;"	v
MAX_RCV_BUF_SIZE	app_socket/app_socket.h	40;"	d
MAX_ROADCATEGORY	OPTIMIZE/datacontrol/extractData.c	/^int MAX_ROADCATEGORY;$/;"	v
MAX_ROADCATEGORY	OPTIMIZE/optimize/preprocess/roadCategory.c	/^int MAX_ROADCATEGORY;$/;"	v
MAX_ROADCATEGORY	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_ROADCATEGORY;$/;"	v
MAX_ROADCATEGORY	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^int MAX_ROADCATEGORY;$/;"	v
MAX_SND_BUF_SIZE	app_socket/app_socket.h	41;"	d
MAX_SOCKET_NUM	app_socket/app_socket.h	38;"	d
MAX_STATION	OPTIMIZE/datacontrol/extractData.c	/^int MAX_STATION;$/;"	v
MAX_STATION	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_STATION;$/;"	v
MAX_TASK_NUM	global.h	20;"	d
MAX_TELESEME	OPTIMIZE/datacontrol/extractData.c	/^int MAX_TELESEME;$/;"	v
MAX_TELESEME	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_TELESEME;$/;"	v
MAX_TIMESTRATEGY	OPTIMIZE/datacontrol/extractData.c	/^int MAX_TIMESTRATEGY;$/;"	v
MAX_TIMESTRATEGY	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_TIMESTRATEGY;$/;"	v
MAX_TUNNEL	OPTIMIZE/datacontrol/extractData.c	/^int MAX_TUNNEL;$/;"	v
MAX_TUNNEL	OPTIMIZE/tools/datacontrol/extractData.c	/^int MAX_TUNNEL;$/;"	v
MAX_TUN_NUM	route_data.h	156;"	d
MESSAGE_NODE	message_queue/message_queue.h	/^typedef struct message_node MESSAGE_NODE;$/;"	t	typeref:struct:message_node
MESSAGE_QUEUE	message_queue/message_queue.h	/^typedef struct message_queue MESSAGE_QUEUE;$/;"	t	typeref:struct:message_queue
MESSAGE_QUEUE_H_	message_queue/message_queue.h	14;"	d
MGRADIENT	OPTIMIZE/opt_definition.h	/^typedef struct mGradient MGRADIENT;$/;"	t	typeref:struct:mGradient
MGRADIENT	OPTIMIZE/tools/opt_definition.h	/^typedef struct mGradient MGRADIENT;$/;"	t	typeref:struct:mGradient
MINGEAR	OPTIMIZE/opt_definition.h	/^    int MINGEAR;\/**<标记机车最小的制动档位*\/$/;"	m	struct:optConstParam
MINGEAR	OPTIMIZE/tools/opt_definition.h	/^    int MINGEAR;\/**<标记机车最小的制动档位*\/$/;"	m	struct:optConstParam
MINV	OPTIMIZE/opt_definition.h	/^	float MINV;\/**<标记自动驾驶允许的最低速度*\/$/;"	m	struct:optConstParam
MINV	OPTIMIZE/tools/opt_definition.h	/^	float MINV;\/**<标记自动驾驶允许的最低速度*\/$/;"	m	struct:optConstParam
MODEL_INCLUDE_H_	app_socket/socket_include.h	10;"	d
MOREGEAR	OPTIMIZE/optimize/afterprocess/after_process.h	12;"	d
MOREGEAR	OPTIMIZE/tools/optimize/afterprocess/after_process.h	12;"	d
MUTEX_ERR	message_queue/schedule.h	/^    MUTEX_ERR = -2$/;"	e	enum:schedule_result
MXML_ADD_AFTER	conf_manage/xmlopt/mxml.h	64;"	d
MXML_ADD_BEFORE	conf_manage/xmlopt/mxml.h	63;"	d
MXML_ADD_TO_PARENT	conf_manage/xmlopt/mxml.h	65;"	d
MXML_CUSTOM	conf_manage/xmlopt/mxml.h	/^  MXML_CUSTOM				\/* Custom data @since Mini-XML 2.1@ *\/$/;"	e	enum:mxml_type_e
MXML_DESCEND	conf_manage/xmlopt/mxml.h	54;"	d
MXML_DESCEND_FIRST	conf_manage/xmlopt/mxml.h	56;"	d
MXML_ELEMENT	conf_manage/xmlopt/mxml.h	/^  MXML_ELEMENT,				\/* XML element with attributes *\/$/;"	e	enum:mxml_type_e
MXML_IGNORE	conf_manage/xmlopt/mxml.h	/^  MXML_IGNORE = -1,			\/* Ignore\/throw away node @since Mini-XML 2.3@ *\/$/;"	e	enum:mxml_type_e
MXML_IGNORE_CALLBACK	conf_manage/xmlopt/mxml.h	49;"	d
MXML_INTEGER	conf_manage/xmlopt/mxml.h	/^  MXML_INTEGER,				\/* Integer value *\/$/;"	e	enum:mxml_type_e
MXML_INTEGER_CALLBACK	conf_manage/xmlopt/mxml.h	42;"	d
MXML_NO_CALLBACK	conf_manage/xmlopt/mxml.h	41;"	d
MXML_NO_DESCEND	conf_manage/xmlopt/mxml.h	55;"	d
MXML_NO_PARENT	conf_manage/xmlopt/mxml.h	52;"	d
MXML_OPAQUE	conf_manage/xmlopt/mxml.h	/^  MXML_OPAQUE,				\/* Opaque string *\/$/;"	e	enum:mxml_type_e
MXML_OPAQUE_CALLBACK	conf_manage/xmlopt/mxml.h	44;"	d
MXML_REAL	conf_manage/xmlopt/mxml.h	/^  MXML_REAL,				\/* Real value *\/$/;"	e	enum:mxml_type_e
MXML_REAL_CALLBACK	conf_manage/xmlopt/mxml.h	46;"	d
MXML_SAX_CDATA	conf_manage/xmlopt/mxml.h	/^  MXML_SAX_CDATA,			\/* CDATA node *\/$/;"	e	enum:mxml_sax_event_e
MXML_SAX_COMMENT	conf_manage/xmlopt/mxml.h	/^  MXML_SAX_COMMENT,			\/* Comment node *\/$/;"	e	enum:mxml_sax_event_e
MXML_SAX_DATA	conf_manage/xmlopt/mxml.h	/^  MXML_SAX_DATA,			\/* Data node *\/$/;"	e	enum:mxml_sax_event_e
MXML_SAX_DIRECTIVE	conf_manage/xmlopt/mxml.h	/^  MXML_SAX_DIRECTIVE,			\/* Processing directive node *\/$/;"	e	enum:mxml_sax_event_e
MXML_SAX_ELEMENT_CLOSE	conf_manage/xmlopt/mxml.h	/^  MXML_SAX_ELEMENT_CLOSE,		\/* Element closed *\/$/;"	e	enum:mxml_sax_event_e
MXML_SAX_ELEMENT_OPEN	conf_manage/xmlopt/mxml.h	/^  MXML_SAX_ELEMENT_OPEN			\/* Element opened *\/$/;"	e	enum:mxml_sax_event_e
MXML_TAB	conf_manage/xmlopt/mxml.h	39;"	d
MXML_TEXT	conf_manage/xmlopt/mxml.h	/^  MXML_TEXT,				\/* Text fragment *\/$/;"	e	enum:mxml_type_e
MXML_TEXT_CALLBACK	conf_manage/xmlopt/mxml.h	48;"	d
MXML_VERSION	conf_manage/xmlopt/config.h	33;"	d
MXML_WS_AFTER_CLOSE	conf_manage/xmlopt/mxml.h	61;"	d
MXML_WS_AFTER_OPEN	conf_manage/xmlopt/mxml.h	59;"	d
MXML_WS_BEFORE_CLOSE	conf_manage/xmlopt/mxml.h	60;"	d
MXML_WS_BEFORE_OPEN	conf_manage/xmlopt/mxml.h	58;"	d
NEARLIMIT	OPTIMIZE/opt_definition.h	/^	float NEARLIMIT;\/**<档位拉平过程中，判断是否距离距离限速较近的速度阈值*\/$/;"	m	struct:optConstParam
NEARLIMIT	OPTIMIZE/tools/opt_definition.h	/^	float NEARLIMIT;\/**<档位拉平过程中，判断是否距离距离限速较近的速度阈值*\/$/;"	m	struct:optConstParam
NONE_FLAG	OPTIMIZE/opt_definition.h	/^	 NONE_FLAG  = 0  \/**没有flag*\/$/;"	e	enum:opt_flag
NONE_FLAG	OPTIMIZE/tools/opt_definition.h	/^	 NONE_FLAG  = 0  \/**没有flag*\/$/;"	e	enum:opt_flag
NOT_FIND_STRATEGY	OPTIMIZE/exception/exception.h	/^	NOT_FIND_STRATEGY =72,   \/\/!< 未找到策略$/;"	e	enum:optimize_code
NOT_FIND_STRATEGY	OPTIMIZE/tools/exception/exception.h	/^	NOT_FIND_STRATEGY =72,   \/\/!< 未找到策略$/;"	e	enum:optimize_code
NUM	conf_manage/xml_extract.c	9;"	d	file:
NUM0	conf_manage/xml_extract.c	6;"	d	file:
NUM1	conf_manage/xml_extract.c	7;"	d	file:
OBJ	Makefile	/^OBJ := TO_CORE_0 TO_CORE_1 TO_CORE_2 TO_CORE_3$/;"	m
OPTCONSTPARAM	OPTIMIZE/opt_definition.h	/^typedef struct optConstParam OPTCONSTPARAM;$/;"	t	typeref:struct:optConstParam
OPTCONSTPARAM	OPTIMIZE/tools/opt_definition.h	/^typedef struct optConstParam OPTCONSTPARAM;$/;"	t	typeref:struct:optConstParam
OPTFLAG	OPTIMIZE/opt_definition.h	/^typedef enum opt_flag OPTFLAG;$/;"	t	typeref:enum:opt_flag
OPTFLAG	OPTIMIZE/tools/opt_definition.h	/^typedef enum opt_flag OPTFLAG;$/;"	t	typeref:enum:opt_flag
OPTIMIZERESULT	OPTIMIZE/opt_definition.h	/^typedef struct optimizeResult OPTIMIZERESULT;$/;"	t	typeref:struct:optimizeResult
OPTIMIZERESULT	OPTIMIZE/tools/opt_definition.h	/^typedef struct optimizeResult OPTIMIZERESULT;$/;"	t	typeref:struct:optimizeResult
OPTIMIZESTRATEGY	conf_manage/xml_extract.h	/^	OPTIMIZESTRATEGY,$/;"	e	enum:CFG_GROUP
OPTIMIZETOOLS_H_	OPTIMIZE/optimize/common/optimizeTools.h	10;"	d
OPTIMIZETOOLS_H_	OPTIMIZE/tools/optimize/common/optimizeTools.h	10;"	d
OPTIMIZE_CODE	OPTIMIZE/exception/exception.h	/^}OPTIMIZE_CODE;$/;"	t	typeref:enum:optimize_code
OPTIMIZE_CODE	OPTIMIZE/tools/exception/exception.h	/^}OPTIMIZE_CODE;$/;"	t	typeref:enum:optimize_code
OPTIMIZE_CURVE_H_	OPTIMIZE/optimize_curve.h	8;"	d
OPTIMIZE_CURVE_H_	OPTIMIZE/tools/optimize_curve.h	8;"	d
OPTIMIZE_OPTIMIZE_AFTERPROCESS_AFTER_PROCESS_H_	OPTIMIZE/optimize/afterprocess/after_process.h	8;"	d
OPTIMIZE_OPTIMIZE_AFTERPROCESS_AFTER_PROCESS_H_	OPTIMIZE/tools/optimize/afterprocess/after_process.h	8;"	d
OPTIMIZE_OPTIMIZE_AFTERPROCESS_GEARTRASFER_H_	OPTIMIZE/optimize/afterprocess/tmp_gear_trasfer.h	10;"	d
OPTIMIZE_OPTIMIZE_AFTERPROCESS_GEARTRASFER_H_	OPTIMIZE/tools/optimize/afterprocess/tmp_gear_trasfer.h	10;"	d
OPTIMIZE_RESULT	OPTIMIZE/exception/exception.h	/^}OPTIMIZE_RESULT;$/;"	t	typeref:struct:optimize_result
OPTIMIZE_RESULT	OPTIMIZE/tools/exception/exception.h	/^}OPTIMIZE_RESULT;$/;"	t	typeref:struct:optimize_result
OPTIMIZE_SUCCESS	OPTIMIZE/exception/exception.h	/^	OPTIMIZE_SUCCESS =1 ,    \/\/!< 优化成功$/;"	e	enum:optimize_code
OPTIMIZE_SUCCESS	OPTIMIZE/tools/exception/exception.h	/^	OPTIMIZE_SUCCESS =1 ,    \/\/!< 优化成功$/;"	e	enum:optimize_code
OPTSCH	OPTIMIZE/opt_definition.h	/^typedef struct optSch OPTSCH;$/;"	t	typeref:struct:optSch
OPTSCH	OPTIMIZE/tools/opt_definition.h	/^typedef struct optSch OPTSCH;$/;"	t	typeref:struct:optSch
OPTSCHCURVE	OPTIMIZE/opt_definition.h	/^typedef struct opt_sch_curve OPTSCHCURVE;$/;"	t	typeref:struct:opt_sch_curve
OPTSCHCURVE	OPTIMIZE/tools/opt_definition.h	/^typedef struct opt_sch_curve OPTSCHCURVE;$/;"	t	typeref:struct:opt_sch_curve
OPT_DEBUG	log.h	45;"	d
OPT_EXTR_CODE	OPTIMIZE/exception/exception.h	/^}OPT_EXTR_CODE;$/;"	t	typeref:enum:opt_extr_code
OPT_EXTR_CODE	OPTIMIZE/tools/exception/exception.h	/^}OPT_EXTR_CODE;$/;"	t	typeref:enum:opt_extr_code
OPT_EXTR_RESULT	OPTIMIZE/exception/exception.h	/^}OPT_EXTR_RESULT;$/;"	t	typeref:struct:opt_extr_result
OPT_EXTR_RESULT	OPTIMIZE/tools/exception/exception.h	/^}OPT_EXTR_RESULT;$/;"	t	typeref:struct:opt_extr_result
OPT_EXTR_SUCCESS	OPTIMIZE/exception/exception.h	/^    OPT_EXTR_SUCCESS = 1,  \/\/!< 文件读取成功$/;"	e	enum:opt_extr_code
OPT_EXTR_SUCCESS	OPTIMIZE/tools/exception/exception.h	/^    OPT_EXTR_SUCCESS = 1,  \/\/!< 文件读取成功$/;"	e	enum:opt_extr_code
OPT_FILE_SEEK_ERROR	OPTIMIZE/exception/exception.h	/^	OPT_FILE_SEEK_ERROR=-4,\/\/!<文件读取定位失败$/;"	e	enum:opt_extr_code
OPT_FILE_SEEK_ERROR	OPTIMIZE/tools/exception/exception.h	/^	OPT_FILE_SEEK_ERROR=-4,\/\/!<文件读取定位失败$/;"	e	enum:opt_extr_code
OPT_MALLOC_ERROR	OPTIMIZE/exception/exception.h	/^    OPT_MALLOC_ERROR=-2,\/\/!<内存分配错误$/;"	e	enum:opt_extr_code
OPT_MALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^    OPT_MALLOC_ERROR=-2,\/\/!<内存分配错误$/;"	e	enum:opt_extr_code
OPT_OPEN_ERROR	OPTIMIZE/exception/exception.h	/^    OPT_OPEN_ERROR = -1,   \/\/!< 文件打开失败$/;"	e	enum:opt_extr_code
OPT_OPEN_ERROR	OPTIMIZE/tools/exception/exception.h	/^    OPT_OPEN_ERROR = -1,   \/\/!< 文件打开失败$/;"	e	enum:opt_extr_code
OPT_SRC	Makefile	/^OPT_SRC := $(wildcard .\/OPTIMIZE\/*.c) $(wildcard .\/OPTIMIZE\/datacontrol\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/common\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/limitadjust\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/preprocess\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/rawoptimize\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/rawoptimize\/base\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/timeadjust\/*.c) $(wildcard .\/OPTIMIZE\/tools\/*.c) $(wildcard .\/OPTIMIZE\/xmlopt\/*.c) $(wildcard .\/OPTIMIZE\/drivecontrol\/*.c) $(wildcard .\/OPTIMIZE\/exception\/*.c) $(wildcard .\/OPTIMIZE\/optimize\/afterprocess\/*.c) $(wildcard .\/conf_manage\/*.c) $(wildcard .\/conf_manage\/xmlopt\/*.c) $(wildcard .\/OPTIMIZE\/drivecontrol\/*.c) $(wildcard .\/OPTIMIZE\/drivecontrol\/rt_process_n_controller\/*.c) $(wildcard .\/OPTIMIZE\/drivecontrol\/linked_list_operations\/*.c) $(wildcard .\/OPTIMIZE\/drivecontrol\/train_model_4_testing\/*.c)		$/;"	m
OPT_TYPE_TRANSFORM_ERROR	OPTIMIZE/exception/exception.h	/^	OPT_TYPE_TRANSFORM_ERROR=-5\/\/!<数据类型转换及数据范围错误$/;"	e	enum:opt_extr_code
OPT_TYPE_TRANSFORM_ERROR	OPTIMIZE/tools/exception/exception.h	/^	OPT_TYPE_TRANSFORM_ERROR=-5\/\/!<数据类型转换及数据范围错误$/;"	e	enum:opt_extr_code
PARAMCFG	conf_manage/xml_extract.h	/^struct PARAMCFG {\/\/PARAMCG - parameterconfig$/;"	s
PARTGRADIENT	OPTIMIZE/opt_definition.h	/^typedef struct partGradient PARTGRADIENT;$/;"	t	typeref:struct:partGradient
PARTGRADIENT	OPTIMIZE/tools/opt_definition.h	/^typedef struct partGradient PARTGRADIENT;$/;"	t	typeref:struct:partGradient
POSTINITLENGTH	OPTIMIZE/opt_definition.h	/^	int POSTINITLENGTH;\/**<优化中拉平档位所新生成的曲线的初始长度（临时限速拉平所新生成的曲线）*\/$/;"	m	struct:optConstParam
POSTINITLENGTH	OPTIMIZE/tools/opt_definition.h	/^	int POSTINITLENGTH;\/**<优化中拉平档位所新生成的曲线的初始长度（临时限速拉平所新生成的曲线）*\/$/;"	m	struct:optConstParam
PRECISION	OPTIMIZE/opt_definition.h	/^	float PRECISION; \/**<判断浮点类型是否相等的精度*\/$/;"	m	struct:optConstParam
PRECISION	OPTIMIZE/tools/opt_definition.h	/^	float PRECISION; \/**<判断浮点类型是否相等的精度*\/$/;"	m	struct:optConstParam
PREPROCESS_H_	OPTIMIZE/optimize/preprocess.h	8;"	d
PREPROCESS_H_	OPTIMIZE/tools/optimize/preprocess.h	8;"	d
PRE_FIND_INDEX_ERROR	OPTIMIZE/exception/exception.h	/^	 PRE_FIND_INDEX_ERROR =-2,    \/\/!< 索引数组无法找到$/;"	e	enum:pre_process_code
PRE_FIND_INDEX_ERROR	OPTIMIZE/tools/exception/exception.h	/^	 PRE_FIND_INDEX_ERROR =-2,    \/\/!< 索引数组无法找到$/;"	e	enum:pre_process_code
PRE_MALLOC_ERROR	OPTIMIZE/exception/exception.h	/^	 PRE_MALLOC_ERROR=-1,         \/\/!< 内存分配错误$/;"	e	enum:pre_process_code
PRE_MALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^	 PRE_MALLOC_ERROR=-1,         \/\/!< 内存分配错误$/;"	e	enum:pre_process_code
PRE_NOT_FIND_CZ	OPTIMIZE/exception/exception.h	/^	 PRE_NOT_FIND_CZ=-7$/;"	e	enum:pre_process_code
PRE_NOT_FIND_CZ	OPTIMIZE/tools/exception/exception.h	/^	 PRE_NOT_FIND_CZ=-7$/;"	e	enum:pre_process_code
PRE_NOT_FIND_LIMIT	OPTIMIZE/exception/exception.h	/^	 PRE_NOT_FIND_LIMIT=-3,       \/\/!< 找不到限速$/;"	e	enum:pre_process_code
PRE_NOT_FIND_LIMIT	OPTIMIZE/tools/exception/exception.h	/^	 PRE_NOT_FIND_LIMIT=-3,       \/\/!< 找不到限速$/;"	e	enum:pre_process_code
PRE_PROCESS_CODE	OPTIMIZE/exception/exception.h	/^}PRE_PROCESS_CODE;$/;"	t	typeref:enum:pre_process_code
PRE_PROCESS_CODE	OPTIMIZE/tools/exception/exception.h	/^}PRE_PROCESS_CODE;$/;"	t	typeref:enum:pre_process_code
PRE_PROCESS_RESULT	OPTIMIZE/exception/exception.h	/^}PRE_PROCESS_RESULT;$/;"	t	typeref:struct:pre_process_result
PRE_PROCESS_RESULT	OPTIMIZE/tools/exception/exception.h	/^}PRE_PROCESS_RESULT;$/;"	t	typeref:struct:pre_process_result
PRE_PROCESS_SUCCESS	OPTIMIZE/exception/exception.h	/^     PRE_PROCESS_SUCCESS =1,\/\/!< 预处理正常$/;"	e	enum:pre_process_code
PRE_PROCESS_SUCCESS	OPTIMIZE/tools/exception/exception.h	/^     PRE_PROCESS_SUCCESS =1,\/\/!< 预处理正常$/;"	e	enum:pre_process_code
PROTOCAL_FAILURE	app_socket/protocal.h	/^    PROTOCAL_FAILURE = -1,$/;"	e	enum:protocal_result
PROTOCAL_H_	app_socket/protocal.h	4;"	d
PROTOCAL_MALLOC_ERROR	app_socket/protocal.h	/^    PROTOCAL_MALLOC_ERROR = -23$/;"	e	enum:protocal_result
PROTOCAL_RESULT	app_socket/protocal.h	/^}PROTOCAL_RESULT;$/;"	t	typeref:enum:protocal_result
PROTOCAL_SUCCESS	app_socket/protocal.h	/^    PROTOCAL_SUCCESS = 0,$/;"	e	enum:protocal_result
PUSHERENGINE	OPTIMIZE/opt_definition.h	/^	int PUSHERENGINE;\/**<手动区域中非贯通实验即补机段标识*\/$/;"	m	struct:optConstParam
PUSHERENGINE	OPTIMIZE/opt_definition.h	/^typedef struct pusherEngine PUSHERENGINE;$/;"	t	typeref:struct:pusherEngine
PUSHERENGINE	OPTIMIZE/tools/opt_definition.h	/^	int PUSHERENGINE;\/**<手动区域中非贯通实验即补机段标识*\/$/;"	m	struct:optConstParam
PUSHERENGINE	OPTIMIZE/tools/opt_definition.h	/^typedef struct pusherEngine PUSHERENGINE;$/;"	t	typeref:struct:pusherEngine
PrmtCfg_value	conf_manage/xml_extract.h	/^	char PrmtCfg_value[ARRAY_LEN];\/\/PrmtCfg_value - ParameterConfig value, 	用于存放ParameterConfig中Property的value值$/;"	m	struct:EXTR_OPT_RTN
QUEUE_CREATE_FAILURE	message_queue/message_queue.h	/^    QUEUE_CREATE_FAILURE = 1,$/;"	e	enum:queue_manage_result
QUEUE_EMPTY	message_queue/message_queue.h	/^    QUEUE_EMPTY = 23,$/;"	e	enum:queue_manage_result
QUEUE_MANAGE_FAILURE	message_queue/message_queue.h	/^    QUEUE_MANAGE_FAILURE = -1,$/;"	e	enum:queue_manage_result
QUEUE_MANAGE_RESULT	message_queue/message_queue.h	/^}QUEUE_MANAGE_RESULT;$/;"	t	typeref:enum:queue_manage_result
QUEUE_MANAGE_SUCCESS	message_queue/message_queue.h	/^    QUEUE_MANAGE_SUCCESS = 0,$/;"	e	enum:queue_manage_result
QUEUE_NOT_EXIST	message_queue/message_queue.h	/^    QUEUE_NOT_EXIST = 22,$/;"	e	enum:queue_manage_result
QUEUE_NUM	global.h	23;"	d
RAWOPTIMIZE_H_	OPTIMIZE/optimize/rawOptimize.h	8;"	d
RAWOPTIMIZE_H_	OPTIMIZE/tools/optimize/rawOptimize.h	8;"	d
RAWSTRATEGY_H_	OPTIMIZE/optimize/rawoptimize/rawStrategy.h	8;"	d
RAWSTRATEGY_H_	OPTIMIZE/tools/optimize/rawoptimize/rawStrategy.h	8;"	d
RAWSTRFLAGS	OPTIMIZE/opt_definition.h	/^typedef struct strategyFlags RAWSTRFLAGS;$/;"	t	typeref:struct:strategyFlags
RAWSTRFLAGS	OPTIMIZE/tools/opt_definition.h	/^typedef struct strategyFlags RAWSTRFLAGS;$/;"	t	typeref:struct:strategyFlags
RAW_MALLOC_ERROR	OPTIMIZE/exception/exception.h	/^	RAW_MALLOC_ERROR=-1,       \/\/!< 内存分配失败$/;"	e	enum:raw_optimize_code
RAW_MALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^	RAW_MALLOC_ERROR=-1,       \/\/!< 内存分配失败$/;"	e	enum:raw_optimize_code
RAW_NOT_FIND_STRATEGY	OPTIMIZE/exception/exception.h	/^	RAW_NOT_FIND_STRATEGY = -3 \/\/!< 未找到策略$/;"	e	enum:raw_optimize_code
RAW_NOT_FIND_STRATEGY	OPTIMIZE/tools/exception/exception.h	/^	RAW_NOT_FIND_STRATEGY = -3 \/\/!< 未找到策略$/;"	e	enum:raw_optimize_code
RAW_OPTIMIZE_CODE	OPTIMIZE/exception/exception.h	/^}RAW_OPTIMIZE_CODE;$/;"	t	typeref:enum:raw_optimize_code
RAW_OPTIMIZE_CODE	OPTIMIZE/tools/exception/exception.h	/^}RAW_OPTIMIZE_CODE;$/;"	t	typeref:enum:raw_optimize_code
RAW_OPTIMIZE_RESULT	OPTIMIZE/exception/exception.h	/^}RAW_OPTIMIZE_RESULT;$/;"	t	typeref:struct:raw_optimize_result
RAW_OPTIMIZE_RESULT	OPTIMIZE/tools/exception/exception.h	/^}RAW_OPTIMIZE_RESULT;$/;"	t	typeref:struct:raw_optimize_result
RAW_OPTIMIZE_SUCCESS	OPTIMIZE/exception/exception.h	/^	RAW_OPTIMIZE_SUCCESS =1,\/\/!< 原始优化计算成功$/;"	e	enum:raw_optimize_code
RAW_OPTIMIZE_SUCCESS	OPTIMIZE/tools/exception/exception.h	/^	RAW_OPTIMIZE_SUCCESS =1,\/\/!< 原始优化计算成功$/;"	e	enum:raw_optimize_code
RAW_REALLOC_ERROR	OPTIMIZE/exception/exception.h	/^	RAW_REALLOC_ERROR=-2 ,     \/\/!< 内存再分配失败$/;"	e	enum:raw_optimize_code
RAW_REALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^	RAW_REALLOC_ERROR=-2 ,     \/\/!< 内存再分配失败$/;"	e	enum:raw_optimize_code
RCV_FAILURE	app_socket/app_socket.h	/^    RCV_FAILURE = -6,$/;"	e	enum:socket_result
READY	message_queue/event.h	/^    READY = 0,      \/*创建完成*\/$/;"	e	enum:event_status
READ_BINARY_FOR_TEST_H_	OPTIMIZE/datacontrol/read_binary_for_route.h	4;"	d
READ_BINARY_FOR_TEST_H_	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	4;"	d
REALLOC_ERROR	OPTIMIZE/exception/exception.h	/^	REALLOC_ERROR = 61,      \/\/!< 内存再次分配失败$/;"	e	enum:optimize_code
REALLOC_ERROR	OPTIMIZE/tools/exception/exception.h	/^	REALLOC_ERROR = 61,      \/\/!< 内存再次分配失败$/;"	e	enum:optimize_code
REALTIME_INFO	message_queue/event.h	/^    REALTIME_INFO = 0x01,$/;"	e	enum:event_source
REALTIME_PROCESS_H_	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.h	9;"	d
REALTIME_PROCESS_H_	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.h	9;"	d
REGISTER_FAILURE	app_socket/app_socket.h	/^    REGISTER_FAILURE = -4,$/;"	e	enum:socket_result
ROADCATEGORY	OPTIMIZE/opt_definition.h	/^typedef struct roadCategory ROADCATEGORY;$/;"	t	typeref:struct:roadCategory
ROADCATEGORY	OPTIMIZE/tools/opt_definition.h	/^typedef struct roadCategory ROADCATEGORY;$/;"	t	typeref:struct:roadCategory
ROADCATEGORY_H_	OPTIMIZE/optimize/preprocess/roadCategory.h	9;"	d
ROADCATEGORY_H_	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	9;"	d
ROADSTATIONTIME	conf_manage/xml_extract.h	/^	ROADSTATIONTIME$/;"	e	enum:CFG_GROUP
ROUTEINFO	conf_manage/xml_extract.h	/^	ROUTEINFO,$/;"	e	enum:CFG_GROUP
ROUTEINFO	conf_manage/xml_extract.h	/^struct ROUTEINFO{$/;"	s
ROUTE_DATA_ERROR	OPTIMIZE/exception/exception.h	/^	ROUTE_DATA_ERROR=32,\/\/!<未找到限速$/;"	e	enum:optimize_code
ROUTE_DATA_ERROR	OPTIMIZE/tools/exception/exception.h	/^	ROUTE_DATA_ERROR=32,\/\/!<未找到限速$/;"	e	enum:optimize_code
ROUTE_DATA_H_	route_data.h	10;"	d
ROUTE_LIST	OPTIMIZE/datacontrol/read_binary_for_route.h	/^}ROUTE_LIST;$/;"	t	typeref:struct:route_list
ROUTE_LIST	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^}ROUTE_LIST;$/;"	t	typeref:struct:route_list
ROUTE_LIST	route_data.h	/^}ROUTE_LIST;$/;"	t	typeref:struct:route_list
ROUTE_NODE	OPTIMIZE/datacontrol/read_binary_for_route.h	/^}ROUTE_NODE;$/;"	t	typeref:struct:route_node
ROUTE_NODE	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^}ROUTE_NODE;$/;"	t	typeref:struct:route_node
ROUTE_NODE	route_data.h	/^}ROUTE_NODE;$/;"	t	typeref:struct:route_node
ROUTE_PAR	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^typedef struct route_par ROUTE_PAR;$/;"	t	typeref:struct:route_par
ROUTE_PAR	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^typedef struct route_par ROUTE_PAR;$/;"	t	typeref:struct:route_par
RTDEFINITION_H_	OPTIMIZE/drivecontrol/rt_definition.h	10;"	d
RTDEFINITION_H_	OPTIMIZE/tools/drivecontrol/rt_definition.h	10;"	d
RTGLOBALVAR_H_	OPTIMIZE/drivecontrol/rt_global_var.h	8;"	d
RTGLOBALVAR_H_	OPTIMIZE/tools/drivecontrol/rt_global_var.h	8;"	d
RT_ARR_FLAG	realtime_data.h	/^}RT_ARR_FLAG;   \/\/有实时信息到达时的flag$/;"	t	typeref:struct:__anon1
RT_DATA	realtime_data.h	/^} RT_DATA;$/;"	t	typeref:struct:_realtime_data
RT_EVENT_FLAG	realtime_data.h	/^} RT_EVENT_FLAG;$/;"	t	typeref:struct:_realtime_event_flag
RT_FLAG	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct rt_flag RT_FLAG;$/;"	t	typeref:struct:rt_flag
RT_FLAG	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct rt_flag RT_FLAG;$/;"	t	typeref:struct:rt_flag
RT_GA_INFO	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct grade_ability_info RT_GA_INFO;$/;"	t	typeref:struct:grade_ability_info
RT_GA_INFO	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct grade_ability_info RT_GA_INFO;$/;"	t	typeref:struct:grade_ability_info
RT_INDEX	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct rt_index RT_INDEX;$/;"	t	typeref:struct:rt_index
RT_INDEX	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct rt_index RT_INDEX;$/;"	t	typeref:struct:rt_index
RT_INOUT	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct rt_inout RT_INOUT;$/;"	t	typeref:struct:rt_inout
RT_INOUT	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct rt_inout RT_INOUT;$/;"	t	typeref:struct:rt_inout
RT_INPUT	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct rt_input RT_INPUT;$/;"	t	typeref:struct:rt_input
RT_INPUT	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct rt_input RT_INPUT;$/;"	t	typeref:struct:rt_input
RT_LOCATE_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_LOCATE_FAILURE,$/;"	e	enum:rt_process_result
RT_LOCATE_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_LOCATE_FAILURE,$/;"	e	enum:rt_process_result
RT_LOCK_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_LOCK_FAILURE,$/;"	e	enum:rt_process_result
RT_LOCK_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_LOCK_FAILURE,$/;"	e	enum:rt_process_result
RT_MEMORRY_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_MEMORRY_FAILURE,$/;"	e	enum:rt_process_result
RT_MEMORRY_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_MEMORRY_FAILURE,$/;"	e	enum:rt_process_result
RT_NOREACH_OPTRESULT	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_NOREACH_OPTRESULT,$/;"	e	enum:rt_process_result
RT_NOREACH_OPTRESULT	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_NOREACH_OPTRESULT,$/;"	e	enum:rt_process_result
RT_NS_INFO	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct next_station_info RT_NS_INFO;$/;"	t	typeref:struct:next_station_info
RT_NS_INFO	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct next_station_info RT_NS_INFO;$/;"	t	typeref:struct:next_station_info
RT_OPR_ERROR	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_OPR_ERROR,$/;"	e	enum:rt_process_result
RT_OPR_ERROR	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_OPR_ERROR,$/;"	e	enum:rt_process_result
RT_OSPEED_EST_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_OSPEED_EST_FAILURE,$/;"	e	enum:rt_process_result
RT_OSPEED_EST_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_OSPEED_EST_FAILURE,$/;"	e	enum:rt_process_result
RT_OS_INFO	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct over_speed_info RT_OS_INFO;$/;"	t	typeref:struct:over_speed_info
RT_OS_INFO	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct over_speed_info RT_OS_INFO;$/;"	t	typeref:struct:over_speed_info
RT_OUTPUT	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef struct rt_output RT_OUTPUT;$/;"	t	typeref:struct:rt_output
RT_OUTPUT	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef struct rt_output RT_OUTPUT;$/;"	t	typeref:struct:rt_output
RT_PASS_OPTRESULT	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_PASS_OPTRESULT,$/;"	e	enum:rt_process_result
RT_PASS_OPTRESULT	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_PASS_OPTRESULT,$/;"	e	enum:rt_process_result
RT_RESULT	OPTIMIZE/drivecontrol/rt_definition.h	/^} RT_RESULT;$/;"	t	typeref:enum:rt_process_result
RT_RESULT	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^} RT_RESULT;$/;"	t	typeref:enum:rt_process_result
RT_SLEEP_USEC	OPTIMIZE/drivecontrol/rt_global_var.h	28;"	d
RT_SLEEP_USEC	OPTIMIZE/tools/drivecontrol/rt_global_var.h	28;"	d
RT_SUCCESS	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_SUCCESS = 0,$/;"	e	enum:rt_process_result
RT_SUCCESS	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_SUCCESS = 0,$/;"	e	enum:rt_process_result
RT_TEMPOPT_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_TEMPOPT_FAILURE,$/;"	e	enum:rt_process_result
RT_TEMPOPT_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_TEMPOPT_FAILURE,$/;"	e	enum:rt_process_result
RT_T_EST_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_T_EST_FAILURE,$/;"	e	enum:rt_process_result
RT_T_EST_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_T_EST_FAILURE,$/;"	e	enum:rt_process_result
RT_UNLOCK_FAILURE	OPTIMIZE/drivecontrol/rt_definition.h	/^		RT_UNLOCK_FAILURE,$/;"	e	enum:rt_process_result
RT_UNLOCK_FAILURE	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^		RT_UNLOCK_FAILURE,$/;"	e	enum:rt_process_result
RUNNING	message_queue/event.h	/^    RUNNING = 2,    \/*正在运行*\/$/;"	e	enum:event_status
RUNNING_TRAIN_H_	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	9;"	d
RUNNING_TRAIN_H_	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	9;"	d
RUN_THROUGH_TEST	OPTIMIZE/opt_definition.h	/^	 RUN_THROUGH_TEST = 79,\/**<贯通实验*\/            \/\/!< RUN_THROUGH_TEST$/;"	e	enum:opt_flag
RUN_THROUGH_TEST	OPTIMIZE/tools/opt_definition.h	/^	 RUN_THROUGH_TEST = 79,\/**<贯通实验*\/            \/\/!< RUN_THROUGH_TEST$/;"	e	enum:opt_flag
RouteInfo_len	conf_manage/xml_extract.h	/^	int RouteInfo_len;$/;"	m	struct:EXTR_ROUTEINFO
RouteInfo_p	conf_manage/xml_extract.h	/^	struct PARAMCFG *RouteInfo_p;$/;"	m	struct:EXTR_ROUTEINFO	typeref:struct:EXTR_ROUTEINFO::PARAMCFG
SCHEDULE_FAILURE	message_queue/schedule.h	/^    SCHEDULE_FAILURE = -1,$/;"	e	enum:schedule_result
SCHEDULE_H_	message_queue/schedule.h	3;"	d
SCHEDULE_RESULT	message_queue/schedule.h	/^}SCHEDULE_RESULT;$/;"	t	typeref:enum:schedule_result
SCHEDULE_SUCCESS	message_queue/schedule.h	/^    SCHEDULE_SUCCESS = 0,$/;"	e	enum:schedule_result
SND_FAILURE	app_socket/app_socket.h	/^    SND_FAILURE = -7$/;"	e	enum:socket_result
SOCKET_CONNECT_FAILURE	app_socket/app_socket.h	/^    SOCKET_CONNECT_FAILURE = -2,$/;"	e	enum:socket_result
SOCKET_FAILURE	app_socket/app_socket.h	/^    SOCKET_FAILURE = -1,$/;"	e	enum:socket_result
SOCKET_NOT_EXIST	app_socket/app_socket.h	/^    SOCKET_NOT_EXIST = -5,$/;"	e	enum:socket_result
SOCKET_RESULT	app_socket/app_socket.h	/^}SOCKET_RESULT;$/;"	t	typeref:enum:socket_result
SOCKET_SND_FAILURE	app_socket/protocal.h	/^    SOCKET_SND_FAILURE = -11,$/;"	e	enum:protocal_result
SOCKET_SUCCESS	app_socket/app_socket.h	/^    SOCKET_SUCCESS = 0,$/;"	e	enum:socket_result
SOCKET_TYPE_0	app_socket/app_socket.h	31;"	d
SOCKET_TYPE_1	app_socket/app_socket.h	32;"	d
SOCKET_TYPE_2	app_socket/app_socket.h	33;"	d
SOCKET_TYPE_3	app_socket/app_socket.h	34;"	d
SOCKET_TYPE_4	app_socket/app_socket.h	35;"	d
SOCKET_TYPE_5	app_socket/app_socket.h	36;"	d
SOCKET_TYPE_ERR	app_socket/protocal.h	/^    SOCKET_TYPE_ERR = -10,$/;"	e	enum:protocal_result
SPEED_AND_LOCATION	realtime_data.h	/^} SPEED_AND_LOCATION;$/;"	t	typeref:struct:_speed_and_location
SRC	Makefile	/^SRC := $(wildcard *.c) $(wildcard threadpool\/*.c) $(wildcard app_socket\/*.c) $(wildcard .\/message_queue\/*.c) $/;"	m
SSTEP	OPTIMIZE/opt_definition.h	/^	float SSTEP;\/**<计算空气制动的距离步长*\/$/;"	m	struct:optConstParam
SSTEP	OPTIMIZE/tools/opt_definition.h	/^	float SSTEP;\/**<计算空气制动的距离步长*\/$/;"	m	struct:optConstParam
STATION	OPTIMIZE/opt_definition.h	/^typedef struct station STATION;$/;"	t	typeref:struct:station
STATION	OPTIMIZE/tools/opt_definition.h	/^typedef struct station STATION;$/;"	t	typeref:struct:station
STATIONCOUNT	OPTIMIZE/optimize/preprocess/roadCategory.h	16;"	d
STATIONCOUNT	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	16;"	d
SYSTEM_STATUS	to_status.h	/^}SYSTEM_STATUS;$/;"	t	typeref:enum:system_status
SYS_AUTOCONTROL	to_status.h	/^    SYS_AUTOCONTROL = 6$/;"	e	enum:system_status
SYS_FAULT	to_status.h	/^    SYS_FAULT = 1,$/;"	e	enum:system_status
SYS_INIT	to_status.h	/^    SYS_INIT = 0,$/;"	e	enum:system_status
SYS_LAUNCHED	to_status.h	/^    SYS_LAUNCHED = 3,$/;"	e	enum:system_status
SYS_MAINTENANCE	to_status.h	/^    SYS_MAINTENANCE = 2,$/;"	e	enum:system_status
SYS_NORMAL	to_status.h	/^    SYS_NORMAL = 5,$/;"	e	enum:system_status
SYS_STANDBY	to_status.h	/^    SYS_STANDBY = 4,$/;"	e	enum:system_status
TARGETDIR_cont0	Makefile	/^TARGETDIR_cont0 := ~\/rootfs\/rootfs_am3517_cont00\/root\/$/;"	m
TARGETDIR_cont1	Makefile	/^TARGETDIR_cont1 := ~\/rootfs\/rootfs_am3517_cont01\/root\/$/;"	m
TARGETDIR_cont2	Makefile	/^TARGETDIR_cont2 := ~\/rootfs\/rootfs_am3517_cont10\/root\/$/;"	m
TARGETDIR_cont3	Makefile	/^TARGETDIR_cont3 := ~\/rootfs\/rootfs_am3517_cont11\/root\/$/;"	m
TELESEME	OPTIMIZE/opt_definition.h	/^typedef struct teleseme TELESEME;$/;"	t	typeref:struct:teleseme
TELESEME	OPTIMIZE/tools/opt_definition.h	/^typedef struct teleseme TELESEME;$/;"	t	typeref:struct:teleseme
THREADPOOL_FLAG_AUTO	threadpool/threadpool.h	/^	THREADPOOL_FLAG_AUTO,$/;"	e	enum:__anon6
THREADPOOL_FLAG_AVG	threadpool/threadpool.h	/^	THREADPOOL_FLAG_AVG,$/;"	e	enum:__anon6
THREADPOOL_FLAG_COMMON	threadpool/threadpool.h	/^	THREADPOOL_FLAG_COMMON	= 0,$/;"	e	enum:__anon6
THREAD_ERROR	app_socket/protocal.h	/^    THREAD_ERROR = -22,$/;"	e	enum:protocal_result
THREAD_NUM	global.h	19;"	d
THROUGHEXPERT	OPTIMIZE/opt_definition.h	/^	int THROUGHEXPERT;\/**<手动区域中贯通实验标识*\/$/;"	m	struct:optConstParam
THROUGHEXPERT	OPTIMIZE/tools/opt_definition.h	/^	int THROUGHEXPERT;\/**<手动区域中贯通实验标识*\/$/;"	m	struct:optConstParam
TIMESTRFLAGS	conf_manage/xml_extract.h	/^typedef struct timeStrategyFlags TIMESTRFLAGS;$/;"	t	typeref:struct:timeStrategyFlags
TMPSPEEDACCURACY	OPTIMIZE/opt_definition.h	/^	float TMPSPEEDACCURACY;\/**<临时限速中档位跳跃追上原始曲线的点的速度差阈值(连接起来的精度)*\/$/;"	m	struct:optConstParam
TMPSPEEDACCURACY	OPTIMIZE/tools/opt_definition.h	/^	float TMPSPEEDACCURACY;\/**<临时限速中档位跳跃追上原始曲线的点的速度差阈值(连接起来的精度)*\/$/;"	m	struct:optConstParam
TOOLS_H_	OPTIMIZE/tools/tools.h	9;"	d
TO_0_5_OPTIMIZE_EXCEPTION_EXCEPTION_H_	OPTIMIZE/exception/exception.h	10;"	d
TO_0_5_OPTIMIZE_EXCEPTION_EXCEPTION_H_	OPTIMIZE/tools/exception/exception.h	10;"	d
TRACTIONCACULATOR_H_	OPTIMIZE/optimize/common/tractionCaculator.h	9;"	d
TRACTIONCACULATOR_H_	OPTIMIZE/tools/optimize/common/tractionCaculator.h	9;"	d
TRAC_CAL_CODE	OPTIMIZE/exception/exception.h	/^}TRAC_CAL_CODE;$/;"	t	typeref:enum:trac_cal_code
TRAC_CAL_CODE	OPTIMIZE/tools/exception/exception.h	/^}TRAC_CAL_CODE;$/;"	t	typeref:enum:trac_cal_code
TRAC_CAL_RESULT	OPTIMIZE/exception/exception.h	/^}TRAC_CAL_RESULT;$/;"	t	typeref:struct:trac_cal_result
TRAC_CAL_RESULT	OPTIMIZE/tools/exception/exception.h	/^}TRAC_CAL_RESULT;$/;"	t	typeref:struct:trac_cal_result
TRAC_CAL_SUCCESS	OPTIMIZE/exception/exception.h	/^    TRAC_CAL_SUCCESS =1, \/\/!< 牵引计算成功$/;"	e	enum:trac_cal_code
TRAC_CAL_SUCCESS	OPTIMIZE/tools/exception/exception.h	/^    TRAC_CAL_SUCCESS =1, \/\/!< 牵引计算成功$/;"	e	enum:trac_cal_code
TRUE	OPTIMIZE/drivecontrol/rt_global_var.h	30;"	d
TRUE	OPTIMIZE/optimize_curve.h	19;"	d
TRUE	OPTIMIZE/tools/drivecontrol/rt_global_var.h	30;"	d
TRUE	OPTIMIZE/tools/optimize_curve.h	19;"	d
TSTEP	OPTIMIZE/opt_definition.h	/^	float TSTEP;\/**<计算时间步长*\/$/;"	m	struct:optConstParam
TSTEP	OPTIMIZE/tools/opt_definition.h	/^	float TSTEP;\/**<计算时间步长*\/$/;"	m	struct:optConstParam
TUNNEL	OPTIMIZE/opt_definition.h	/^typedef struct tunnel TUNNEL;$/;"	t	typeref:struct:tunnel
TUNNEL	OPTIMIZE/tools/opt_definition.h	/^typedef struct tunnel TUNNEL;$/;"	t	typeref:struct:tunnel
TUNNELTEMP	OPTIMIZE/optimize/preprocess/preprocess.c	/^typedef struct tunnelTemp TUNNELTEMP;$/;"	t	typeref:struct:tunnelTemp	file:
TUNNELTEMP	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^typedef struct tunnelTemp TUNNELTEMP;$/;"	t	typeref:struct:tunnelTemp	file:
TYPE_TRANSFORM_ERROR	OPTIMIZE/exception/exception.h	/^	TYPE_TRANSFORM_ERROR= 77 \/\/!<数据类型转换及数据范围错误$/;"	e	enum:optimize_code
TYPE_TRANSFORM_ERROR	OPTIMIZE/tools/exception/exception.h	/^	TYPE_TRANSFORM_ERROR= 77 \/\/!<数据类型转换及数据范围错误$/;"	e	enum:optimize_code
VELOCITY_BELOW_ZERO	OPTIMIZE/exception/exception.h	/^	VELOCITY_BELOW_ZERO = 47,\/\/!< 速度小于0$/;"	e	enum:optimize_code
VELOCITY_BELOW_ZERO	OPTIMIZE/tools/exception/exception.h	/^	VELOCITY_BELOW_ZERO = 47,\/\/!< 速度小于0$/;"	e	enum:optimize_code
VELOCITY_EXCEED	OPTIMIZE/exception/exception.h	/^	VELOCITY_EXCEED = 45 ,   \/\/!< 速度越界$/;"	e	enum:optimize_code
VELOCITY_EXCEED	OPTIMIZE/tools/exception/exception.h	/^	VELOCITY_EXCEED = 45 ,   \/\/!< 速度越界$/;"	e	enum:optimize_code
VELOCITY_OVER_MAX	OPTIMIZE/exception/exception.h	/^	VELOCITY_OVER_MAX = 120,\/\/!< 速度超出120$/;"	e	enum:trac_cal_code
VELOCITY_OVER_MAX	OPTIMIZE/tools/exception/exception.h	/^	VELOCITY_OVER_MAX = 120,\/\/!< 速度超出120$/;"	e	enum:trac_cal_code
VELOCITY_UNDER_ZERO	OPTIMIZE/exception/exception.h	/^	VELOCITY_UNDER_ZERO = 0,\/\/!< 速度小于0$/;"	e	enum:trac_cal_code
VELOCITY_UNDER_ZERO	OPTIMIZE/tools/exception/exception.h	/^	VELOCITY_UNDER_ZERO = 0,\/\/!< 速度小于0$/;"	e	enum:trac_cal_code
VOTE_0_ADDR	app_socket/app_socket.h	26;"	d
VTHLARGE	OPTIMIZE/opt_global_var.h	20;"	d
VTHLARGE	OPTIMIZE/tools/opt_global_var.h	20;"	d
VTHMEDIUM	OPTIMIZE/opt_global_var.h	19;"	d
VTHMEDIUM	OPTIMIZE/tools/opt_global_var.h	19;"	d
VTHSMALL	OPTIMIZE/opt_global_var.h	18;"	d
VTHSMALL	OPTIMIZE/tools/opt_global_var.h	18;"	d
WAITING	message_queue/event.h	/^    WAITING = 1,    \/*在消息队列内等待*\/$/;"	e	enum:event_status
XML_EXTR_ERROR	OPTIMIZE/exception/exception.h	/^    XML_EXTR_ERROR=-3,\/\/!<XML文件打开失败$/;"	e	enum:opt_extr_code
XML_EXTR_ERROR	OPTIMIZE/tools/exception/exception.h	/^    XML_EXTR_ERROR=-3,\/\/!<XML文件打开失败$/;"	e	enum:opt_extr_code
_CFG_INIT_H	conf_manage/xml_extract.h	2;"	d
_COMM_CHECK_H_	comm_check.h	2;"	d
_CORE_INIT_H_	core_init.h	3;"	d
_GNU_SOURCE	threadpool/threadpool.c	33;"	d	file:
_MXML_FINI	conf_manage/xmlopt/mxml-private.c	/^_MXML_FINI(void)$/;"	f	file:
_MXML_FINI	conf_manage/xmlopt/mxml-private.c	48;"	d	file:
_MXML_FINI	conf_manage/xmlopt/mxml-private.c	51;"	d	file:
_MXML_FINI	conf_manage/xmlopt/mxml-private.c	53;"	d	file:
_MXML_FINI	conf_manage/xmlopt/mxml-private.c	55;"	d	file:
_REALTIME_DATA_H_	realtime_data.h	3;"	d
_RT_INTERFACE_H_	OPTIMIZE/drivecontrol/rt_interface.h	3;"	d
_THREADPOOL_H_	threadpool/threadpool.h	30;"	d
_TO_INIT_H_	to_init.h	3;"	d
_TO_STATUS_H_	to_status.h	8;"	d
_mxml_destructor	conf_manage/xmlopt/mxml-private.c	/^_mxml_destructor(void *g)		\/* I - Global data *\/$/;"	f	file:
_mxml_entity_cb	conf_manage/xmlopt/mxml-entity.c	/^_mxml_entity_cb(const char *name)	\/* I - Entity name *\/$/;"	f
_mxml_fdbuf_s	conf_manage/xmlopt/mxml-file.c	/^typedef struct _mxml_fdbuf_s		\/**** File descriptor buffer ****\/$/;"	s	file:
_mxml_fdbuf_t	conf_manage/xmlopt/mxml-file.c	/^} _mxml_fdbuf_t;$/;"	t	typeref:struct:_mxml_fdbuf_s	file:
_mxml_getc_cb_t	conf_manage/xmlopt/mxml-file.c	/^typedef int (*_mxml_getc_cb_t)(void *, int *);$/;"	t	file:
_mxml_global	conf_manage/xmlopt/mxml-private.c	/^_mxml_global(void)$/;"	f
_mxml_global_s	conf_manage/xmlopt/mxml-private.h	/^typedef struct _mxml_global_s$/;"	s
_mxml_global_t	conf_manage/xmlopt/mxml-private.h	/^} _mxml_global_t;$/;"	t	typeref:struct:_mxml_global_s
_mxml_h_	conf_manage/xmlopt/mxml.h	22;"	d
_mxml_init	conf_manage/xmlopt/mxml-private.c	/^_mxml_init(void)$/;"	f	file:
_mxml_key	conf_manage/xmlopt/mxml-private.c	/^static pthread_key_t	_mxml_key = -1;	\/* Thread local storage key *\/$/;"	v	file:
_mxml_key_once	conf_manage/xmlopt/mxml-private.c	/^static pthread_once_t	_mxml_key_once = PTHREAD_ONCE_INIT;$/;"	v	file:
_mxml_putc_cb_t	conf_manage/xmlopt/mxml-file.c	/^typedef int (*_mxml_putc_cb_t)(int, void *);$/;"	t	file:
_mxml_snprintf	conf_manage/xmlopt/mxml-string.c	/^_mxml_snprintf(char       *buffer,	\/* I - Output buffer *\/$/;"	f
_mxml_strdup	conf_manage/xmlopt/mxml-string.c	/^_mxml_strdup(const char *s)		\/* I - String to duplicate *\/$/;"	f
_mxml_strdupf	conf_manage/xmlopt/mxml-string.c	/^_mxml_strdupf(const char *format,	\/* I - Printf-style format string *\/$/;"	f
_mxml_tls_index	conf_manage/xmlopt/mxml-private.c	/^static DWORD _mxml_tls_index;		\/* Index for global storage *\/$/;"	v	file:
_mxml_vsnprintf	conf_manage/xmlopt/mxml-string.c	/^_mxml_vsnprintf(char       *buffer,	\/* O - Output buffer *\/$/;"	f
_mxml_vstrdupf	conf_manage/xmlopt/mxml-string.c	/^_mxml_vstrdupf(const char *format,	\/* I - Printf-style format string *\/$/;"	f
_realtime_data	realtime_data.h	/^typedef struct _realtime_data {$/;"	s
_realtime_event_flag	realtime_data.h	/^typedef struct _realtime_event_flag {$/;"	s
_speed_and_location	realtime_data.h	/^typedef struct _speed_and_location {$/;"	s
acc	OPTIMIZE/opt_definition.h	/^	float acc;  \/**< 加速度 *\/$/;"	m	struct:optSch
acc	OPTIMIZE/tools/opt_definition.h	/^	float acc;  \/**< 加速度 *\/$/;"	m	struct:optSch
account	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t account;$/;"	m	struct:route_list
account	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t account;$/;"	m	struct:route_list
account	route_data.h	/^    uint32_t account;$/;"	m	struct:route_list
add_command	message_queue/schedule.c	/^SCHEDULE_RESULT add_command(struct event_t *event)$/;"	f
addr	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t addr;   \/*<addr: 在原始basedata文件中的位置*\/    $/;"	m	struct:route_node
addr	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t addr;   \/*<addr: 在原始basedata文件中的位置*\/    $/;"	m	struct:route_node
addr	route_data.h	/^    uint32_t addr;   \/*<addr: 在原始basedata文件中的位置*\/    $/;"	m	struct:route_node
adjustCurveEndVelocity	OPTIMIZE/optimize/rawoptimize/rawOptimize.c	/^OPTSCH*  adjustCurveEndVelocity(float vEnd,OPTSCH* optSch,int index,OPTIMIZE_RESULT *ret)$/;"	f
adjustCurveEndVelocity	OPTIMIZE/tools/optimize/rawoptimize/rawOptimize.c	/^OPTSCH*  adjustCurveEndVelocity(float vEnd,OPTSCH* optSch,int index,OPTIMIZE_RESULT *ret)$/;"	f
adjust_dist	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int16_t  adjust_dist;       \/* 修正距离 *\/$/;"	m	struct:sidetrack_t
adjust_dist	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int16_t  adjust_dist;       \/* 修正距离 *\/$/;"	m	struct:sidetrack_t
adjust_dist	route_data.h	/^    int16_t  adjust_dist;       \/* 修正距离 *\/$/;"	m	struct:sidetrack_t
after_process	OPTIMIZE/optimize/afterprocess/after_process.c	/^OPTSCH*  after_process(OPTSCH* optSch,int len,OPTSCH* new_final_curve,int* final_len,OPTIMIZE_RESULT*final_ret)$/;"	f
after_process	OPTIMIZE/tools/optimize/afterprocess/after_process.c	/^OPTSCH*  after_process(OPTSCH* optSch,int len,OPTSCH* new_final_curve,int* final_len,OPTIMIZE_RESULT*final_ret)$/;"	f
airBrakeDistance	OPTIMIZE/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT airBrakeDistance(float start,float end,float v_in,float v_out,float*real_distance,float* cal_common_distance,float *cal_ergence_distance,int* flag){$/;"	f
airBrakeDistance	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT airBrakeDistance(float start,float end,float v_in,float v_out,float*real_distance,float* cal_common_distance,float *cal_ergence_distance,int* flag){$/;"	f
airBrakeResult	OPTIMIZE/opt_definition.h	/^struct airBrakeResult$/;"	s
airBrakeResult	OPTIMIZE/tools/opt_definition.h	/^struct airBrakeResult$/;"	s
airTest1	OPTIMIZE/optimize/common/tractionCaculator.c	/^void airTest1(OPTSCH* optSch,int optSch_count,char* file){$/;"	f
airTest1	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^void airTest1(OPTSCH* optSch,int optSch_count,char* file){$/;"	f
air_brake_change	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^struct air_brake_change$/;"	s
air_brake_change	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^struct air_brake_change$/;"	s
air_brake_op	OPTIMIZE/optimize/rawoptimize/base/airbrake_opt_imp.c	/^OPTIMIZE_RESULT air_brake_op( int rcIndex , int*  localIndex, OPTSCH** optSch)$/;"	f
air_brake_op	OPTIMIZE/tools/optimize/rawoptimize/base/airbrake_opt_imp.c	/^OPTIMIZE_RESULT air_brake_op( int rcIndex , int*  localIndex, OPTSCH** optSch)$/;"	f
alloc_nodes	conf_manage/xmlopt/mxml.h	/^  int			alloc_nodes;	\/* Allocated nodes in index *\/$/;"	m	struct:mxml_index_s
anti_stop_flag	OPTIMIZE/opt_definition.h	/^	OPTFLAG anti_stop_flag;\/**<用于判断坡度的标识符*\/$/;"	m	struct:opt_sch_curve
anti_stop_flag	OPTIMIZE/tools/opt_definition.h	/^	OPTFLAG anti_stop_flag;\/**<用于判断坡度的标识符*\/$/;"	m	struct:opt_sch_curve
argument	threadpool/threadpool.c	/^    void *argument;$/;"	m	struct:__anon3	file:
arriveTime	OPTIMIZE/opt_definition.h	/^   char arriveTime[10]; \/**< 终止车站号时刻*\/$/;"	m	struct:intervalRunTimeUnit
arriveTime	OPTIMIZE/tools/opt_definition.h	/^   char arriveTime[10]; \/**< 终止车站号时刻*\/$/;"	m	struct:intervalRunTimeUnit
arrivetime	conf_manage/xml_extract.h	/^	char arrivetime[ARRAY_LEN];$/;"	m	struct:EXTRACT_FR_STT
attr	conf_manage/xmlopt/mxml.h	/^  char			*attr;		\/* Attribute used for indexing or NULL *\/$/;"	m	struct:mxml_index_s
attrs	conf_manage/xmlopt/mxml.h	/^  mxml_attr_t		*attrs;		\/* Attributes *\/$/;"	m	struct:mxml_element_s
auto_control	auto_control.c	/^int auto_control()$/;"	f
averageV	OPTIMIZE/opt_definition.h	/^   float averageV; \/**< 车站间的平均速度 *\/$/;"	m	struct:intervalRunTimeUnit
averageV	OPTIMIZE/tools/opt_definition.h	/^   float averageV; \/**< 车站间的平均速度 *\/$/;"	m	struct:intervalRunTimeUnit
avgV	OPTIMIZE/opt_definition.h	/^	 float avgV; \/**< 全局平均速度*\/$/;"	m	struct:initialData
avgV	OPTIMIZE/opt_definition.h	/^	float avgV; \/**< 段平均速度*\/$/;"	m	struct:roadCategory
avgV	OPTIMIZE/optimize/preprocess/roadCategory.c	/^	float avgV; \/**<车站与前一个车站之间的平均速度*\/$/;"	m	struct:cz	file:
avgV	OPTIMIZE/tools/opt_definition.h	/^	 float avgV; \/**< 全局平均速度*\/$/;"	m	struct:initialData
avgV	OPTIMIZE/tools/opt_definition.h	/^	float avgV; \/**< 段平均速度*\/$/;"	m	struct:roadCategory
avgV	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^	float avgV; \/**<车站与前一个车站之间的平均速度*\/$/;"	m	struct:cz	file:
bc_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t bc_num;                \/* 支线转移编号，自定义 *\/$/;"	m	struct:branch_change_t
bc_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t bc_num;                \/* 支线转移编号，自定义 *\/$/;"	m	struct:branch_change_t
bc_num	route_data.h	/^    uint8_t bc_num;                \/* 支线转移编号，自定义 *\/$/;"	m	struct:branch_change_t
board_addr	app_socket/app_socket.c	/^static struct board_addr_t board_addr;$/;"	v	typeref:struct:board_addr_t	file:
board_addr_t	app_socket/app_socket.c	/^struct board_addr_t$/;"	s	file:
brakeConsumption	OPTIMIZE/opt_definition.h	/^	float brakeConsumption[8]; \/**< bGearE 制动各档位耗油量 *\/$/;"	m	struct:locoParameter
brakeConsumption	OPTIMIZE/tools/opt_definition.h	/^	float brakeConsumption[8]; \/**< bGearE 制动各档位耗油量 *\/$/;"	m	struct:locoParameter
brakeForce	OPTIMIZE/datacontrol/extractData.c	/^float brakeForce[8][120];$/;"	v
brakeForce	OPTIMIZE/tools/datacontrol/extractData.c	/^float brakeForce[8][120];$/;"	v
brake_output_flag	realtime_data.h	/^	int8_t brake_output_flag;$/;"	m	struct:_realtime_event_flag
branch_change	OPTIMIZE/datacontrol/read_binary_for_route.h	/^   struct branch_change_t   *branch_change;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::branch_change_t
branch_change	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^   struct branch_change_t   *branch_change;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::branch_change_t
branch_change	route_data.h	/^   struct branch_change_t   *branch_change;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::branch_change_t
branch_change_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct branch_change_t$/;"	s
branch_change_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct branch_change_t$/;"	s
branch_change_t	route_data.h	/^struct branch_change_t$/;"	s
buffer	conf_manage/xmlopt/mxml-file.c	/^		buffer[8192];		\/* Character buffer *\/$/;"	m	struct:_mxml_fdbuf_s	file:
cal_common_distance	OPTIMIZE/opt_definition.h	/^	float cal_common_distance  ;\/\/计算出来一般距离$/;"	m	struct:airBrakeResult
cal_common_distance	OPTIMIZE/tools/opt_definition.h	/^	float cal_common_distance  ;\/\/计算出来一般距离$/;"	m	struct:airBrakeResult
cal_ergence_distance	OPTIMIZE/opt_definition.h	/^	float cal_ergence_distance;\/\/计算出来 紧急距离$/;"	m	struct:airBrakeResult
cal_ergence_distance	OPTIMIZE/tools/opt_definition.h	/^	float cal_ergence_distance;\/\/计算出来 紧急距离$/;"	m	struct:airBrakeResult
carLengh	OPTIMIZE/opt_definition.h	/^	 float carLengh; \/**< 车长*\/$/;"	m	struct:initialData
carLengh	OPTIMIZE/tools/opt_definition.h	/^	 float carLengh; \/**< 车长*\/$/;"	m	struct:initialData
carLength	OPTIMIZE/opt_definition.h	/^	float carLength; \/**< 每节车厢的长度 *\/$/;"	m	struct:carStruct
carLength	OPTIMIZE/tools/opt_definition.h	/^	float carLength; \/**< 每节车厢的长度 *\/$/;"	m	struct:carStruct
carNum	OPTIMIZE/opt_definition.h	/^	 int carNum; \/**< 车厢节数*\/$/;"	m	struct:initialData
carNum	OPTIMIZE/tools/opt_definition.h	/^	 int carNum; \/**< 车厢节数*\/$/;"	m	struct:initialData
carStruct	OPTIMIZE/datacontrol/extractData.c	/^CARSTRUCT *carStruct;$/;"	v
carStruct	OPTIMIZE/opt_definition.h	/^struct carStruct$/;"	s
carStruct	OPTIMIZE/tools/datacontrol/extractData.c	/^CARSTRUCT *carStruct;$/;"	v
carStruct	OPTIMIZE/tools/opt_definition.h	/^struct carStruct$/;"	s
carWeight	OPTIMIZE/opt_definition.h	/^	float carWeight;\/**< 每节车厢的重量 *\/$/;"	m	struct:carStruct
carWeight	OPTIMIZE/tools/opt_definition.h	/^	float carWeight;\/**< 每节车厢的重量 *\/$/;"	m	struct:carStruct
catPoint	OPTIMIZE/optimize/preprocess/roadCategory.h	/^struct catPoint$/;"	s
catPoint	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^struct catPoint$/;"	s
cen_dist	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t cen_dist;$/;"	m	struct:station_t
cen_dist	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t cen_dist;$/;"	m	struct:station_t
cen_dist	route_data.h	/^    uint16_t cen_dist;              \/* 站中心距离 *\/$/;"	m	struct:station_t
cfgExtractRslt	conf_manage/xml_extract.h	/^enum cfgExtractRslt{\/\/cfgExtractRslt -- configuration_file Extract Result$/;"	g
cfg_open	conf_manage/xml_extract.c	/^FILE *cfg_open(int cfg_logo){$/;"	f
cfgload	conf_manage/xml_extract.c	/^mxml_node_t *cfgload(FILE *fd){$/;"	f
checkType	OPTIMIZE/datacontrol/extractData.c	/^int checkType(char* str, char* pattern) {$/;"	f
checkType	OPTIMIZE/tools/datacontrol/extractData.c	/^int checkType(char* str, char* pattern) {$/;"	f
child	conf_manage/xmlopt/mxml.h	/^  struct mxml_node_s	*child;		\/* First child node *\/$/;"	m	struct:mxml_node_s	typeref:struct:mxml_node_s::mxml_node_s
closeXML	OPTIMIZE/datacontrol/extractData.c	/^void closeXML(mxml_node_t* root)$/;"	f
closeXML	OPTIMIZE/tools/datacontrol/extractData.c	/^void closeXML(mxml_node_t* root)$/;"	f
cnt	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    ROUTE_NODE *cnt;$/;"	m	struct:route_list
cnt	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    ROUTE_NODE *cnt;$/;"	m	struct:route_list
cnt	route_data.h	/^    ROUTE_NODE *cnt;$/;"	m	struct:route_list
cnt_event	message_queue/schedule.c	/^static struct event_t *cnt_event = NULL;   \/\/当前正在处理的事件$/;"	v	typeref:struct:event_t	file:
code	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t code;$/;"	m	struct:limit_t
code	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t code;$/;"	m	struct:limit_t
code	route_data.h	/^    uint16_t code;$/;"	m	struct:limit_t
comm_check_init	core_init.c	/^int comm_check_init(void) {$/;"	f
comm_register	comm_check.c	/^int comm_register(void)$/;"	f
command_frame_encap	app_socket/protocal.c	/^static char *command_frame_encap(char *command, char *data, uint16_t des, int *frame_len)$/;"	f	file:
command_frame_rcv_handle	frame_rcv_handle.c	/^void command_frame_rcv_handle(void *cmd)$/;"	f
computeCriticalV	OPTIMIZE/optimize/preprocess/roadCategory.c	/^OPTIMIZE_RESULT  computeCriticalV(MGRADIENT* new_gradients,int max_length,CRITICAL_V* cv)$/;"	f
computeCriticalV	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^OPTIMIZE_RESULT  computeCriticalV(MGRADIENT* new_gradients,int max_length,CRITICAL_V* cv)$/;"	f
computeRoadCategory	OPTIMIZE/optimize/preprocess/roadCategory.c	/^OPTIMIZE_RESULT  computeRoadCategory(MGRADIENT* new_gradients,int max_length,CRITICAL_V* cv,int startPost, int endPost)$/;"	f
computeRoadCategory	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^OPTIMIZE_RESULT  computeRoadCategory(MGRADIENT* new_gradients,int max_length,CRITICAL_V* cv,int startPost, int endPost)$/;"	f
computeTime	OPTIMIZE/optimize/common/optimizeTools.c	/^float computeTime(int indexS, int indexE, OPTSCH* optSch) {$/;"	f
computeTime	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^float computeTime(int indexS, int indexE, OPTSCH* optSch) {$/;"	f
con_tel_kp	OPTIMIZE/opt_definition.h	/^	float con_tel_kp;\/**<连续的公里标*\/$/;"	m	struct:opt_sch_curve
con_tel_kp	OPTIMIZE/tools/opt_definition.h	/^	float con_tel_kp;\/**<连续的公里标*\/$/;"	m	struct:opt_sch_curve
conct_two_seg	OPTIMIZE/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT conct_two_seg(OPTSCH** src, int* srcIndex,  int markIndex, OPTSCH**  desc, int descLength)$/;"	f
conct_two_seg	OPTIMIZE/tools/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT conct_two_seg(OPTSCH** src, int* srcIndex,  int markIndex, OPTSCH**  desc, int descLength)$/;"	f
cond	message_queue/schedule.c	/^    pthread_cond_t cond;$/;"	m	struct:schedule_mutex_t	file:
constv_gr_down_up_til_end	OPTIMIZE/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT constv_gr_down_up_til_end(float start,float startV,  int gearup, int geardown,int rcIndex,int *localIndex,int* localCount,  int* flag,float  v_internal, float avgV, OPTSCH** optSch)$/;"	f
constv_gr_down_up_til_end	OPTIMIZE/tools/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT constv_gr_down_up_til_end(float start,float startV,  int gearup, int geardown,int rcIndex,int *localIndex,int* localCount,  int* flag,float  v_internal, float avgV, OPTSCH** optSch)$/;"	f
constv_gr_down_up_til_end_no_db_gear	OPTIMIZE/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT constv_gr_down_up_til_end_no_db_gear(float start,float startV,  int gearup, int geardown,int rcIndex,int *localIndex,int* localCount,  int* flag,float  v_internal, float avgV, OPTSCH** optSch)$/;"	f
constv_gr_down_up_til_end_no_db_gear	OPTIMIZE/tools/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT constv_gr_down_up_til_end_no_db_gear(float start,float startV,  int gearup, int geardown,int rcIndex,int *localIndex,int* localCount,  int* flag,float  v_internal, float avgV, OPTSCH** optSch)$/;"	f
constv_trac_til_ed	OPTIMIZE/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT constv_trac_til_ed(int startGear,float avgV, float  v_internal,int rcIndex, int* localIndex, int* localCount,OPTSCH** optSch)$/;"	f
constv_trac_til_ed	OPTIMIZE/tools/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT constv_trac_til_ed(int startGear,float avgV, float  v_internal,int rcIndex, int* localIndex, int* localCount,OPTSCH** optSch)$/;"	f
consumption	OPTIMIZE/opt_definition.h	/^	 float consumption; \/**< 油耗*\/$/;"	m	struct:initialData
consumption	OPTIMIZE/opt_definition.h	/^	float consumption;  \/**<油耗 *\/$/;"	m	struct:optSch
consumption	OPTIMIZE/tools/opt_definition.h	/^	 float consumption; \/**< 油耗*\/$/;"	m	struct:initialData
consumption	OPTIMIZE/tools/opt_definition.h	/^	float consumption;  \/**<油耗 *\/$/;"	m	struct:optSch
cont_km_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int32_t  cont_km_post;      \/* 连续信号机公里标 *\/$/;"	m	struct:tele_t
cont_km_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int32_t  cont_km_post;      \/* 连续信号机公里标 *\/$/;"	m	struct:tele_t
cont_km_post	route_data.h	/^    int32_t  cont_km_post;      \/* 连续信号机公里标 *\/$/;"	m	struct:tele_t
convertStrToInt	OPTIMIZE/tools/tools.c	/^int convertStrToInt(char *value)$/;"	f
copy	OPTIMIZE/tools/tools.c	/^void copy(char* src, char * desc)$/;"	f
copy_optsch	OPTIMIZE/optimize/rawoptimize/base/airbrake_opt_imp.c	/^int copy_optsch(OPTSCH* src,OPTSCH* des,int length){$/;"	f
copy_optsch	OPTIMIZE/tools/optimize/rawoptimize/base/airbrake_opt_imp.c	/^int copy_optsch(OPTSCH* src,OPTSCH* des,int length){$/;"	f
cot_train_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t cot_train_num;         \/* cot_train_num:修正车次 *\/$/;"	m	struct:route_change_t
cot_train_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t cot_train_num;         \/* cot_train_num:修正车次 *\/$/;"	m	struct:route_change_t
cot_train_num	route_data.h	/^    uint16_t cot_train_num;         \/* cot_train_num:修正车次 *\/$/;"	m	struct:route_change_t
count	OPTIMIZE/opt_definition.h	/^	int count;	\/**< 辆数 *\/$/;"	m	struct:locoParameter
count	OPTIMIZE/tools/opt_definition.h	/^	int count;	\/**< 辆数 *\/$/;"	m	struct:locoParameter
count	threadpool/threadpool.c	/^  int count;$/;"	m	struct:threadpool_t	file:
critical_v	OPTIMIZE/optimize/preprocess/roadCategory.h	/^struct critical_v$/;"	s
critical_v	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^struct critical_v$/;"	s
cross_dis	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t cross_dis;$/;"	m	struct:limit_t
cross_dis	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t cross_dis; \/* 越过距离 *\/$/;"	m	struct:curve_t
cross_dis	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t cross_dis; \/* 越过距离 *\/$/;"	m	struct:gradient_t
cross_dis	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t cross_dis;$/;"	m	struct:limit_t
cross_dis	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t cross_dis; \/* 越过距离 *\/$/;"	m	struct:curve_t
cross_dis	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t cross_dis; \/* 越过距离 *\/$/;"	m	struct:gradient_t
cross_dis	route_data.h	/^    uint16_t cross_dis;$/;"	m	struct:limit_t
cross_dis	route_data.h	/^    uint32_t cross_dis; \/* 越过距离 *\/$/;"	m	struct:curve_t
cross_dis	route_data.h	/^    uint32_t cross_dis; \/* 越过距离 *\/$/;"	m	struct:gradient_t
cross_dist	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t cross_dist;$/;"	m	struct:tunnel_t
cross_dist	OPTIMIZE/opt_definition.h	/^	float cross_dist;\/**<越过距离*\/$/;"	m	struct:opt_sch_curve
cross_dist	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t cross_dist;$/;"	m	struct:tunnel_t
cross_dist	OPTIMIZE/tools/opt_definition.h	/^	float cross_dist;\/**<越过距离*\/$/;"	m	struct:opt_sch_curve
cross_dist	route_data.h	/^    uint16_t cross_dist;$/;"	m	struct:tunnel_t
ctr_log_error	log.h	56;"	d
ctr_log_error	log.h	70;"	d
ctr_log_error	log.h	84;"	d
ctr_log_info	log.h	58;"	d
ctr_log_info	log.h	72;"	d
ctr_log_info	log.h	86;"	d
ctr_log_notice	log.h	59;"	d
ctr_log_notice	log.h	73;"	d
ctr_log_notice	log.h	87;"	d
ctr_log_warning	log.h	57;"	d
ctr_log_warning	log.h	71;"	d
ctr_log_warning	log.h	85;"	d
cur_node	conf_manage/xmlopt/mxml.h	/^  int			cur_node;	\/* Current node *\/$/;"	m	struct:mxml_index_s
current	conf_manage/xmlopt/mxml-file.c	/^  unsigned char	*current,		\/* Current position in buffer *\/$/;"	m	struct:_mxml_fdbuf_s	file:
curve	OPTIMIZE/opt_definition.h	/^struct curve  \/\/曲线$/;"	s
curve	OPTIMIZE/tools/opt_definition.h	/^struct curve  \/\/曲线$/;"	s
curveTemp	OPTIMIZE/optimize/preprocess/preprocess.c	/^struct curveTemp {$/;"	s	file:
curveTemp	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^struct curveTemp {$/;"	s	file:
curve_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct curve_t$/;"	s
curve_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct curve_t$/;"	s
curve_t	route_data.h	/^struct curve_t$/;"	s
curves	OPTIMIZE/datacontrol/extractData.c	/^CURVE* curves;$/;"	v
curves	OPTIMIZE/tools/datacontrol/extractData.c	/^CURVE* curves;$/;"	v
custom	conf_manage/xmlopt/mxml.h	/^  mxml_custom_t		custom;		\/* Custom data @since Mini-XML 2.1@ *\/$/;"	m	union:mxml_value_u
custom_load_cb	conf_manage/xmlopt/mxml-private.h	/^  mxml_custom_load_cb_t	custom_load_cb;$/;"	m	struct:_mxml_global_s
custom_save_cb	conf_manage/xmlopt/mxml-private.h	/^  mxml_custom_save_cb_t	custom_save_cb;$/;"	m	struct:_mxml_global_s
cz	OPTIMIZE/optimize/preprocess/roadCategory.c	/^struct cz$/;"	s	file:
cz	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^struct cz$/;"	s	file:
czh	OPTIMIZE/optimize/preprocess/roadCategory.c	/^	int czh;  \/**< 车站号*\/$/;"	m	struct:cz	file:
czh	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^	int czh;  \/**< 车站号*\/$/;"	m	struct:cz	file:
czs	OPTIMIZE/optimize/preprocess/roadCategory.c	/^CZ czs[STATIONCOUNT];$/;"	v
czs	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^CZ czs[STATIONCOUNT];$/;"	v
data	OPTIMIZE/drivecontrol/rt_definition.h	/^	OPTIMIZERESULT* data;$/;"	m	struct:ll_node
data	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	OPTIMIZERESULT* data;$/;"	m	struct:ll_node
data	conf_manage/xmlopt/mxml.h	/^  void			*data;		\/* Pointer to (allocated) custom data *\/$/;"	m	struct:mxml_custom_s
data	message_queue/event.h	/^    void *data;$/;"	m	struct:event_t
data_frame_descriptor	app_socket/protocal.c	/^typedef struct data_frame_descriptor$/;"	s	file:
data_frame_encap	app_socket/protocal.c	/^static char *data_frame_encap(char command[2], char *data, uint16_t des, DATA_FD fd, int data_len, int *frame_len)$/;"	f	file:
data_frame_rcv_handle	frame_rcv_handle.c	/^void data_frame_rcv_handle(char *data, uint16_t length, char *command, int amount, int count)$/;"	f
data_length	OPTIMIZE/drivecontrol/rt_definition.h	/^	int data_length;$/;"	m	struct:ll_node
data_length	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int data_length;$/;"	m	struct:ll_node
davis	OPTIMIZE/opt_definition.h	/^	float davis[3]; \/**< 戴维斯系数 *\/$/;"	m	struct:locoParameter
davis	OPTIMIZE/tools/opt_definition.h	/^	float davis[3]; \/**< 戴维斯系数 *\/$/;"	m	struct:locoParameter
db_dyn_gr_til_vo_or_ed_or_lmt	OPTIMIZE/optimize/rawoptimize/base/db_opt_imp.c	/^OPTIMIZE_RESULT   db_dyn_gr_til_vo_or_ed_or_lmt(int startGear,float vo, int rcIndex , int* localIndex, int* localCount, float limit, int* flag,OPTSCH** optSch)$/;"	f
db_dyn_gr_til_vo_or_ed_or_lmt	OPTIMIZE/tools/optimize/rawoptimize/base/db_opt_imp.c	/^OPTIMIZE_RESULT   db_dyn_gr_til_vo_or_ed_or_lmt(int startGear,float vo, int rcIndex , int* localIndex, int* localCount, float limit, int* flag,OPTSCH** optSch)$/;"	f
db_gr_til_ed	OPTIMIZE/optimize/rawoptimize/base/db_opt_imp.c	/^OPTIMIZE_RESULT  db_gr_til_ed(int startGear, int rcIndex, int* localIndex,int* localCount, OPTSCH** optSch)$/;"	f
db_gr_til_ed	OPTIMIZE/tools/optimize/rawoptimize/base/db_opt_imp.c	/^OPTIMIZE_RESULT  db_gr_til_ed(int startGear, int rcIndex, int* localIndex,int* localCount, OPTSCH** optSch)$/;"	f
db_til_lmt_or_ed	OPTIMIZE/optimize/rawoptimize/base/db_opt_imp.c	/^OPTIMIZE_RESULT   db_til_lmt_or_ed(int startGear, int rcIndex, int * localIndex,int* localCount, float limit, int* flag, OPTSCH** optSch)$/;"	f
db_til_lmt_or_ed	OPTIMIZE/tools/optimize/rawoptimize/base/db_opt_imp.c	/^OPTIMIZE_RESULT   db_til_lmt_or_ed(int startGear, int rcIndex, int * localIndex,int* localCount, float limit, int* flag, OPTSCH** optSch)$/;"	f
default_branch_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  default_branch_num;$/;"	m	struct:branch_change_t
default_branch_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  default_branch_num;$/;"	m	struct:branch_change_t
default_branch_num	route_data.h	/^    uint8_t  default_branch_num;$/;"	m	struct:branch_change_t
delet	conf_manage/xml_extract.c	/^int delet(void *return_type)$/;"	f
delta_t	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	float delta_t;$/;"	m	struct:air_brake_change
delta_t	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	float delta_t;$/;"	m	struct:air_brake_change
dequeue	message_queue/message_queue.c	/^void *dequeue(struct multilevel_queue_t *multi_queue, int *ret)$/;"	f
des_dr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  des_dr_num;     $/;"	m	struct:route_change_t
des_dr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  des_dr_num;$/;"	m	struct:branch_change_t
des_dr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  des_dr_num;     $/;"	m	struct:route_change_t
des_dr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  des_dr_num;$/;"	m	struct:branch_change_t
des_dr_num	route_data.h	/^    uint8_t  des_dr_num;     $/;"	m	struct:route_change_t
des_dr_num	route_data.h	/^    uint8_t  des_dr_num;$/;"	m	struct:branch_change_t
des_mr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  des_mr_num;$/;"	m	struct:branch_change_t
des_mr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  des_mr_num;$/;"	m	struct:route_change_t
des_mr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  des_mr_num;$/;"	m	struct:branch_change_t
des_mr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  des_mr_num;$/;"	m	struct:route_change_t
des_mr_num	route_data.h	/^    uint8_t  des_mr_num;$/;"	m	struct:branch_change_t
des_mr_num	route_data.h	/^    uint8_t  des_mr_num;$/;"	m	struct:route_change_t
description	OPTIMIZE/exception/exception.h	/^	 char  description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:pre_process_result
description	OPTIMIZE/exception/exception.h	/^	 char description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:optimize_result
description	OPTIMIZE/exception/exception.h	/^	char  description[EXP_DESC_LENGTH]; \/\/!<异常描述$/;"	m	struct:opt_extr_result
description	OPTIMIZE/exception/exception.h	/^	char  description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:limit_optimize_result
description	OPTIMIZE/exception/exception.h	/^	char  description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:raw_optimize_result
description	OPTIMIZE/exception/exception.h	/^     char  description[EXP_DESC_LENGTH]; \/\/!<异常描述$/;"	m	struct:trac_cal_result
description	OPTIMIZE/tools/exception/exception.h	/^	 char  description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:pre_process_result
description	OPTIMIZE/tools/exception/exception.h	/^	 char description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:optimize_result
description	OPTIMIZE/tools/exception/exception.h	/^	char  description[EXP_DESC_LENGTH]; \/\/!<异常描述$/;"	m	struct:opt_extr_result
description	OPTIMIZE/tools/exception/exception.h	/^	char  description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:limit_optimize_result
description	OPTIMIZE/tools/exception/exception.h	/^	char  description[EXP_DESC_LENGTH];\/\/!<异常描述$/;"	m	struct:raw_optimize_result
description	OPTIMIZE/tools/exception/exception.h	/^     char  description[EXP_DESC_LENGTH]; \/\/!<异常描述$/;"	m	struct:trac_cal_result
destroy	conf_manage/xmlopt/mxml.h	/^  mxml_custom_destroy_cb_t destroy;	\/* Pointer to destructor function *\/$/;"	m	struct:mxml_custom_s
dir	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int dir;            \/* 曲线方向 1:左 -1:右 *\/$/;"	m	struct:curve_t
dir	OPTIMIZE/opt_definition.h	/^	int dir; \/**< 方向*\/$/;"	m	struct:curve
dir	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int dir;            \/* 曲线方向 1:左 -1:右 *\/$/;"	m	struct:curve_t
dir	OPTIMIZE/tools/opt_definition.h	/^	int dir; \/**< 方向*\/$/;"	m	struct:curve
dir	route_data.h	/^    int dir;            \/* 曲线方向 1:左 -1:右 *\/$/;"	m	struct:curve_t
direction	conf_manage/xml_extract.h	/^	int direction;$/;"	m	struct:IN_ROUTEINFO
direction	conf_manage/xml_extract.h	/^   int direction; \/**< 前(左)或后(右)调整速度*\/$/;"	m	struct:timeStrategyFlags
discont_km_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int32_t  discont_km_post;   \/* 原始信号机公里标 *\/$/;"	m	struct:tele_t
discont_km_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int32_t  discont_km_post;   \/* 原始信号机公里标 *\/$/;"	m	struct:tele_t
discont_km_post	route_data.h	/^    int32_t  discont_km_post;   \/* 原始信号机公里标 *\/$/;"	m	struct:tele_t
distance	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t distance;          \/* 距离后方信号机距离 *\/$/;"	m	struct:tele_t
distance	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t distance;          \/* 距离后方信号机距离 *\/$/;"	m	struct:tele_t
distance	route_data.h	/^    uint32_t distance;          \/* 距离后方信号机距离 *\/$/;"	m	struct:tele_t
dr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t dr_num;                \/* data route number *\/$/;"	m	struct:station_t
dr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t dr_num;            \/* 交路号 *\/$/;"	m	struct:tele_t
dr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t dr_num;                \/* data route number *\/$/;"	m	struct:station_t
dr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t dr_num;            \/* 交路号 *\/$/;"	m	struct:tele_t
dr_num	route_data.h	/^    uint16_t dr_num;                \/* data route number *\/$/;"	m	struct:station_t
dr_num	route_data.h	/^    uint16_t dr_num;            \/* 交路号 *\/$/;"	m	struct:tele_t
dragByGear	OPTIMIZE/optimize/afterprocess/after_process_common.c	/^OPTIMIZE_RESULT dragByGear(OPTSCH** new_final_curve,int gear,float endS, int * cap, int* n,float* dist,float* velocity)$/;"	f
dragByGear	OPTIMIZE/tools/optimize/afterprocess/after_process_common.c	/^OPTIMIZE_RESULT dragByGear(OPTSCH** new_final_curve,int gear,float endS, int * cap, int* n,float* dist,float* velocity)$/;"	f
dragConsumption	OPTIMIZE/opt_definition.h	/^	float dragConsumption[8];\/**< dGearE 牵引各档位耗油量 *\/$/;"	m	struct:locoParameter
dragConsumption	OPTIMIZE/tools/opt_definition.h	/^	float dragConsumption[8];\/**< dGearE 牵引各档位耗油量 *\/$/;"	m	struct:locoParameter
dragForce	OPTIMIZE/datacontrol/extractData.c	/^float dragForce[8][120];$/;"	v
dragForce	OPTIMIZE/tools/datacontrol/extractData.c	/^float dragForce[8][120];$/;"	v
driving_record	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^struct driving_record$/;"	s
driving_record	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^struct driving_record$/;"	s
dyn_gr_trac_til_vi_or_ed_or_dis	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT dyn_gr_trac_til_vi_or_ed_or_dis(int startGear,int rcIndex,float dis,float limitV,int* localIndex, int* flag,int* localCount,OPTSCH** optSch){$/;"	f
dyn_gr_trac_til_vi_or_ed_or_dis	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT dyn_gr_trac_til_vi_or_ed_or_dis(int startGear,int rcIndex,float dis,float limitV,int* localIndex, int* flag,int* localCount,OPTSCH** optSch){$/;"	f
dyn_gr_trac_til_vi_or_ed_or_lmt	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT dyn_gr_trac_til_vi_or_ed_or_lmt(int startGear, int rcIndex , float limitV,int* localIndex, int* flag,int* localCount,OPTSCH** optSch)$/;"	f
dyn_gr_trac_til_vi_or_ed_or_lmt	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT dyn_gr_trac_til_vi_or_ed_or_lmt(int startGear, int rcIndex , float limitV,int* localIndex, int* flag,int* localCount,OPTSCH** optSch)$/;"	f
dyn_gr_trac_til_vo_or_ed_or_lmt	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT   dyn_gr_trac_til_vo_or_ed_or_lmt(int startGear,float vo, int rcIndex , int* localIndex, int* localCount, float limit, int* flag,OPTSCH** optSch)$/;"	f
dyn_gr_trac_til_vo_or_ed_or_lmt	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT   dyn_gr_trac_til_vo_or_ed_or_lmt(int startGear,float vo, int rcIndex , int* localIndex, int* localCount, float limit, int* flag,OPTSCH** optSch)$/;"	f
e_dr_num	route_data.h	/^    uint8_t     e_dr_num;$/;"	m	struct:route_id_t
e_mr_num	route_data.h	/^    uint8_t     e_mr_num;$/;"	m	struct:route_id_t
e_up_or_down	route_data.h	/^    uint8_t     e_up_or_down;$/;"	m	struct:route_id_t
element	conf_manage/xmlopt/mxml.h	/^  mxml_element_t	element;	\/* Element *\/$/;"	m	union:mxml_value_u
empty_steep_dwn_strgy	OPTIMIZE/optimize/rawoptimize/empty_steep_dwn_strgy.c	/^OPTSCH* empty_steep_dwn_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
empty_steep_dwn_strgy	OPTIMIZE/tools/optimize/rawoptimize/empty_steep_dwn_strgy.c	/^OPTSCH* empty_steep_dwn_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
empty_steep_up_strgy	OPTIMIZE/optimize/rawoptimize/empty_steep_up_strgy.c	/^OPTSCH* empty_steep_up_strgy(float vo, float v_interval, int count, int roadIndex,$/;"	f
empty_steep_up_strgy	OPTIMIZE/tools/optimize/rawoptimize/empty_steep_up_strgy.c	/^OPTSCH* empty_steep_up_strgy(float vo, float v_interval, int count, int roadIndex,$/;"	f
end	OPTIMIZE/opt_definition.h	/^	int end;  \/**< 终止公里标 *\/$/;"	m	struct:partGradient
end	OPTIMIZE/opt_definition.h	/^	int end;  \/**< 终止公里标*\/$/;"	m	struct:limit
end	OPTIMIZE/opt_definition.h	/^	int end; \/**< 终止 公里标*\/$/;"	m	struct:mGradient
end	OPTIMIZE/opt_definition.h	/^	int end; \/**< 终止公里标*\/$/;"	m	struct:curve
end	OPTIMIZE/opt_definition.h	/^	int end; \/**< 终止公里标*\/$/;"	m	struct:roadCategory
end	OPTIMIZE/opt_definition.h	/^	int end; \/**< 终止公里标*\/$/;"	m	struct:tunnel
end	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^	float end;  \/**< 限速终止公里标*\/$/;"	m	struct:limitInfo
end	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int end;  \/**<终止公里标*\/$/;"	m	struct:tunnelTemp	file:
end	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int end; \/**<终止公里标*\/$/;"	m	struct:curveTemp	file:
end	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	int end;  \/**< 段终止公里标 *\/$/;"	m	struct:Category
end	OPTIMIZE/tools/opt_definition.h	/^	int end;  \/**< 终止公里标 *\/$/;"	m	struct:partGradient
end	OPTIMIZE/tools/opt_definition.h	/^	int end;  \/**< 终止公里标*\/$/;"	m	struct:limit
end	OPTIMIZE/tools/opt_definition.h	/^	int end; \/**< 终止 公里标*\/$/;"	m	struct:mGradient
end	OPTIMIZE/tools/opt_definition.h	/^	int end; \/**< 终止公里标*\/$/;"	m	struct:curve
end	OPTIMIZE/tools/opt_definition.h	/^	int end; \/**< 终止公里标*\/$/;"	m	struct:roadCategory
end	OPTIMIZE/tools/opt_definition.h	/^	int end; \/**< 终止公里标*\/$/;"	m	struct:tunnel
end	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^	float end;  \/**< 限速终止公里标*\/$/;"	m	struct:limitInfo
end	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int end;  \/**<终止公里标*\/$/;"	m	struct:tunnelTemp	file:
end	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int end; \/**<终止公里标*\/$/;"	m	struct:curveTemp	file:
end	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	int end;  \/**< 段终止公里标 *\/$/;"	m	struct:Category
end	conf_manage/xmlopt/mxml-file.c	/^		*end,			\/* End of buffer *\/$/;"	m	struct:_mxml_fdbuf_s	file:
endCzh	OPTIMIZE/opt_definition.h	/^   int endCzh; \/**<  终止车站号*\/$/;"	m	struct:intervalRunTimeUnit
endCzh	OPTIMIZE/tools/opt_definition.h	/^   int endCzh; \/**<  终止车站号*\/$/;"	m	struct:intervalRunTimeUnit
endIndex	OPTIMIZE/optimize/afterprocess/after_process.h	/^	  int endIndex; \/\/终止公里标$/;"	m	struct:gearSegInfo
endIndex	OPTIMIZE/tools/optimize/afterprocess/after_process.h	/^	  int endIndex; \/\/终止公里标$/;"	m	struct:gearSegInfo
endPosOffset	conf_manage/xml_extract.h	/^	int endPosOffset;$/;"	m	struct:IN_ROUTEINFO
endTelesemes	conf_manage/xml_extract.h	/^	int endTelesemes;$/;"	m	struct:IN_ROUTEINFO
endV	OPTIMIZE/opt_definition.h	/^	 float endV; \/**< 终止速度*\/$/;"	m	struct:initialData
endV	OPTIMIZE/opt_definition.h	/^     float endV; \/**<终止位置的速度，贯通实验通过配置得到，其余区域通过criticalVelocity方式得到该速度*\/$/;"	m	struct:handArea
endV	OPTIMIZE/tools/opt_definition.h	/^	 float endV; \/**< 终止速度*\/$/;"	m	struct:initialData
endV	OPTIMIZE/tools/opt_definition.h	/^     float endV; \/**<终止位置的速度，贯通实验通过配置得到，其余区域通过criticalVelocity方式得到该速度*\/$/;"	m	struct:handArea
endV	conf_manage/xml_extract.h	/^	float endV;$/;"	m	struct:IN_ROUTEINFO
end_mile	OPTIMIZE/opt_definition.h	/^	float end_mile;$/;"	m	struct:airBrakeResult
end_mile	OPTIMIZE/tools/opt_definition.h	/^	float end_mile;$/;"	m	struct:airBrakeResult
end_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int32_t  end_post;  \/* 终止公里标 *\/$/;"	m	struct:limit_t
end_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int32_t  end_post;  \/* 终止公里标 *\/$/;"	m	struct:limit_t
end_post	route_data.h	/^    int32_t  end_post;  \/* 终止公里标 *\/$/;"	m	struct:limit_t
end_velocity	OPTIMIZE/opt_definition.h	/^	float end_velocity;$/;"	m	struct:airBrakeResult
end_velocity	OPTIMIZE/tools/opt_definition.h	/^	float end_velocity;$/;"	m	struct:airBrakeResult
ending	OPTIMIZE/opt_definition.h	/^     float ending;\/**<终止公里标（连续的）*\/$/;"	m	struct:handArea
ending	OPTIMIZE/tools/opt_definition.h	/^     float ending;\/**<终止公里标（连续的）*\/$/;"	m	struct:handArea
energy	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	float energy;$/;"	m	struct:driving_record
energy	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	float energy;$/;"	m	struct:driving_record
enqueue	message_queue/message_queue.c	/^QUEUE_MANAGE_RESULT enqueue(struct multilevel_queue_t *multi_queue, void *value, uint8_t priority)$/;"	f
entity_cbs	conf_manage/xmlopt/mxml-private.h	/^  int	(*entity_cbs[100])(const char *name);$/;"	m	struct:_mxml_global_s
error_cb	conf_manage/xmlopt/mxml-private.h	/^  void	(*error_cb)(const char *);$/;"	m	struct:_mxml_global_s
es_num	route_data.h	/^    uint16_t    es_num;         \/**<end station number*\/$/;"	m	struct:route_id_t
est_over_speed	OPTIMIZE/drivecontrol/rt_definition.h	/^	float est_over_speed;$/;"	m	struct:over_speed_info
est_over_speed	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	float est_over_speed;$/;"	m	struct:over_speed_info
evaluate	OPTIMIZE/optimize/common/optimizeTools.c	/^void evaluate(float* E, float* T, float* diffTime, OPTSCH* optSch,int len,float srcTime,float srcConsumption) {$/;"	f
evaluate	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^void evaluate(float* E, float* T, float* diffTime, OPTSCH* optSch,int len,float srcTime,float srcConsumption) {$/;"	f
even_gear_trasfer	OPTIMIZE/optimize/afterprocess/even_gear_trasfer.c	/^OPTSCH*  even_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int* cap,OPTSCH* optSch,int *srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
even_gear_trasfer	OPTIMIZE/tools/optimize/afterprocess/even_gear_trasfer.c	/^OPTSCH*  even_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int* cap,OPTSCH* optSch,int *srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
event	message_queue/schedule.c	/^    struct event_t *event;$/;"	m	struct:event_mutex_t	typeref:struct:event_mutex_t::event_t	file:
event_create	message_queue/event.c	/^struct event_t *event_create(EVENT_TYPE type, EVENT_SOURCE  source, uint8_t parameter)$/;"	f
event_delete	message_queue/event.c	/^void event_delete(struct event_t *event)$/;"	f
event_flag	realtime_data.h	/^	RT_EVENT_FLAG event_flag;$/;"	m	struct:_realtime_data
event_handle	message_queue/schedule.c	/^static void event_handle(struct event_t *event)$/;"	f	file:
event_manage_result	message_queue/event.h	/^typedef enum event_manage_result$/;"	g
event_mutex_t	message_queue/schedule.c	/^struct event_mutex_t$/;"	s	file:
event_source	message_queue/event.h	/^typedef enum event_source$/;"	g
event_status	message_queue/event.h	/^typedef enum event_status$/;"	g
event_t	message_queue/event.h	/^struct event_t$/;"	s
event_type	message_queue/event.h	/^typedef enum event_type$/;"	g
exception_display	OPTIMIZE/exception/exception.c	/^void exception_display(OPTIMIZE_RESULT result)$/;"	f
exception_display	OPTIMIZE/tools/exception/exception.c	/^void exception_display(OPTIMIZE_RESULT result)$/;"	f
extrCarsInfo	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrCarsInfo()$/;"	f
extrCarsInfo	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrCarsInfo()$/;"	f
extrData	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrData(int routeNum)$/;"	f
extrData	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrData(int routeNum)$/;"	f
extrHandAreaInfo	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrHandAreaInfo()$/;"	f
extrHandAreaInfo	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrHandAreaInfo()$/;"	f
extrInitialData	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrInitialData()$/;"	f
extrInitialData	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrInitialData()$/;"	f
extrLimitStrategyMetrics	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrLimitStrategyMetrics()$/;"	f
extrLimitStrategyMetrics	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrLimitStrategyMetrics()$/;"	f
extrLocoInfo	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrLocoInfo()$/;"	f
extrLocoInfo	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrLocoInfo()$/;"	f
extrOptConst	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrOptConst()$/;"	f
extrOptConst	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrOptConst()$/;"	f
extrRawStrategyMetrics	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrRawStrategyMetrics()$/;"	f
extrRawStrategyMetrics	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT  extrRawStrategyMetrics()$/;"	f
extrRoadStationTime	conf_manage/xml_extract.c	/^struct rt_extrRoadStationTime *extrRoadStationTime(int *err_no)$/;"	f
extrRoadTimetable	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrRoadTimetable()$/;"	f
extrRoadTimetable	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrRoadTimetable()$/;"	f
extrRouteData	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrRouteData()$/;"	f
extrRouteData	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT extrRouteData()$/;"	f
extrTimeStrategyMetrics	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT   extrTimeStrategyMetrics()$/;"	f
extrTimeStrategyMetrics	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT   extrTimeStrategyMetrics()$/;"	f
extr_LocoInfo	conf_manage/xml_extract.c	/^struct EXTR_ROUTEINFO *extr_LocoInfo(const char *attr_value, int *err_no){$/;"	f
extr_OptimizeStrategy	conf_manage/xml_extract.c	/^struct EXTR_OPT_RTN *extr_OptimizeStrategy (const char *element, int *err_no)$/;"	f
extr_RouteInfo	conf_manage/xml_extract.c	/^struct ROUTEINFO *extr_RouteInfo (const char *element, int *err_no)$/;"	f
extr_opt_datarange	conf_manage/xml_extract.c	/^struct EXTR_OPT_DATARANGE *extr_opt_datarange(const char *element, int *err_no) {$/;"	f
f_cnt_num	app_socket/protocal.c	/^    uint16_t f_cnt_num;     \/*当前帧序号*\/$/;"	m	struct:data_frame_descriptor	file:
f_total_num	app_socket/protocal.c	/^    uint16_t f_total_num;   \/*帧总数*\/$/;"	m	struct:data_frame_descriptor	file:
fd	conf_manage/xmlopt/mxml-file.c	/^  int		fd;			\/* File descriptor *\/$/;"	m	struct:_mxml_fdbuf_s	file:
file_addr	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t file_addr;$/;"	m	struct:branch_change_t
file_addr	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t file_addr;$/;"	m	struct:route_change_t
file_addr	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t file_addr;$/;"	m	struct:branch_change_t
file_addr	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t file_addr;$/;"	m	struct:route_change_t
file_addr	route_data.h	/^    uint32_t file_addr;$/;"	m	struct:branch_change_t
file_addr	route_data.h	/^    uint32_t file_addr;$/;"	m	struct:route_change_t
file_exception_decorator	OPTIMIZE/exception/exception.c	/^void  file_exception_decorator(int code,OPT_EXTR_RESULT* ret, char desc[])$/;"	f
file_exception_decorator	OPTIMIZE/tools/exception/exception.c	/^void  file_exception_decorator(int code,OPT_EXTR_RESULT* ret, char desc[])$/;"	f
file_result	OPTIMIZE/exception/exception.h	/^	OPT_EXTR_CODE  file_result; \/\/!<异常代码$/;"	m	struct:opt_extr_result
file_result	OPTIMIZE/tools/exception/exception.h	/^	OPT_EXTR_CODE  file_result; \/\/!<异常代码$/;"	m	struct:opt_extr_result
file_result_adapter	OPTIMIZE/exception/exception.c	/^OPTIMIZE_RESULT  file_result_adapter( OPT_EXTR_RESULT result)$/;"	f
file_result_adapter	OPTIMIZE/tools/exception/exception.c	/^OPTIMIZE_RESULT  file_result_adapter( OPT_EXTR_RESULT result)$/;"	f
findIntegerIndex	OPTIMIZE/tools/tools.c	/^int findIntegerIndex(int src[],int length, int value)$/;"	f
flag	OPTIMIZE/opt_definition.h	/^	int flag; \/**<  坡度类型 *\/$/;"	m	struct:partGradient
flag	OPTIMIZE/opt_definition.h	/^	int flag; \/**< 坡度类型 *\/$/;"	m	struct:roadCategory
flag	OPTIMIZE/opt_definition.h	/^	int flag;\/\/2ok 1 ergence  ok  0  problem$/;"	m	struct:airBrakeResult
flag	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	int flag; \/**< 段类型*\/$/;"	m	struct:Category
flag	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	int flag; \/**<标记*\/$/;"	m	struct:catPoint
flag	OPTIMIZE/tools/opt_definition.h	/^	int flag; \/**<  坡度类型 *\/$/;"	m	struct:partGradient
flag	OPTIMIZE/tools/opt_definition.h	/^	int flag; \/**< 坡度类型 *\/$/;"	m	struct:roadCategory
flag	OPTIMIZE/tools/opt_definition.h	/^	int flag;\/\/2ok 1 ergence  ok  0  problem$/;"	m	struct:airBrakeResult
flag	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	int flag; \/**< 段类型*\/$/;"	m	struct:Category
flag	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	int flag; \/**<标记*\/$/;"	m	struct:catPoint
ford_station_num	OPTIMIZE/opt_definition.h	/^	int ford_station_num; \/**<前方车站号*\/$/;"	m	struct:opt_sch_curve
ford_station_num	OPTIMIZE/tools/opt_definition.h	/^	int ford_station_num; \/**<前方车站号*\/$/;"	m	struct:opt_sch_curve
ford_time	OPTIMIZE/opt_definition.h	/^	float ford_time;\/**<距离前方车站时间距离*\/$/;"	m	struct:opt_sch_curve
ford_time	OPTIMIZE/tools/opt_definition.h	/^	float ford_time;\/**<距离前方车站时间距离*\/$/;"	m	struct:opt_sch_curve
frame_encap	app_socket/protocal.c	/^PROTOCAL_RESULT frame_encap(uint8_t stype, uint16_t des, uint8_t ftype, char command[2], char *data, int length)$/;"	f
frame_parse	app_socket/protocal.c	/^PROTOCAL_RESULT frame_parse(char *buf, int length)$/;"	f
function	threadpool/threadpool.c	/^    void (*function)(void *);$/;"	m	struct:__anon3	file:
ga_info	OPTIMIZE/drivecontrol/rt_definition.h	/^	RT_GA_INFO ga_info;$/;"	m	struct:rt_output
ga_info	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	RT_GA_INFO ga_info;$/;"	m	struct:rt_output
ga_start	OPTIMIZE/drivecontrol/rt_definition.h	/^	int ga_start;$/;"	m	struct:grade_ability_info
ga_start	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int ga_start;$/;"	m	struct:grade_ability_info
geData	OPTIMIZE/opt_definition.h	/^struct geData$/;"	s
geData	OPTIMIZE/tools/opt_definition.h	/^struct geData$/;"	s
geDatas	OPTIMIZE/datacontrol/extractData.c	/^GEDATA* geDatas;$/;"	v
geDatas	OPTIMIZE/tools/datacontrol/extractData.c	/^GEDATA* geDatas;$/;"	v
gear	OPTIMIZE/drivecontrol/rt_definition.h	/^	int gear;$/;"	m	struct:rt_output
gear	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	int gear;  \/**<档位*\/$/;"	m	struct:driving_record
gear	OPTIMIZE/opt_definition.h	/^	int gear;      \/**<档位*\/$/;"	m	struct:optSch
gear	OPTIMIZE/opt_definition.h	/^	int gear;  \/**<档位*\/$/;"	m	struct:optimizeResult
gear	OPTIMIZE/opt_definition.h	/^	int gear;\/**<优化档位*\/$/;"	m	struct:opt_sch_curve
gear	OPTIMIZE/optimize/afterprocess/after_process.h	/^	  int gear;    \/\/档位$/;"	m	struct:gearSegInfo
gear	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int gear;$/;"	m	struct:rt_output
gear	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	int gear;  \/**<档位*\/$/;"	m	struct:driving_record
gear	OPTIMIZE/tools/opt_definition.h	/^	int gear;      \/**<档位*\/$/;"	m	struct:optSch
gear	OPTIMIZE/tools/opt_definition.h	/^	int gear;  \/**<档位*\/$/;"	m	struct:optimizeResult
gear	OPTIMIZE/tools/opt_definition.h	/^	int gear;\/**<优化档位*\/$/;"	m	struct:opt_sch_curve
gear	OPTIMIZE/tools/optimize/afterprocess/after_process.h	/^	  int gear;    \/\/档位$/;"	m	struct:gearSegInfo
gearSegInfo	OPTIMIZE/optimize/afterprocess/after_process.h	/^struct gearSegInfo{$/;"	s
gearSegInfo	OPTIMIZE/tools/optimize/afterprocess/after_process.h	/^struct gearSegInfo{$/;"	s
gear_strategy_match	OPTIMIZE/optimize/afterprocess/tmp_gear_trasfer.c	/^OPTSCH*  gear_strategy_match(OPTSCH* new_tmp_curve,int * tmp_final_len, int* cap, int sGear,OPTSCH* optSch,  int eGear,int* srcInx,OPTIMIZE_RESULT* opt_ret)$/;"	f
gear_strategy_match	OPTIMIZE/tools/optimize/afterprocess/tmp_gear_trasfer.c	/^OPTSCH*  gear_strategy_match(OPTSCH* new_tmp_curve,int * tmp_final_len, int* cap, int sGear,OPTSCH* optSch,  int eGear,int* srcInx,OPTIMIZE_RESULT* opt_ret)$/;"	f
gear_transfer	OPTIMIZE/optimize/afterprocess/after_process_common.c	/^OPTIMIZE_RESULT gear_transfer(OPTSCH** new_final_curve,int srcGear,int destGear,int *cap,int *n,float* dist,float* velocity)$/;"	f
gear_transfer	OPTIMIZE/tools/optimize/afterprocess/after_process_common.c	/^OPTIMIZE_RESULT gear_transfer(OPTSCH** new_final_curve,int srcGear,int destGear,int *cap,int *n,float* dist,float* velocity)$/;"	f
generateRunTime	OPTIMIZE/optimize/preprocess/preprocess.c	/^PRE_PROCESS_RESULT generateRunTime() {$/;"	f
generateRunTime	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^PRE_PROCESS_RESULT generateRunTime() {$/;"	f
gentle_hill_strgy	OPTIMIZE/optimize/rawoptimize/gentle_hill_strgy.c	/^OPTSCH* gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
gentle_hill_strgy	OPTIMIZE/tools/optimize/rawoptimize/gentle_hill_strgy.c	/^OPTSCH* gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
getCategoryFlag	OPTIMIZE/optimize/common/optimizeTools.c	/^void  getCategoryFlag(int start, int ending, int* flagS, int* indexS, int* flagE,$/;"	f
getCategoryFlag	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^void  getCategoryFlag(int start, int ending, int* flagS, int* indexS, int* flagE,$/;"	f
getCategoryLimitV	OPTIMIZE/optimize/common/optimizeTools.c	/^int getCategoryLimitV(int start, int ending) {$/;"	f
getCategoryLimitV	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^int getCategoryLimitV(int start, int ending) {$/;"	f
getConsumption	OPTIMIZE/optimize/common/tractionCaculator.c	/^float getConsumption(int gear, float tStep) {$/;"	f
getConsumption	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^float getConsumption(int gear, float tStep) {$/;"	f
getCzhAvgV	OPTIMIZE/optimize/preprocess/roadCategory.c	/^PRE_PROCESS_RESULT getCzhAvgV(int czh,float* avgV)$/;"	f
getCzhAvgV	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^PRE_PROCESS_RESULT getCzhAvgV(int czh,float* avgV)$/;"	f
getForce	OPTIMIZE/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT  getForce(int gear, float v,float *force) {$/;"	f
getForce	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^TRAC_CAL_RESULT  getForce(int gear, float v,float *force) {$/;"	f
getGearByFV	OPTIMIZE/optimize/afterprocess/after_process_common.c	/^int getGearByFV(float force,int velocity,int *g1,int *g2,float *delF1,float* delF2)$/;"	f
getGearByFV	OPTIMIZE/tools/optimize/afterprocess/after_process_common.c	/^int getGearByFV(float force,int velocity,int *g1,int *g2,float *delF1,float* delF2)$/;"	f
getLimitStrategyType	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  getLimitStrategyType(int flagS,int flagE,int* type)$/;"	f
getLimitStrategyType	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  getLimitStrategyType(int flagS,int flagE,int* type)$/;"	f
getLine	OPTIMIZE/datacontrol/extractData.c	/^OPT_EXTR_RESULT getLine(FILE* fp,int* line)$/;"	f
getLine	OPTIMIZE/tools/datacontrol/extractData.c	/^OPT_EXTR_RESULT getLine(FILE* fp,int* line)$/;"	f
getMidV	OPTIMIZE/optimize/afterprocess/after_process_common.c	/^float getMidV(OPTSCH* optSch,int sIndex,int eIndex)$/;"	f
getMidV	OPTIMIZE/tools/optimize/afterprocess/after_process_common.c	/^float getMidV(OPTSCH* optSch,int sIndex,int eIndex)$/;"	f
getPointGradient	OPTIMIZE/optimize/preprocess/preprocess.c	/^float getPointGradient(MGRADIENT *old_gradients,int length,int loco_length,int current_x,int mem_index,int *new_mem_index)$/;"	f
getPointGradient	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^float getPointGradient(MGRADIENT *old_gradients,int length,int loco_length,int current_x,int mem_index,int *new_mem_index)$/;"	f
getPostFromTmpSeg	OPTIMIZE/optimize/afterprocess/after_process_common.c	/^float getPostFromTmpSeg(GEARSEGINFO*  tmpSegGears,OPTSCH* optSch,int startIndex,int endIndex)$/;"	f
getPostFromTmpSeg	OPTIMIZE/tools/optimize/afterprocess/after_process_common.c	/^float getPostFromTmpSeg(GEARSEGINFO*  tmpSegGears,OPTSCH* optSch,int startIndex,int endIndex)$/;"	f
getRoadCategoryAvgV	OPTIMIZE/optimize/preprocess/roadCategory.c	/^PRE_PROCESS_RESULT getRoadCategoryAvgV(int start,int ending,int startPost,int endPost,float* finalAvg)$/;"	f
getRoadCategoryAvgV	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^PRE_PROCESS_RESULT getRoadCategoryAvgV(int start,int ending,int startPost,int endPost,float* finalAvg)$/;"	f
getSchVelocity	OPTIMIZE/optimize/common/optimizeTools.c	/^void getSchVelocity(OPTSCH* optSch, int len, float start, float ending, float* v1,$/;"	f
getSchVelocity	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^void getSchVelocity(OPTSCH* optSch, int len, float start, float ending, float* v1,$/;"	f
getTwoStationSteepPect	OPTIMIZE/optimize/preprocess/roadCategory.c	/^void  getTwoStationSteepPect(MGRADIENT* new_gradients,int max_length)$/;"	f
getTwoStationSteepPect	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^void  getTwoStationSteepPect(MGRADIENT* new_gradients,int max_length)$/;"	f
get_avg_up_down_gear	OPTIMIZE/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT get_avg_up_down_gear(float* start,float* startV, float avgV,int *localCount,int *flag,int* gearup,int* geardown)$/;"	f
get_avg_up_down_gear	OPTIMIZE/tools/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT get_avg_up_down_gear(float* start,float* startV, float avgV,int *localCount,int *flag,int* gearup,int* geardown)$/;"	f
get_avg_up_down_gear_no_db_gear	OPTIMIZE/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT get_avg_up_down_gear_no_db_gear(float* start,float* startV, float avgV,int *localCount,int *flag,int* gearup,int* geardown)$/;"	f
get_avg_up_down_gear_no_db_gear	OPTIMIZE/tools/optimize/rawoptimize/base/avgV_opt_imp.c	/^OPTIMIZE_RESULT get_avg_up_down_gear_no_db_gear(float* start,float* startV, float avgV,int *localCount,int *flag,int* gearup,int* geardown)$/;"	f
get_connect_kp	OPTIMIZE/optimize/common/optimizeTools.c	/^float get_connect_kp(int tel_num,int cross_dist)$/;"	f
get_connect_kp	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^float get_connect_kp(int tel_num,int cross_dist)$/;"	f
get_file_size	OPTIMIZE/datacontrol/read_binary_for_route.c	/^static long get_file_size(FILE *fp)$/;"	f	file:
get_file_size	OPTIMIZE/tools/datacontrol/read_binary_for_route.c	/^static long get_file_size(FILE *fp)$/;"	f	file:
get_loc_socket_by_type	app_socket/app_socket.c	/^static int get_loc_socket_by_type(uint8_t type)$/;"	f	file:
get_mid_position	OPTIMIZE/optimize/afterprocess/tmp_gear_trasfer.c	/^void get_mid_position(OPTSCH*optSch, int srcIndex,OPTSCH* optBack,int newIndex,float* midStart,float* midV)$/;"	f
get_mid_position	OPTIMIZE/tools/optimize/afterprocess/tmp_gear_trasfer.c	/^void get_mid_position(OPTSCH*optSch, int srcIndex,OPTSCH* optBack,int newIndex,float* midStart,float* midV)$/;"	f
get_segment_index	OPTIMIZE/optimize/common/optimizeTools.c	/^void get_segment_index(OPTSCH* optSch,float start,float end,int* startIndex,int* endIndex,int len)$/;"	f
get_segment_index	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^void get_segment_index(OPTSCH* optSch,float start,float end,int* startIndex,int* endIndex,int len)$/;"	f
get_sys_status	to_status.c	/^SYSTEM_STATUS get_sys_status(void)$/;"	f
gr_trac_til_dis_or_lmt	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT gr_trac_til_dis_or_lmt(int startGear ,int rcIndex,float dis, float limitV, float minV, int* localIndex, int* flag,int* localCount, OPTSCH** optSch)$/;"	f
gr_trac_til_dis_or_lmt	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT gr_trac_til_dis_or_lmt(int startGear ,int rcIndex,float dis, float limitV, float minV, int* localIndex, int* flag,int* localCount, OPTSCH** optSch)$/;"	f
gr_trac_til_ed	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT  gr_trac_til_ed(int startGear, int rcIndex, int* localIndex,int* localCount, OPTSCH** optSch)$/;"	f
gr_trac_til_ed	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT  gr_trac_til_ed(int startGear, int rcIndex, int* localIndex,int* localCount, OPTSCH** optSch)$/;"	f
gr_trac_til_ed_or_lmt	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT gr_trac_til_ed_or_lmt(int startGear ,int rcIndex, float limitV, float minV, int* localIndex, int* flag,int* localCount, OPTSCH** optSch)$/;"	f
gr_trac_til_ed_or_lmt	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT gr_trac_til_ed_or_lmt(int startGear ,int rcIndex, float limitV, float minV, int* localIndex, int* flag,int* localCount, OPTSCH** optSch)$/;"	f
gr_trac_to_avgv_till_ed	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT  gr_trac_to_avgv_till_ed(int gear, float avgV, int rcIndex,float  v_internal,  int * localIndex,int* localCount,  int* flag, OPTSCH** optSch)$/;"	f
gr_trac_to_avgv_till_ed	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT  gr_trac_to_avgv_till_ed(int gear, float avgV, int rcIndex,float  v_internal,  int * localIndex,int* localCount,  int* flag, OPTSCH** optSch)$/;"	f
gr_trac_to_avgv_till_ed_no_db_gear	OPTIMIZE/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT  gr_trac_to_avgv_till_ed_no_db_gear(int gear, float avgV, int rcIndex,float  v_internal,  int * localIndex,int* localCount,  int* flag, OPTSCH** optSch)$/;"	f
gr_trac_to_avgv_till_ed_no_db_gear	OPTIMIZE/tools/optimize/rawoptimize/base/trac_opt_imp.c	/^OPTIMIZE_RESULT  gr_trac_to_avgv_till_ed_no_db_gear(int gear, float avgV, int rcIndex,float  v_internal,  int * localIndex,int* localCount,  int* flag, OPTSCH** optSch)$/;"	f
graceful_shutdown	threadpool/threadpool.c	/^    graceful_shutdown  = 2$/;"	e	enum:__anon2	file:
grade_ability_info	OPTIMIZE/drivecontrol/rt_definition.h	/^struct grade_ability_info$/;"	s
grade_ability_info	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct grade_ability_info$/;"	s
gradeability_flag	OPTIMIZE/drivecontrol/rt_definition.h	/^	int gradeability_flag;$/;"	m	struct:grade_ability_info
gradeability_flag	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int gradeability_flag;$/;"	m	struct:grade_ability_info
gradient	OPTIMIZE/opt_definition.h	/^struct gradient$/;"	s
gradient	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	float gradient;  \/**< 段的平均坡度值 *\/$/;"	m	struct:Category
gradient	OPTIMIZE/tools/opt_definition.h	/^struct gradient$/;"	s
gradient	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	float gradient;  \/**< 段的平均坡度值 *\/$/;"	m	struct:Category
gradientTemp	OPTIMIZE/optimize/preprocess/preprocess.c	/^struct gradientTemp {$/;"	s	file:
gradientTemp	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^struct gradientTemp {$/;"	s	file:
gradientType	conf_manage/xml_extract.h	/^   int gradientType; \/**< 坡段类型*\/ \/\/对应strategy中的flag$/;"	m	struct:strategyFlags
gradient_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct gradient_t$/;"	s
gradient_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct gradient_t$/;"	s
gradient_t	route_data.h	/^struct gradient_t$/;"	s
gradients	OPTIMIZE/datacontrol/extractData.c	/^GRADIENT* gradients;$/;"	v
gradients	OPTIMIZE/tools/datacontrol/extractData.c	/^GRADIENT* gradients;$/;"	v
graflg	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	int graflg;  \/**< 坡度类型*\/$/;"	m	struct:critical_v
graflg	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	int graflg;  \/**< 坡度类型*\/$/;"	m	struct:critical_v
handArea	OPTIMIZE/opt_definition.h	/^struct handArea$/;"	s
handArea	OPTIMIZE/tools/opt_definition.h	/^struct handArea$/;"	s
handAreas	OPTIMIZE/opt_definition.h	/^	HANDAREA* handAreas; \/** 手动区域段结构体数组（除去贯通实验）*\/$/;"	m	struct:pusherEngine
handAreas	OPTIMIZE/tools/opt_definition.h	/^	HANDAREA* handAreas; \/** 手动区域段结构体数组（除去贯通实验）*\/$/;"	m	struct:pusherEngine
head	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    ROUTE_NODE *head;$/;"	m	struct:route_list
head	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    ROUTE_NODE *head;$/;"	m	struct:route_list
head	route_data.h	/^    ROUTE_NODE *head;$/;"	m	struct:route_list
head	threadpool/threadpool.c	/^  int head;$/;"	m	struct:threadpool_t	file:
heartbeat_check	comm_check.c	/^void heartbeat_check()$/;"	f
host_addr	app_socket/app_socket.c	/^    const char *host_addr;$/;"	m	struct:board_addr_t	file:
id	OPTIMIZE/opt_definition.h	/^	int id;  \/**< 车站号*\/$/;"	m	struct:station
id	OPTIMIZE/tools/opt_definition.h	/^	int id;  \/**< 车站号*\/$/;"	m	struct:station
id	conf_manage/xml_extract.h	/^	int id;$/;"	m	struct:IN_ROUTEINFO
id	message_queue/event.h	/^    uint8_t id;$/;"	m	struct:event_t
identifyGear	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^int identifyGear(OPTSCH* optSch, int index , int newGear)$/;"	f
identifyGear	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^int identifyGear(OPTSCH* optSch, int index , int newGear)$/;"	f
idleConsumption	OPTIMIZE/opt_definition.h	/^	float idleConsumption; \/**< cGearE  惰性档位耗油量*\/$/;"	m	struct:locoParameter
idleConsumption	OPTIMIZE/tools/opt_definition.h	/^	float idleConsumption; \/**< cGearE  惰性档位耗油量*\/$/;"	m	struct:locoParameter
ifNearLimit	OPTIMIZE/optimize/afterprocess/after_process_common.c	/^int ifNearLimit(OPTSCH* optSch,int sIndex,int eIndex)$/;"	f
ifNearLimit	OPTIMIZE/tools/optimize/afterprocess/after_process_common.c	/^int ifNearLimit(OPTSCH* optSch,int sIndex,int eIndex)$/;"	f
ifTmpNearLimit	OPTIMIZE/optimize/afterprocess/after_process_common.c	/^int ifTmpNearLimit(OPTSCH* optSch,int sIndex,int eIndex,float tmpStart,float tmpEnd,float tmpValue)$/;"	f
ifTmpNearLimit	OPTIMIZE/tools/optimize/afterprocess/after_process_common.c	/^int ifTmpNearLimit(OPTSCH* optSch,int sIndex,int eIndex,float tmpStart,float tmpEnd,float tmpValue)$/;"	f
immediate_shutdown	threadpool/threadpool.c	/^    immediate_shutdown = 1,$/;"	e	enum:__anon2	file:
in_dist	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t in_dist;           \/* 进岔距离 *\/$/;"	m	struct:sidetrack_t
in_dist	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t in_dist;           \/* 进岔距离 *\/$/;"	m	struct:sidetrack_t
in_dist	route_data.h	/^    uint16_t in_dist;           \/* 进岔距离 *\/$/;"	m	struct:sidetrack_t
in_limit_code	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t in_limit_code;     \/* 进岔限速代号 *\/$/;"	m	struct:sidetrack_t
in_limit_code	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t in_limit_code;     \/* 进岔限速代号 *\/$/;"	m	struct:sidetrack_t
in_limit_code	route_data.h	/^    uint16_t in_limit_code;     \/* 进岔限速代号 *\/$/;"	m	struct:sidetrack_t
in_routeinfo	conf_manage/xml_extract.h	/^	struct IN_ROUTEINFO *in_routeinfo;$/;"	m	struct:ROUTEINFO	typeref:struct:ROUTEINFO::IN_ROUTEINFO
index	OPTIMIZE/optimize/afterprocess/after_process.h	/^	  int index; \/\/所在的数组中的index(从0开始)$/;"	m	struct:gearSegInfo
index	OPTIMIZE/optimize/preprocess/roadCategory.c	/^	int index;  \/**< 车站在当前坡段的序列号，可能有多个车站存在*\/$/;"	m	struct:cz	file:
index	OPTIMIZE/tools/optimize/afterprocess/after_process.h	/^	  int index; \/\/所在的数组中的index(从0开始)$/;"	m	struct:gearSegInfo
index	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^	int index;  \/**< 车站在当前坡段的序列号，可能有多个车站存在*\/$/;"	m	struct:cz	file:
index1	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^	int index1; \/**<  限速起始公里标所在的优化曲线的index*\/$/;"	m	struct:limitInfo
index1	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^	int index1; \/**<  限速起始公里标所在的优化曲线的index*\/$/;"	m	struct:limitInfo
index2	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^	int index2; \/**< 限速终止公里标所在的优化曲线的index*\/$/;"	m	struct:limitInfo
index2	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^	int index2; \/**< 限速终止公里标所在的优化曲线的index*\/$/;"	m	struct:limitInfo
indexE	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^	int indexE; \/**< 限速终止公里标所在的段的index*\/$/;"	m	struct:limitInfo
indexE	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^	int indexE; \/**< 限速终止公里标所在的段的index*\/$/;"	m	struct:limitInfo
indexS	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^	int indexS; \/**< 限速起始公里标所在的段的index*\/$/;"	m	struct:limitInfo
indexS	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^	int indexS; \/**< 限速起始公里标所在的段的index*\/$/;"	m	struct:limitInfo
index_compare	conf_manage/xmlopt/mxml-index.c	/^index_compare(mxml_index_t *ind,	\/* I - Index *\/$/;"	f	file:
index_find	conf_manage/xmlopt/mxml-index.c	/^index_find(mxml_index_t *ind,		\/* I - Index *\/$/;"	f	file:
index_sort	conf_manage/xmlopt/mxml-index.c	/^index_sort(mxml_index_t *ind,		\/* I - Index to sort *\/$/;"	f	file:
initialData	OPTIMIZE/opt_definition.h	/^struct initialData$/;"	s
initialData	OPTIMIZE/tools/opt_definition.h	/^struct initialData$/;"	s
initialDatas	OPTIMIZE/datacontrol/extractData.c	/^INITIALDATA* initialDatas;$/;"	v
initialDatas	OPTIMIZE/tools/datacontrol/extractData.c	/^INITIALDATA* initialDatas;$/;"	v
inline	conf_manage/xmlopt/config.h	40;"	d
integer	conf_manage/xmlopt/mxml.h	/^  int			integer;	\/* Integer number *\/$/;"	m	union:mxml_value_u
intervalRunTimeUnit	OPTIMIZE/opt_definition.h	/^struct intervalRunTimeUnit$/;"	s
intervalRunTimeUnit	OPTIMIZE/tools/opt_definition.h	/^struct intervalRunTimeUnit$/;"	s
intervalRuntimeUnits	OPTIMIZE/datacontrol/extractData.c	/^INTERVALRUNTIMEUNIT* intervalRuntimeUnits;$/;"	v
intervalRuntimeUnits	OPTIMIZE/tools/datacontrol/extractData.c	/^INTERVALRUNTIMEUNIT* intervalRuntimeUnits;$/;"	v
is_change	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  is_change;             \/* 判断是否进行转移 1: changed ; 0: not changed *\/$/;"	m	struct:route_change_t
is_change	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  is_change;            \/* 1：转移； 0：不转移 -1：不确定*\/$/;"	m	struct:branch_change_t
is_change	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  is_change;             \/* 判断是否进行转移 1: changed ; 0: not changed *\/$/;"	m	struct:route_change_t
is_change	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  is_change;            \/* 1：转移； 0：不转移 -1：不确定*\/$/;"	m	struct:branch_change_t
is_change	route_data.h	/^    uint8_t  is_change;             \/* 判断是否进行转移 1: changed ; 0: not changed *\/$/;"	m	struct:route_change_t
is_change	route_data.h	/^    uint8_t  is_change;            \/* 1：转移； 0：不转移 -1：不确定*\/$/;"	m	struct:branch_change_t
jump_even_gear_trasfer	OPTIMIZE/optimize/afterprocess/jump_even_gear_trasfer.c	/^OPTSCH*  jump_even_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int*cap, OPTSCH* optSch,int *srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
jump_even_gear_trasfer	OPTIMIZE/tools/optimize/afterprocess/jump_even_gear_trasfer.c	/^OPTSCH*  jump_even_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int*cap, OPTSCH* optSch,int *srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
jump_odd_gear_trasfer	OPTIMIZE/optimize/afterprocess/jump_odd_gear_trasfer.c	/^OPTSCH* jump_odd_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int* cap, OPTSCH* optSch,int *srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
jump_odd_gear_trasfer	OPTIMIZE/tools/optimize/afterprocess/jump_odd_gear_trasfer.c	/^OPTSCH* jump_odd_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int* cap, OPTSCH* optSch,int *srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
kilmeter_coordinate	realtime_data.h	/^	int32_t kilmeter_coordinate;\/\/公里标$/;"	m	struct:_speed_and_location
km_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int32_t  km_post;   \/* 起始公里标 *\/$/;"	m	struct:curve_t
km_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int32_t  km_post;   \/* 起始公里标 *\/$/;"	m	struct:limit_t
km_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    int32_t  km_post;   \/* 连续公里标 *\/$/;"	m	struct:gradient_t
km_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t km_post;$/;"	m	struct:station_t
km_post	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t km_post;$/;"	m	struct:tunnel_t
km_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int32_t  km_post;   \/* 起始公里标 *\/$/;"	m	struct:curve_t
km_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int32_t  km_post;   \/* 起始公里标 *\/$/;"	m	struct:limit_t
km_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    int32_t  km_post;   \/* 连续公里标 *\/$/;"	m	struct:gradient_t
km_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t km_post;$/;"	m	struct:station_t
km_post	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t km_post;$/;"	m	struct:tunnel_t
km_post	route_data.h	/^    int32_t  km_post;   \/* 起始公里标 *\/$/;"	m	struct:curve_t
km_post	route_data.h	/^    int32_t  km_post;   \/* 起始公里标 *\/$/;"	m	struct:limit_t
km_post	route_data.h	/^    int32_t  km_post;   \/* 连续公里标 *\/$/;"	m	struct:gradient_t
km_post	route_data.h	/^    uint32_t km_post;$/;"	m	struct:station_t
km_post	route_data.h	/^    uint32_t km_post;$/;"	m	struct:tunnel_t
l_car	OPTIMIZE/optimize/common/tractionCaculator.c	/^float l_car; \/\/average length for a car$/;"	v
l_car	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^float l_car; \/\/average length for a car$/;"	v
l_loco	OPTIMIZE/optimize/common/tractionCaculator.c	/^float l_loco; \/\/ train head length$/;"	v
l_loco	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^float l_loco; \/\/ train head length$/;"	v
l_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t l_num;                 \/* line number *\/$/;"	m	struct:route_change_t
l_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t l_num;                 \/* line number *\/$/;"	m	struct:station_t
l_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t l_num;$/;"	m	struct:branch_change_t
l_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t l_num;                 \/* line number *\/$/;"	m	struct:route_change_t
l_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t l_num;                 \/* line number *\/$/;"	m	struct:station_t
l_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t l_num;$/;"	m	struct:branch_change_t
l_num	route_data.h	/^    uint16_t l_num;                 \/* line number *\/$/;"	m	struct:route_change_t
l_num	route_data.h	/^    uint16_t l_num;                 \/* line number *\/$/;"	m	struct:station_t
l_num	route_data.h	/^    uint16_t l_num;$/;"	m	struct:branch_change_t
lastGraType	conf_manage/xml_extract.h	/^   int lastGraType;\/**<上一段坡段类型，若没有该元素，则该元素值为100*\/$/;"	m	struct:strategyFlags
last_child	conf_manage/xmlopt/mxml.h	/^  struct mxml_node_s	*last_child;	\/* Last child node *\/$/;"	m	struct:mxml_node_s	typeref:struct:mxml_node_s::mxml_node_s
last_dwn_next_dwn_gentle_hill_strgy	OPTIMIZE/optimize/rawoptimize/last_dwn_next_dwn_gentle_hill_strgy.c	/^OPTSCH* last_dwn_next_dwn_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
last_dwn_next_dwn_gentle_hill_strgy	OPTIMIZE/tools/optimize/rawoptimize/last_dwn_next_dwn_gentle_hill_strgy.c	/^OPTSCH* last_dwn_next_dwn_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
leftRType	conf_manage/xml_extract.h	/^   int leftRType; \/**< 前(左)坡度类型*\/$/;"	m	struct:timeStrategyFlags
len	OPTIMIZE/opt_definition.h	/^	int len; \/**<手动区域段的个数*\/$/;"	m	struct:pusherEngine
len	OPTIMIZE/tools/opt_definition.h	/^	int len; \/**<手动区域段的个数*\/$/;"	m	struct:pusherEngine
length	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t length;    \/* 长度 *\/$/;"	m	struct:gradient_t
length	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t length;$/;"	m	struct:curve_t
length	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t length;$/;"	m	struct:limit_t
length	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t length;$/;"	m	struct:tunnel_t
length	OPTIMIZE/opt_definition.h	/^	float length[2]; \/**< length[0]100为车头的质量，length[1]为单节车厢平均长度 *\/$/;"	m	struct:locoParameter
length	OPTIMIZE/opt_definition.h	/^	int length; \/**< 坡长*\/$/;"	m	struct:roadCategory
length	OPTIMIZE/opt_definition.h	/^	int length;\/**< 坡长*\/$/;"	m	struct:gradient
length	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int length;  \/**< 坡长 *\/$/;"	m	struct:gradientTemp	file:
length	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int length; \/**<曲线长度*\/$/;"	m	struct:curveTemp	file:
length	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int length; \/**<隧道长度*\/$/;"	m	struct:tunnelTemp	file:
length	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t length;    \/* 长度 *\/$/;"	m	struct:gradient_t
length	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t length;$/;"	m	struct:curve_t
length	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t length;$/;"	m	struct:limit_t
length	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t length;$/;"	m	struct:tunnel_t
length	OPTIMIZE/tools/opt_definition.h	/^	float length[2]; \/**< length[0]100为车头的质量，length[1]为单节车厢平均长度 *\/$/;"	m	struct:locoParameter
length	OPTIMIZE/tools/opt_definition.h	/^	int length; \/**< 坡长*\/$/;"	m	struct:roadCategory
length	OPTIMIZE/tools/opt_definition.h	/^	int length;\/**< 坡长*\/$/;"	m	struct:gradient
length	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int length;  \/**< 坡长 *\/$/;"	m	struct:gradientTemp	file:
length	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int length; \/**<曲线长度*\/$/;"	m	struct:curveTemp	file:
length	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int length; \/**<隧道长度*\/$/;"	m	struct:tunnelTemp	file:
length	message_queue/message_queue.h	/^    uint8_t length;$/;"	m	struct:message_queue
length	route_data.h	/^    uint16_t length;    \/* 长度 *\/$/;"	m	struct:gradient_t
length	route_data.h	/^    uint32_t length;$/;"	m	struct:curve_t
length	route_data.h	/^    uint32_t length;$/;"	m	struct:limit_t
length	route_data.h	/^    uint32_t length;$/;"	m	struct:tunnel_t
limit	OPTIMIZE/opt_definition.h	/^	int limit; \/**< 限速值 *\/$/;"	m	struct:limit
limit	OPTIMIZE/opt_definition.h	/^struct limit$/;"	s
limit	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^	float limit; \/**< 限速值*\/$/;"	m	struct:limitInfo
limit	OPTIMIZE/tools/opt_definition.h	/^	int limit; \/**< 限速值 *\/$/;"	m	struct:limit
limit	OPTIMIZE/tools/opt_definition.h	/^struct limit$/;"	s
limit	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^	float limit; \/**< 限速值*\/$/;"	m	struct:limitInfo
limitAdjust	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitAdjust(OPTSCH* optsch,int len,int startPost,int endPost)$/;"	f
limitAdjust	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitAdjust(OPTSCH* optsch,int len,int startPost,int endPost)$/;"	f
limitCategory	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitCategory(OPTSCH* optsch,int len, int startPost,int endPost)$/;"	f
limitCategory	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitCategory(OPTSCH* optsch,int len, int startPost,int endPost)$/;"	f
limitInfo	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^struct limitInfo$/;"	s
limitInfo	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^struct limitInfo$/;"	s
limitManagement	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT limitManagement(OPTSCH* optsch,int len,float start,float ending,float value, int flagS,int flagE,int indexS,int indexE,int index1,int index2,int flag,int longflag)$/;"	f
limitManagement	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT limitManagement(OPTSCH* optsch,int len,float start,float ending,float value, int flagS,int flagE,int indexS,int indexE,int index1,int index2,int flag,int longflag)$/;"	f
limitStrategy	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^OPTIMIZE_RESULT (*limitStrategy)(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag);$/;"	v
limitStrategy	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^OPTIMIZE_RESULT (*limitStrategy)(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag);$/;"	v
limitStrategy01	OPTIMIZE/optimize/limitadjust/limitStrategy01.c	/^OPTIMIZE_RESULT  limitStrategy01(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy01	OPTIMIZE/tools/optimize/limitadjust/limitStrategy01.c	/^OPTIMIZE_RESULT  limitStrategy01(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy02	OPTIMIZE/optimize/limitadjust/limitStrategy02.c	/^OPTIMIZE_RESULT limitStrategy02(OPTSCH* optsch,int len ,LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy02	OPTIMIZE/tools/optimize/limitadjust/limitStrategy02.c	/^OPTIMIZE_RESULT limitStrategy02(OPTSCH* optsch,int len ,LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy03	OPTIMIZE/optimize/limitadjust/limitStrategy03.c	/^OPTIMIZE_RESULT limitStrategy03(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy03	OPTIMIZE/tools/optimize/limitadjust/limitStrategy03.c	/^OPTIMIZE_RESULT limitStrategy03(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy04	OPTIMIZE/optimize/limitadjust/limitStrategy04.c	/^OPTIMIZE_RESULT limitStrategy04(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy04	OPTIMIZE/tools/optimize/limitadjust/limitStrategy04.c	/^OPTIMIZE_RESULT limitStrategy04(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy05	OPTIMIZE/optimize/limitadjust/limitStrategy05.c	/^OPTIMIZE_RESULT limitStrategy05(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy05	OPTIMIZE/tools/optimize/limitadjust/limitStrategy05.c	/^OPTIMIZE_RESULT limitStrategy05(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy06	OPTIMIZE/optimize/limitadjust/limitStrategy06.c	/^OPTIMIZE_RESULT limitStrategy06(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy06	OPTIMIZE/tools/optimize/limitadjust/limitStrategy06.c	/^OPTIMIZE_RESULT limitStrategy06(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy07	OPTIMIZE/optimize/limitadjust/limitStrategy07.c	/^OPTIMIZE_RESULT limitStrategy07(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy07	OPTIMIZE/tools/optimize/limitadjust/limitStrategy07.c	/^OPTIMIZE_RESULT limitStrategy07(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy08	OPTIMIZE/optimize/limitadjust/limitStrategy08.c	/^OPTIMIZE_RESULT limitStrategy08(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy08	OPTIMIZE/tools/optimize/limitadjust/limitStrategy08.c	/^OPTIMIZE_RESULT limitStrategy08(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy09	OPTIMIZE/optimize/limitadjust/limitStrategy09.c	/^OPTIMIZE_RESULT limitStrategy09(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy09	OPTIMIZE/tools/optimize/limitadjust/limitStrategy09.c	/^OPTIMIZE_RESULT limitStrategy09(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy10	OPTIMIZE/optimize/limitadjust/limitStrategy10.c	/^OPTIMIZE_RESULT limitStrategy10(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategy10	OPTIMIZE/tools/optimize/limitadjust/limitStrategy10.c	/^OPTIMIZE_RESULT limitStrategy10(OPTSCH* optsch,int len, LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategyExecute	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitStrategyExecute(OPTSCH* optsch,int len,LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategyExecute	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitStrategyExecute(OPTSCH* optsch,int len,LIMITINFO limitInfo,int count,int flagS,int longflag)$/;"	f
limitStrategyFLags	conf_manage/xml_extract.h	/^struct limitStrategyFLags$/;"	s
limitStrategyFLags_len	conf_manage/xml_extract.h	/^	int limitStrategyFLags_len;$/;"	m	struct:EXTR_OPT_RTN
limitStrategyFLags_p	conf_manage/xml_extract.h	/^	struct limitStrategyFLags *limitStrategyFLags_p; \/\/$/;"	m	struct:EXTR_OPT_RTN	typeref:struct:EXTR_OPT_RTN::limitStrategyFLags
limitStrategyMatcher	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitStrategyMatcher(int flag,float totalWeight)$/;"	f
limitStrategyMatcher	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  limitStrategyMatcher(int flag,float totalWeight)$/;"	f
limitStrategyMetrics	OPTIMIZE/datacontrol/extractData.c	/^LIMITSTRFLAGS* limitStrategyMetrics;$/;"	v
limitStrategyMetrics	OPTIMIZE/tools/datacontrol/extractData.c	/^LIMITSTRFLAGS* limitStrategyMetrics;$/;"	v
limit_opt_exception_decorator	OPTIMIZE/exception/exception.c	/^void   limit_opt_exception_decorator(int  code,LIMIT_OPTIMIZE_RESULT * ret, char desc[])$/;"	f
limit_opt_exception_decorator	OPTIMIZE/tools/exception/exception.c	/^void   limit_opt_exception_decorator(int  code,LIMIT_OPTIMIZE_RESULT * ret, char desc[])$/;"	f
limit_optimize_code	OPTIMIZE/exception/exception.h	/^typedef enum limit_optimize_code$/;"	g
limit_optimize_code	OPTIMIZE/tools/exception/exception.h	/^typedef enum limit_optimize_code$/;"	g
limit_optimize_result	OPTIMIZE/exception/exception.h	/^typedef struct limit_optimize_result$/;"	s
limit_optimize_result	OPTIMIZE/tools/exception/exception.h	/^typedef struct limit_optimize_result$/;"	s
limit_result_adapter	OPTIMIZE/exception/exception.c	/^OPTIMIZE_RESULT  limit_result_adapter(LIMIT_OPTIMIZE_RESULT  result)$/;"	f
limit_result_adapter	OPTIMIZE/tools/exception/exception.c	/^OPTIMIZE_RESULT  limit_result_adapter(LIMIT_OPTIMIZE_RESULT  result)$/;"	f
limit_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct limit_t$/;"	s
limit_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct limit_t$/;"	s
limit_t	route_data.h	/^struct limit_t$/;"	s
limitopt_result	OPTIMIZE/exception/exception.h	/^	LIMIT_OPTIMIZE_CODE   limitopt_result;\/\/!<原始优化异常处理代码$/;"	m	struct:limit_optimize_result
limitopt_result	OPTIMIZE/tools/exception/exception.h	/^	LIMIT_OPTIMIZE_CODE   limitopt_result;\/\/!<原始优化异常处理代码$/;"	m	struct:limit_optimize_result
limits	OPTIMIZE/datacontrol/extractData.c	/^LIMIT* limits;$/;"	v
limits	OPTIMIZE/optimize/common/optimizeTools.c	/^LIMIT* limits;$/;"	v
limits	OPTIMIZE/tools/datacontrol/extractData.c	/^LIMIT* limits;$/;"	v
limits	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^LIMIT* limits;$/;"	v
linenum	conf_manage/xml_extract.h	/^	int linenum;$/;"	m	struct:IN_ROUTEINFO
ll_create	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_RESULT ll_create()$/;"	f
ll_create	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_RESULT ll_create()$/;"	f
ll_current	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_NODE* ll_current;  \/**<current pointer of the linked list, already processed, current->next node is always the one that you are going to process*\/$/;"	v
ll_current	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^LL_NODE* ll_current;$/;"	v
ll_current	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_NODE* ll_current;  \/**<current pointer of the linked list, already processed, current->next node is always the one that you are going to process*\/$/;"	v
ll_current	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^LL_NODE* ll_current;$/;"	v
ll_delete	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_RESULT ll_delete(LL_NODE* p_node)$/;"	f
ll_delete	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_RESULT ll_delete(LL_NODE* p_node)$/;"	f
ll_flag	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^int ll_flag;$/;"	v
ll_flag	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^int ll_flag;$/;"	v
ll_head	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_NODE* ll_head;  \/**<head pointer of the linked list, with NULL data, just a label for remarking the start pointer of the linked list*\/$/;"	v
ll_head	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^LL_NODE* ll_head;$/;"	v
ll_head	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_NODE* ll_head;  \/**<head pointer of the linked list, with NULL data, just a label for remarking the start pointer of the linked list*\/$/;"	v
ll_head	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^LL_NODE* ll_head;$/;"	v
ll_insert	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_RESULT ll_insert(OPTIMIZERESULT* data, int data_length)$/;"	f
ll_insert	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_RESULT ll_insert(OPTIMIZERESULT* data, int data_length)$/;"	f
ll_last	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_NODE* ll_last; \/**the one just passed*\/$/;"	v
ll_last	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^LL_NODE* ll_last;$/;"	v
ll_last	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^LL_NODE* ll_last; \/**the one just passed*\/$/;"	v
ll_last	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^LL_NODE* ll_last;$/;"	v
ll_lock	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^static int ll_lock()$/;"	f	file:
ll_lock	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^static int ll_lock()$/;"	f	file:
ll_manage_result	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef enum ll_manage_result$/;"	g
ll_manage_result	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef enum ll_manage_result$/;"	g
ll_mutex	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^static pthread_mutex_t ll_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
ll_mutex	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^static pthread_mutex_t ll_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
ll_node	OPTIMIZE/drivecontrol/rt_definition.h	/^struct ll_node$/;"	s
ll_node	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct ll_node$/;"	s
ll_unlock	OPTIMIZE/drivecontrol/linked_list_operations/linked_list_operations.c	/^static int ll_unlock()$/;"	f	file:
ll_unlock	OPTIMIZE/tools/drivecontrol/linked_list_operations/linked_list_operations.c	/^static int ll_unlock()$/;"	f	file:
loadWeight	OPTIMIZE/opt_definition.h	/^	float loadWeight;\/**< 载重 *\/$/;"	m	struct:carStruct
loadWeight	OPTIMIZE/tools/opt_definition.h	/^	float loadWeight;\/**< 载重 *\/$/;"	m	struct:carStruct
loc_sockets	app_socket/app_socket.c	/^static struct socket_t loc_sockets[MAX_SOCKET_NUM]; \/\/存放socket_fd及对应优先级$/;"	v	typeref:struct:socket_t	file:
lock	threadpool/threadpool.c	/^  pthread_mutex_t lock;$/;"	m	struct:threadpool_t	file:
locoInfo	OPTIMIZE/datacontrol/extractData.c	/^LOCOPARAMETER locoInfo;$/;"	v
locoInfo	OPTIMIZE/optimize/common/tractionCaculator.c	/^LOCOPARAMETER locoInfo;$/;"	v
locoInfo	OPTIMIZE/tools/datacontrol/extractData.c	/^LOCOPARAMETER locoInfo;$/;"	v
locoInfo	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^LOCOPARAMETER locoInfo;$/;"	v
locoParameter	OPTIMIZE/opt_definition.h	/^struct locoParameter  \/\/机车参数$/;"	s
locoParameter	OPTIMIZE/tools/opt_definition.h	/^struct locoParameter  \/\/机车参数$/;"	s
log_error	log.h	60;"	d
log_error	log.h	74;"	d
log_error	log.h	88;"	d
log_file_name	log.h	/^char log_file_name[100];$/;"	v
log_info	log.h	62;"	d
log_info	log.h	76;"	d
log_info	log.h	90;"	d
log_notice	log.h	63;"	d
log_notice	log.h	77;"	d
log_notice	log.h	91;"	d
log_warning	log.h	61;"	d
log_warning	log.h	75;"	d
log_warning	log.h	89;"	d
mDirection	OPTIMIZE/optimize/preprocess/preprocess.c	/^int mDirection;$/;"	v
mDirection	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^int mDirection;$/;"	v
mGra	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	float mGra; \/**< 坡度值 *\/$/;"	m	struct:critical_v
mGra	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	float mGra; \/**< 坡度值 *\/$/;"	m	struct:critical_v
mGradient	OPTIMIZE/opt_definition.h	/^struct mGradient$/;"	s
mGradient	OPTIMIZE/tools/opt_definition.h	/^struct mGradient$/;"	s
mGradients	OPTIMIZE/optimize/common/tractionCaculator.c	/^MGRADIENT* mGradients;$/;"	v
mGradients	OPTIMIZE/optimize/preprocess/preprocess.c	/^MGRADIENT* mGradients;$/;"	v
mGradients	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^MGRADIENT* mGradients;$/;"	v
mGradients	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^MGRADIENT* mGradients;$/;"	v
mOffset	OPTIMIZE/optimize/preprocess/preprocess.c	/^int mOffset;$/;"	v
mOffset	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^int mOffset;$/;"	v
m_car	OPTIMIZE/optimize/common/tractionCaculator.c	/^float m_car; \/\/average weight for a car$/;"	v
m_car	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^float m_car; \/\/average weight for a car$/;"	v
m_loco	OPTIMIZE/optimize/common/tractionCaculator.c	/^float m_loco; \/\/ train head weight$/;"	v
m_loco	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^float m_loco; \/\/ train head weight$/;"	v
main	to_core.c	/^int main(void)$/;"	f
manual_flag	OPTIMIZE/opt_definition.h	/^	OPTFLAG manual_flag;\/**<用于手动区域的标识符*\/$/;"	m	struct:opt_sch_curve
manual_flag	OPTIMIZE/tools/opt_definition.h	/^	OPTFLAG manual_flag;\/**<用于手动区域的标识符*\/$/;"	m	struct:opt_sch_curve
max	OPTIMIZE/optimize_curve.h	15;"	d
max	OPTIMIZE/tools/optimize_curve.h	15;"	d
max	conf_manage/xml_extract.h	/^	char* max;  \/\/用于存放数据值范围$/;"	m	struct:EXTR_ROUTEINFO
max	conf_manage/xml_extract.h	/^	char* max; \/\/用于存放数据值范围$/;"	m	struct:ROUTEINFO
max	conf_manage/xml_extract.h	/^	char* max;$/;"	m	struct:EXTR_OPT_DATARANGE
maxAvg	conf_manage/xml_extract.h	/^   float maxAvg; \/**<最大平均速度*\/$/;"	m	struct:strategyFlags
maxLen	conf_manage/xml_extract.h	/^   int maxLen; \/**<最大坡长*\/$/;"	m	struct:strategyFlags
maxMass	conf_manage/xml_extract.h	/^    int maxMass; \/**< 最大车重*\/$/;"	m	struct:limitStrategyFLags
maxMass	conf_manage/xml_extract.h	/^   int maxMass;  \/**< 最大车重*\/$/;"	m	struct:strategyFlags
maxSteepDownPect	conf_manage/xml_extract.h	/^   int maxSteepDownPect; \/**< 最大抖下坡百分比*\/$/;"	m	struct:strategyFlags
maxSteepUpPect	conf_manage/xml_extract.h	/^   int maxSteepUpPect; \/**<最大抖上坡百分比*\/$/;"	m	struct:strategyFlags
mean	OPTIMIZE/optimize_curve.h	17;"	d
mean	OPTIMIZE/tools/optimize_curve.h	17;"	d
mergeGradient	OPTIMIZE/optimize/preprocess/preprocess.c	/^PRE_PROCESS_RESULT  mergeGradient(int endPost) {$/;"	f
mergeGradient	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^PRE_PROCESS_RESULT  mergeGradient(int endPost) {$/;"	f
message_node	message_queue/message_queue.h	/^struct message_node$/;"	s
message_queue	message_queue/message_queue.h	/^struct message_queue$/;"	s
message_queue_init	to_init.c	/^static inline void message_queue_init(void)$/;"	f	file:
midV	OPTIMIZE/optimize/afterprocess/after_process.h	/^	  float midV;   \/\/该档位的中间位置的速度$/;"	m	struct:gearSegInfo
midV	OPTIMIZE/tools/optimize/afterprocess/after_process.h	/^	  float midV;   \/\/该档位的中间位置的速度$/;"	m	struct:gearSegInfo
min	OPTIMIZE/optimize_curve.h	16;"	d
min	OPTIMIZE/tools/optimize_curve.h	16;"	d
min	conf_manage/xml_extract.h	/^	char* min;	\/\/用于存放数据值范围$/;"	m	struct:EXTR_ROUTEINFO
min	conf_manage/xml_extract.h	/^	char* min; \/\/用于存放数据值范围$/;"	m	struct:ROUTEINFO
min	conf_manage/xml_extract.h	/^	char* min;$/;"	m	struct:EXTR_OPT_DATARANGE
minAvg	conf_manage/xml_extract.h	/^   float minAvg; \/**<最小平均速度*\/$/;"	m	struct:strategyFlags
minLen	conf_manage/xml_extract.h	/^   int minLen; \/**< 最小坡长*\/$/;"	m	struct:strategyFlags
minMass	conf_manage/xml_extract.h	/^    int minMass; \/**< 最小车重*\/$/;"	m	struct:limitStrategyFLags
minMass	conf_manage/xml_extract.h	/^   int minMass; \/**< 最小车重 *\/$/;"	m	struct:strategyFlags
minSteepDownPect	conf_manage/xml_extract.h	/^   int minSteepDownPect; \/**< 最小抖下坡百分比*\/$/;"	m	struct:strategyFlags
minSteepUpPect	conf_manage/xml_extract.h	/^   int minSteepUpPect; \/**<最小抖上坡百分比*\/$/;"	m	struct:strategyFlags
monitor_situation_flag	realtime_data.h	/^	int8_t monitor_situation_flag;$/;"	m	struct:_realtime_event_flag
multiParticalModel	OPTIMIZE/optimize/common/tractionCaculator.c	/^float multiParticalModel(float start, int *count) {$/;"	f
multiParticalModel	OPTIMIZE/tools/optimize/common/tractionCaculator.c	/^float multiParticalModel(float start, int *count) {$/;"	f
multilevel_queue_t	message_queue/message_queue.h	/^struct multilevel_queue_t$/;"	s
mutex	message_queue/schedule.c	/^    pthread_mutex_t mutex;$/;"	m	struct:event_mutex_t	file:
mutex	message_queue/schedule.c	/^    pthread_mutex_t mutex;$/;"	m	struct:schedule_mutex_t	file:
mxmlAdd	conf_manage/xmlopt/mxml-node.c	/^mxmlAdd(mxml_node_t *parent,		\/* I - Parent node *\/$/;"	f
mxmlDelete	conf_manage/xmlopt/mxml-node.c	/^mxmlDelete(mxml_node_t *node)		\/* I - Node to delete *\/$/;"	f
mxmlElementDeleteAttr	conf_manage/xmlopt/mxml-attr.c	/^mxmlElementDeleteAttr(mxml_node_t *node,\/* I - Element *\/$/;"	f
mxmlElementGetAttr	conf_manage/xmlopt/mxml-attr.c	/^mxmlElementGetAttr(mxml_node_t *node,	\/* I - Element node *\/$/;"	f
mxmlElementSetAttr	conf_manage/xmlopt/mxml-attr.c	/^mxmlElementSetAttr(mxml_node_t *node,	\/* I - Element node *\/$/;"	f
mxmlElementSetAttrf	conf_manage/xmlopt/mxml-attr.c	/^mxmlElementSetAttrf(mxml_node_t *node,	\/* I - Element node *\/$/;"	f
mxmlEntityAddCallback	conf_manage/xmlopt/mxml-entity.c	/^mxmlEntityAddCallback($/;"	f
mxmlEntityGetName	conf_manage/xmlopt/mxml-entity.c	/^mxmlEntityGetName(int val)		\/* I - Character value *\/$/;"	f
mxmlEntityGetValue	conf_manage/xmlopt/mxml-entity.c	/^mxmlEntityGetValue(const char *name)	\/* I - Entity name *\/$/;"	f
mxmlEntityRemoveCallback	conf_manage/xmlopt/mxml-entity.c	/^mxmlEntityRemoveCallback($/;"	f
mxmlFindElement	conf_manage/xmlopt/mxml-search.c	/^mxmlFindElement(mxml_node_t *node,	\/* I - Current node *\/$/;"	f
mxmlFindPath	conf_manage/xmlopt/mxml-search.c	/^mxmlFindPath(mxml_node_t *top,		\/* I - Top node *\/$/;"	f
mxmlGetCDATA	conf_manage/xmlopt/mxml-get.c	/^mxmlGetCDATA(mxml_node_t *node)		\/* I - Node to get *\/$/;"	f
mxmlGetCustom	conf_manage/xmlopt/mxml-get.c	/^mxmlGetCustom(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetElement	conf_manage/xmlopt/mxml-get.c	/^mxmlGetElement(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetFirstChild	conf_manage/xmlopt/mxml-get.c	/^mxmlGetFirstChild(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetInteger	conf_manage/xmlopt/mxml-get.c	/^mxmlGetInteger(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetLastChild	conf_manage/xmlopt/mxml-get.c	/^mxmlGetLastChild(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetNextSibling	conf_manage/xmlopt/mxml-get.c	/^mxmlGetNextSibling(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetOpaque	conf_manage/xmlopt/mxml-get.c	/^mxmlGetOpaque(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetParent	conf_manage/xmlopt/mxml-get.c	/^mxmlGetParent(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetPrevSibling	conf_manage/xmlopt/mxml-get.c	/^mxmlGetPrevSibling(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlGetReal	conf_manage/xmlopt/mxml-get.c	/^mxmlGetReal(mxml_node_t *node)		\/* I - Node to get *\/$/;"	f
mxmlGetRefCount	conf_manage/xmlopt/mxml-node.c	/^mxmlGetRefCount(mxml_node_t *node)	\/* I - Node *\/$/;"	f
mxmlGetText	conf_manage/xmlopt/mxml-get.c	/^mxmlGetText(mxml_node_t *node,		\/* I - Node to get *\/$/;"	f
mxmlGetType	conf_manage/xmlopt/mxml-get.c	/^mxmlGetType(mxml_node_t *node)		\/* I - Node to get *\/$/;"	f
mxmlGetUserData	conf_manage/xmlopt/mxml-get.c	/^mxmlGetUserData(mxml_node_t *node)	\/* I - Node to get *\/$/;"	f
mxmlIndexDelete	conf_manage/xmlopt/mxml-index.c	/^mxmlIndexDelete(mxml_index_t *ind)	\/* I - Index to delete *\/$/;"	f
mxmlIndexEnum	conf_manage/xmlopt/mxml-index.c	/^mxmlIndexEnum(mxml_index_t *ind)	\/* I - Index to enumerate *\/$/;"	f
mxmlIndexFind	conf_manage/xmlopt/mxml-index.c	/^mxmlIndexFind(mxml_index_t *ind,	\/* I - Index to search *\/$/;"	f
mxmlIndexGetCount	conf_manage/xmlopt/mxml-index.c	/^mxmlIndexGetCount(mxml_index_t *ind)	\/* I - Index of nodes *\/$/;"	f
mxmlIndexNew	conf_manage/xmlopt/mxml-index.c	/^mxmlIndexNew(mxml_node_t *node,		\/* I - XML node tree *\/$/;"	f
mxmlIndexReset	conf_manage/xmlopt/mxml-index.c	/^mxmlIndexReset(mxml_index_t *ind)	\/* I - Index to reset *\/$/;"	f
mxmlLoadFd	conf_manage/xmlopt/mxml-file.c	/^mxmlLoadFd(mxml_node_t    *top,		\/* I - Top node *\/$/;"	f
mxmlLoadFile	conf_manage/xmlopt/mxml-file.c	/^mxmlLoadFile(mxml_node_t    *top,	\/* I - Top node *\/$/;"	f
mxmlLoadString	conf_manage/xmlopt/mxml-file.c	/^mxmlLoadString(mxml_node_t    *top,	\/* I - Top node *\/$/;"	f
mxmlNewCDATA	conf_manage/xmlopt/mxml-node.c	/^mxmlNewCDATA(mxml_node_t *parent,	\/* I - Parent node or MXML_NO_PARENT *\/$/;"	f
mxmlNewCustom	conf_manage/xmlopt/mxml-node.c	/^mxmlNewCustom($/;"	f
mxmlNewElement	conf_manage/xmlopt/mxml-node.c	/^mxmlNewElement(mxml_node_t *parent,	\/* I - Parent node or MXML_NO_PARENT *\/$/;"	f
mxmlNewInteger	conf_manage/xmlopt/mxml-node.c	/^mxmlNewInteger(mxml_node_t *parent,	\/* I - Parent node or MXML_NO_PARENT *\/$/;"	f
mxmlNewOpaque	conf_manage/xmlopt/mxml-node.c	/^mxmlNewOpaque(mxml_node_t *parent,	\/* I - Parent node or MXML_NO_PARENT *\/$/;"	f
mxmlNewReal	conf_manage/xmlopt/mxml-node.c	/^mxmlNewReal(mxml_node_t *parent,	\/* I - Parent node or MXML_NO_PARENT *\/$/;"	f
mxmlNewText	conf_manage/xmlopt/mxml-node.c	/^mxmlNewText(mxml_node_t *parent,	\/* I - Parent node or MXML_NO_PARENT *\/$/;"	f
mxmlNewTextf	conf_manage/xmlopt/mxml-node.c	/^mxmlNewTextf(mxml_node_t *parent,	\/* I - Parent node or MXML_NO_PARENT *\/$/;"	f
mxmlNewXML	conf_manage/xmlopt/mxml-node.c	/^mxmlNewXML(const char *version)		\/* I - Version number to use *\/$/;"	f
mxmlRelease	conf_manage/xmlopt/mxml-node.c	/^mxmlRelease(mxml_node_t *node)		\/* I - Node *\/$/;"	f
mxmlRemove	conf_manage/xmlopt/mxml-node.c	/^mxmlRemove(mxml_node_t *node)		\/* I - Node to remove *\/$/;"	f
mxmlRetain	conf_manage/xmlopt/mxml-node.c	/^mxmlRetain(mxml_node_t *node)		\/* I - Node *\/$/;"	f
mxmlSAXLoadFd	conf_manage/xmlopt/mxml-file.c	/^mxmlSAXLoadFd(mxml_node_t    *top,	\/* I - Top node *\/$/;"	f
mxmlSAXLoadFile	conf_manage/xmlopt/mxml-file.c	/^mxmlSAXLoadFile($/;"	f
mxmlSAXLoadString	conf_manage/xmlopt/mxml-file.c	/^mxmlSAXLoadString($/;"	f
mxmlSaveAllocString	conf_manage/xmlopt/mxml-file.c	/^mxmlSaveAllocString($/;"	f
mxmlSaveFd	conf_manage/xmlopt/mxml-file.c	/^mxmlSaveFd(mxml_node_t    *node,	\/* I - Node to write *\/$/;"	f
mxmlSaveFile	conf_manage/xmlopt/mxml-file.c	/^mxmlSaveFile(mxml_node_t    *node,	\/* I - Node to write *\/$/;"	f
mxmlSaveString	conf_manage/xmlopt/mxml-file.c	/^mxmlSaveString(mxml_node_t    *node,	\/* I - Node to write *\/$/;"	f
mxmlSetCDATA	conf_manage/xmlopt/mxml-set.c	/^mxmlSetCDATA(mxml_node_t *node,		\/* I - Node to set *\/$/;"	f
mxmlSetCustom	conf_manage/xmlopt/mxml-set.c	/^mxmlSetCustom($/;"	f
mxmlSetCustomHandlers	conf_manage/xmlopt/mxml-file.c	/^mxmlSetCustomHandlers($/;"	f
mxmlSetElement	conf_manage/xmlopt/mxml-set.c	/^mxmlSetElement(mxml_node_t *node,	\/* I - Node to set *\/$/;"	f
mxmlSetErrorCallback	conf_manage/xmlopt/mxml-file.c	/^mxmlSetErrorCallback(mxml_error_cb_t cb)\/* I - Error callback function *\/$/;"	f
mxmlSetInteger	conf_manage/xmlopt/mxml-set.c	/^mxmlSetInteger(mxml_node_t *node,	\/* I - Node to set *\/$/;"	f
mxmlSetOpaque	conf_manage/xmlopt/mxml-set.c	/^mxmlSetOpaque(mxml_node_t *node,	\/* I - Node to set *\/$/;"	f
mxmlSetReal	conf_manage/xmlopt/mxml-set.c	/^mxmlSetReal(mxml_node_t *node,		\/* I - Node to set *\/$/;"	f
mxmlSetText	conf_manage/xmlopt/mxml-set.c	/^mxmlSetText(mxml_node_t *node,		\/* I - Node to set *\/$/;"	f
mxmlSetTextf	conf_manage/xmlopt/mxml-set.c	/^mxmlSetTextf(mxml_node_t *node,		\/* I - Node to set *\/$/;"	f
mxmlSetUserData	conf_manage/xmlopt/mxml-set.c	/^mxmlSetUserData(mxml_node_t *node,	\/* I - Node to set *\/$/;"	f
mxmlSetWrapMargin	conf_manage/xmlopt/mxml-file.c	/^mxmlSetWrapMargin(int column)		\/* I - Column for wrapping, 0 to disable wrapping *\/$/;"	f
mxmlWalkNext	conf_manage/xmlopt/mxml-search.c	/^mxmlWalkNext(mxml_node_t *node,		\/* I - Current node *\/$/;"	f
mxmlWalkPrev	conf_manage/xmlopt/mxml-search.c	/^mxmlWalkPrev(mxml_node_t *node,		\/* I - Current node *\/$/;"	f
mxml_add_char	conf_manage/xmlopt/mxml-file.c	/^mxml_add_char(int  ch,			\/* I  - Character to add *\/$/;"	f	file:
mxml_attr_s	conf_manage/xmlopt/mxml.h	/^typedef struct mxml_attr_s		\/**** An XML element attribute value. @private@ ****\/$/;"	s
mxml_attr_t	conf_manage/xmlopt/mxml.h	/^} mxml_attr_t;$/;"	t	typeref:struct:mxml_attr_s
mxml_bad_char	conf_manage/xmlopt/mxml-file.c	75;"	d	file:
mxml_custom_destroy_cb_t	conf_manage/xmlopt/mxml.h	/^typedef void (*mxml_custom_destroy_cb_t)(void *);$/;"	t
mxml_custom_load_cb_t	conf_manage/xmlopt/mxml.h	/^typedef int (*mxml_custom_load_cb_t)(mxml_node_t *, const char *);$/;"	t
mxml_custom_s	conf_manage/xmlopt/mxml.h	/^typedef struct mxml_custom_s		\/**** An XML custom value. @private@ ****\/$/;"	s
mxml_custom_save_cb_t	conf_manage/xmlopt/mxml.h	/^typedef char *(*mxml_custom_save_cb_t)(mxml_node_t *);  $/;"	t
mxml_custom_t	conf_manage/xmlopt/mxml.h	/^} mxml_custom_t;$/;"	t	typeref:struct:mxml_custom_s
mxml_element_s	conf_manage/xmlopt/mxml.h	/^typedef struct mxml_element_s		\/**** An XML element value. @private@ ****\/$/;"	s
mxml_element_t	conf_manage/xmlopt/mxml.h	/^} mxml_element_t;$/;"	t	typeref:struct:mxml_element_s
mxml_entity_cb_t	conf_manage/xmlopt/mxml.h	/^typedef int (*mxml_entity_cb_t)(const char *);$/;"	t
mxml_error	conf_manage/xmlopt/mxml-private.c	/^mxml_error(const char *format,		\/* I - Printf-style format string *\/$/;"	f
mxml_error_cb_t	conf_manage/xmlopt/mxml.h	/^typedef void (*mxml_error_cb_t)(const char *);  $/;"	t
mxml_fd_getc	conf_manage/xmlopt/mxml-file.c	/^mxml_fd_getc(void *p,			\/* I  - File descriptor buffer *\/$/;"	f	file:
mxml_fd_putc	conf_manage/xmlopt/mxml-file.c	/^mxml_fd_putc(int  ch,			\/* I - Character *\/$/;"	f	file:
mxml_fd_read	conf_manage/xmlopt/mxml-file.c	/^mxml_fd_read(_mxml_fdbuf_t *buf)		\/* I - File descriptor buffer *\/$/;"	f	file:
mxml_fd_write	conf_manage/xmlopt/mxml-file.c	/^mxml_fd_write(_mxml_fdbuf_t *buf)	\/* I - File descriptor buffer *\/$/;"	f	file:
mxml_file_getc	conf_manage/xmlopt/mxml-file.c	/^mxml_file_getc(void *p,			\/* I  - Pointer to file *\/$/;"	f	file:
mxml_file_putc	conf_manage/xmlopt/mxml-file.c	/^mxml_file_putc(int  ch,			\/* I - Character to write *\/$/;"	f	file:
mxml_get_entity	conf_manage/xmlopt/mxml-file.c	/^mxml_get_entity(mxml_node_t *parent,	\/* I  - Parent node *\/$/;"	f	file:
mxml_ignore_cb	conf_manage/xmlopt/mxml-private.c	/^mxml_ignore_cb(mxml_node_t *node)	\/* I - Current node *\/$/;"	f
mxml_index_s	conf_manage/xmlopt/mxml.h	/^struct mxml_index_s			 \/**** An XML node index. @private@ ****\/$/;"	s
mxml_index_t	conf_manage/xmlopt/mxml.h	/^typedef struct mxml_index_s mxml_index_t;$/;"	t	typeref:struct:mxml_index_s
mxml_integer_cb	conf_manage/xmlopt/mxml-private.c	/^mxml_integer_cb(mxml_node_t *node)	\/* I - Current node *\/$/;"	f
mxml_isspace	conf_manage/xmlopt/mxml-file.c	/^static inline int	mxml_isspace(int ch)$/;"	f	file:
mxml_load_cb_t	conf_manage/xmlopt/mxml.h	/^typedef mxml_type_t (*mxml_load_cb_t)(mxml_node_t *);$/;"	t
mxml_load_data	conf_manage/xmlopt/mxml-file.c	/^mxml_load_data($/;"	f	file:
mxml_new	conf_manage/xmlopt/mxml-node.c	/^mxml_new(mxml_node_t *parent,		\/* I - Parent node *\/$/;"	f	file:
mxml_node_s	conf_manage/xmlopt/mxml.h	/^struct mxml_node_s			\/**** An XML node. @private@ ****\/$/;"	s
mxml_node_t	conf_manage/xmlopt/mxml.h	/^typedef struct mxml_node_s mxml_node_t;	\/**** An XML node. ****\/$/;"	t	typeref:struct:mxml_node_s
mxml_opaque_cb	conf_manage/xmlopt/mxml-private.c	/^mxml_opaque_cb(mxml_node_t *node)	\/* I - Current node *\/$/;"	f
mxml_parse_element	conf_manage/xmlopt/mxml-file.c	/^mxml_parse_element($/;"	f	file:
mxml_real_cb	conf_manage/xmlopt/mxml-private.c	/^mxml_real_cb(mxml_node_t *node)		\/* I - Current node *\/$/;"	f
mxml_save_cb_t	conf_manage/xmlopt/mxml.h	/^typedef const char *(*mxml_save_cb_t)(mxml_node_t *, int);$/;"	t
mxml_sax_cb_t	conf_manage/xmlopt/mxml.h	/^typedef void (*mxml_sax_cb_t)(mxml_node_t *, mxml_sax_event_t, void *);  $/;"	t
mxml_sax_event_e	conf_manage/xmlopt/mxml.h	/^typedef enum mxml_sax_event_e		\/**** SAX event type. ****\/$/;"	g
mxml_sax_event_t	conf_manage/xmlopt/mxml.h	/^} mxml_sax_event_t;$/;"	t	typeref:enum:mxml_sax_event_e
mxml_set_attr	conf_manage/xmlopt/mxml-attr.c	/^mxml_set_attr(mxml_node_t *node,	\/* I - Element node *\/$/;"	f	file:
mxml_string_getc	conf_manage/xmlopt/mxml-file.c	/^mxml_string_getc(void *p,		\/* I  - Pointer to file *\/$/;"	f	file:
mxml_string_putc	conf_manage/xmlopt/mxml-file.c	/^mxml_string_putc(int  ch,		\/* I - Character to write *\/$/;"	f	file:
mxml_text_s	conf_manage/xmlopt/mxml.h	/^typedef struct mxml_text_s		\/**** An XML text value. @private@ ****\/$/;"	s
mxml_text_t	conf_manage/xmlopt/mxml.h	/^} mxml_text_t;$/;"	t	typeref:struct:mxml_text_s
mxml_type_e	conf_manage/xmlopt/mxml.h	/^typedef enum mxml_type_e		\/**** The XML node type. ****\/$/;"	g
mxml_type_t	conf_manage/xmlopt/mxml.h	/^} mxml_type_t;$/;"	t	typeref:enum:mxml_type_e
mxml_value_t	conf_manage/xmlopt/mxml.h	/^} mxml_value_t;$/;"	t	typeref:union:mxml_value_u
mxml_value_u	conf_manage/xmlopt/mxml.h	/^typedef union mxml_value_u		\/**** An XML node value. @private@ ****\/$/;"	u
mxml_write_name	conf_manage/xmlopt/mxml-file.c	/^mxml_write_name(const char *s,		\/* I - Name to write *\/$/;"	f	file:
mxml_write_node	conf_manage/xmlopt/mxml-file.c	/^mxml_write_node(mxml_node_t     *node,	\/* I - Node to write *\/$/;"	f	file:
mxml_write_string	conf_manage/xmlopt/mxml-file.c	/^mxml_write_string($/;"	f	file:
mxml_write_ws	conf_manage/xmlopt/mxml-file.c	/^mxml_write_ws(mxml_node_t     *node,	\/* I - Current node *\/$/;"	f	file:
name	conf_manage/xml_extract.h	/^	char name[ARRAY_LEN];\/\/存放OptimizeStrategy.xml中"ParameterConfig"里"name"属性值，如"G", "PRECISION"等$/;"	m	struct:PARAMCFG
name	conf_manage/xml_extract.h	/^    char  name[40];  \/**<策略名称*\/$/;"	m	struct:limitStrategyFLags
name	conf_manage/xml_extract.h	/^   char  name[40];  \/**<策略名称*\/$/;"	m	struct:strategyFlags
name	conf_manage/xml_extract.h	/^   char name[40]; \/** 策略名称*\/$/;"	m	struct:timeStrategyFlags
name	conf_manage/xmlopt/mxml.h	/^  char			*name;		\/* Attribute name *\/$/;"	m	struct:mxml_attr_s
name	conf_manage/xmlopt/mxml.h	/^  char			*name;		\/* Name of element *\/$/;"	m	struct:mxml_element_s
netxstation	conf_manage/xml_extract.h	/^	char netxstation[ARRAY_LEN];$/;"	m	struct:EXTRACT_FR_STT
newGradientGeneration	OPTIMIZE/optimize/preprocess/preprocess.c	/^PRE_PROCESS_RESULT  newGradientGeneration(MGRADIENT *old_gradients,int length,int loco_length,int end_post)$/;"	f
newGradientGeneration	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^PRE_PROCESS_RESULT  newGradientGeneration(MGRADIENT *old_gradients,int length,int loco_length,int end_post)$/;"	f
new_event	message_queue/schedule.c	/^    int new_event;$/;"	m	struct:schedule_mutex_t	file:
new_final_curve	OPTIMIZE/optimize/optimize.c	/^OPTSCH* new_final_curve;$/;"	v
new_final_curve	OPTIMIZE/tools/optimize/optimize.c	/^OPTSCH* new_final_curve;$/;"	v
new_gradients	OPTIMIZE/optimize/preprocess/preprocess.c	/^MGRADIENT *new_gradients;$/;"	v
new_gradients	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^MGRADIENT *new_gradients;$/;"	v
next	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    struct branch_change_t *next;   \/* 同一信号机下可能有多个转移 *\/$/;"	m	struct:branch_change_t	typeref:struct:branch_change_t::branch_change_t
next	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    struct route_change_t *next;    \/* 同一信号机内的多个转移 *\/$/;"	m	struct:route_change_t	typeref:struct:route_change_t::route_change_t
next	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    struct route_node   *next;$/;"	m	struct:route_node	typeref:struct:route_node::route_node
next	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    struct sidetrack_t *next;$/;"	m	struct:sidetrack_t	typeref:struct:sidetrack_t::sidetrack_t
next	OPTIMIZE/drivecontrol/rt_definition.h	/^	struct ll_node* next;$/;"	m	struct:ll_node	typeref:struct:ll_node::ll_node
next	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    struct branch_change_t *next;   \/* 同一信号机下可能有多个转移 *\/$/;"	m	struct:branch_change_t	typeref:struct:branch_change_t::branch_change_t
next	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    struct route_change_t *next;    \/* 同一信号机内的多个转移 *\/$/;"	m	struct:route_change_t	typeref:struct:route_change_t::route_change_t
next	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    struct route_node   *next;$/;"	m	struct:route_node	typeref:struct:route_node::route_node
next	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    struct sidetrack_t *next;$/;"	m	struct:sidetrack_t	typeref:struct:sidetrack_t::sidetrack_t
next	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	struct ll_node* next;$/;"	m	struct:ll_node	typeref:struct:ll_node::ll_node
next	conf_manage/xmlopt/mxml.h	/^  struct mxml_node_s	*next;		\/* Next node under same parent *\/$/;"	m	struct:mxml_node_s	typeref:struct:mxml_node_s::mxml_node_s
next	message_queue/message_queue.h	/^    struct message_node *next;$/;"	m	struct:message_node	typeref:struct:message_node::message_node
next	route_data.h	/^    struct branch_change_t *next;   \/* 同一信号机下可能有多个转移 *\/$/;"	m	struct:branch_change_t	typeref:struct:branch_change_t::branch_change_t
next	route_data.h	/^    struct route_change_t *next;    \/* 同一信号机内的多个转移 *\/$/;"	m	struct:route_change_t	typeref:struct:route_change_t::route_change_t
next	route_data.h	/^    struct route_node   *next;$/;"	m	struct:route_node	typeref:struct:route_node::route_node
next	route_data.h	/^    struct sidetrack_t *next;$/;"	m	struct:sidetrack_t	typeref:struct:sidetrack_t::sidetrack_t
nextGraType	conf_manage/xml_extract.h	/^   int nextGraType;\/**<下一段坡段类型,若没有该元素，则该元素值为100*\/$/;"	m	struct:strategyFlags
next_station	OPTIMIZE/drivecontrol/rt_definition.h	/^	STATION next_station;$/;"	m	struct:next_station_info
next_station	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	STATION next_station;$/;"	m	struct:next_station_info
next_station_info	OPTIMIZE/drivecontrol/rt_definition.h	/^struct next_station_info$/;"	s
next_station_info	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct next_station_info$/;"	s
next_steep_dwn_gentle_hill_strgy	OPTIMIZE/optimize/rawoptimize/next_steep_dwn_gentle_hill_strgy.c	/^OPTSCH* next_steep_dwn_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
next_steep_dwn_gentle_hill_strgy	OPTIMIZE/tools/optimize/rawoptimize/next_steep_dwn_gentle_hill_strgy.c	/^OPTSCH* next_steep_dwn_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
next_steep_up_gentle_hill_strgy	OPTIMIZE/optimize/rawoptimize/next_steep_up_gentle_hill_strgy.c	/^OPTSCH* next_steep_up_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
next_steep_up_gentle_hill_strgy	OPTIMIZE/tools/optimize/rawoptimize/next_steep_up_gentle_hill_strgy.c	/^OPTSCH* next_steep_up_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
node_id	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t node_id;$/;"	m	struct:route_node
node_id	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t node_id;$/;"	m	struct:route_node
node_id	route_data.h	/^    uint32_t node_id;$/;"	m	struct:route_node
node_value_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^typedef struct node_value_t$/;"	s
node_value_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^}node_value_t;$/;"	t	typeref:struct:node_value_t
node_value_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^typedef struct node_value_t$/;"	s
node_value_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^}node_value_t;$/;"	t	typeref:struct:node_value_t
node_value_t	route_data.h	/^typedef struct node_value_t$/;"	s
node_value_t	route_data.h	/^}node_value_t;$/;"	t	typeref:struct:node_value_t
nodes	conf_manage/xmlopt/mxml.h	/^  mxml_node_t		**nodes;	\/* Node array *\/$/;"	m	struct:mxml_index_s
notify	threadpool/threadpool.c	/^  pthread_cond_t notify;$/;"	m	struct:threadpool_t	file:
ns_info	OPTIMIZE/drivecontrol/rt_definition.h	/^	RT_NS_INFO ns_info;$/;"	m	struct:rt_output
ns_info	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	RT_NS_INFO ns_info;$/;"	m	struct:rt_output
num_attrs	conf_manage/xmlopt/mxml.h	/^  int			num_attrs;	\/* Number of attributes *\/$/;"	m	struct:mxml_element_s
num_entity_cbs	conf_manage/xmlopt/mxml-private.h	/^  int	num_entity_cbs;$/;"	m	struct:_mxml_global_s
num_nodes	conf_manage/xmlopt/mxml.h	/^  int			num_nodes;	\/* Number of nodes in index *\/$/;"	m	struct:mxml_index_s
number	message_queue/message_queue.h	/^    uint8_t number; \/* 队列个数 *\/$/;"	m	struct:multilevel_queue_t
odd_gear_trasfer	OPTIMIZE/optimize/afterprocess/odd_gear_trasfer.c	/^OPTSCH*  odd_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int *cap,OPTSCH* optSch,int* srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
odd_gear_trasfer	OPTIMIZE/tools/optimize/afterprocess/odd_gear_trasfer.c	/^OPTSCH*  odd_gear_trasfer(OPTSCH* new_tmp_curve,int * tmp_final_len,int *cap,OPTSCH* optSch,int* srcInxT,float tStep,float idelStep,OPTIMIZE_RESULT* opt_ret)$/;"	f
opaque	conf_manage/xmlopt/mxml.h	/^  char			*opaque;	\/* Opaque string *\/$/;"	m	union:mxml_value_u
openXML	OPTIMIZE/datacontrol/extractData.c	/^mxml_node_t*  openXML(char* fileName,char* permission)$/;"	f
openXML	OPTIMIZE/tools/datacontrol/extractData.c	/^mxml_node_t*  openXML(char* fileName,char* permission)$/;"	f
optConstParam	OPTIMIZE/opt_definition.h	/^struct optConstParam$/;"	s
optConstParam	OPTIMIZE/tools/opt_definition.h	/^struct optConstParam$/;"	s
optSch	OPTIMIZE/opt_definition.h	/^struct optSch$/;"	s
optSch	OPTIMIZE/tools/opt_definition.h	/^struct optSch$/;"	s
optSchIndex	OPTIMIZE/optimize/rawoptimize/empty_steep_dwn_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/empty_steep_up_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/last_dwn_next_dwn_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/next_steep_dwn_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/next_steep_up_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/rawOptimize.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/steep_dwn_more_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/steep_dwn_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/steep_up_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/optimize/rawoptimize/sup_steep_dwn_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/empty_steep_dwn_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/empty_steep_up_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/last_dwn_next_dwn_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/next_steep_dwn_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/next_steep_up_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/rawOptimize.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/steep_dwn_more_gentle_hill_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/steep_dwn_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/steep_up_strgy.c	/^int optSchIndex;$/;"	v
optSchIndex	OPTIMIZE/tools/optimize/rawoptimize/sup_steep_dwn_strgy.c	/^int optSchIndex;$/;"	v
opt_const	OPTIMIZE/datacontrol/extractData.c	/^OPTCONSTPARAM opt_const;$/;"	v
opt_const	OPTIMIZE/tools/datacontrol/extractData.c	/^OPTCONSTPARAM opt_const;$/;"	v
opt_extr_code	OPTIMIZE/exception/exception.h	/^typedef enum opt_extr_code$/;"	g
opt_extr_code	OPTIMIZE/tools/exception/exception.h	/^typedef enum opt_extr_code$/;"	g
opt_extr_result	OPTIMIZE/exception/exception.h	/^typedef struct opt_extr_result$/;"	s
opt_extr_result	OPTIMIZE/tools/exception/exception.h	/^typedef struct opt_extr_result$/;"	s
opt_final_curves	OPTIMIZE/optimize/optimize.c	/^OPTSCHCURVE* opt_final_curves;$/;"	v
opt_final_curves	OPTIMIZE/tools/optimize/optimize.c	/^OPTSCHCURVE* opt_final_curves;$/;"	v
opt_flag	OPTIMIZE/opt_definition.h	/^enum opt_flag$/;"	g
opt_flag	OPTIMIZE/tools/opt_definition.h	/^enum opt_flag$/;"	g
opt_index	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	int opt_index;$/;"	m	struct:air_brake_change
opt_index	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	int opt_index;$/;"	m	struct:air_brake_change
opt_init	opt_init.c	/^int opt_init()$/;"	f
opt_log_error	log.h	52;"	d
opt_log_error	log.h	66;"	d
opt_log_error	log.h	80;"	d
opt_log_info	log.h	54;"	d
opt_log_info	log.h	68;"	d
opt_log_info	log.h	82;"	d
opt_log_notice	log.h	55;"	d
opt_log_notice	log.h	69;"	d
opt_log_notice	log.h	83;"	d
opt_log_warning	log.h	53;"	d
opt_log_warning	log.h	67;"	d
opt_log_warning	log.h	81;"	d
opt_reslt	OPTIMIZE/drivecontrol/rt_definition.h	/^	OPTSCHCURVE opt_reslt;$/;"	m	struct:rt_output
opt_reslt	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	OPTSCHCURVE opt_reslt;$/;"	m	struct:rt_output
opt_rest	OPTIMIZE/exception/exception.h	/^	 OPTIMIZE_CODE  opt_rest;\/\/!<优化异常处理代码$/;"	m	struct:optimize_result
opt_rest	OPTIMIZE/tools/exception/exception.h	/^	 OPTIMIZE_CODE  opt_rest;\/\/!<优化异常处理代码$/;"	m	struct:optimize_result
opt_sch_curve	OPTIMIZE/opt_definition.h	/^struct opt_sch_curve$/;"	s
opt_sch_curve	OPTIMIZE/tools/opt_definition.h	/^struct opt_sch_curve$/;"	s
optimize	OPTIMIZE/optimize/optimize.c	/^OPTSCHCURVE* optimize(int routeNum) {$/;"	f
optimize	OPTIMIZE/tools/optimize/optimize.c	/^OPTSCHCURVE* optimize(int routeNum) {$/;"	f
optimizeResult	OPTIMIZE/opt_definition.h	/^struct optimizeResult$/;"	s
optimizeResult	OPTIMIZE/optimize/common/optimizeTools.c	/^OPTIMIZERESULT* optimizeResult;$/;"	v
optimizeResult	OPTIMIZE/tools/opt_definition.h	/^struct optimizeResult$/;"	s
optimizeResult	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^OPTIMIZERESULT* optimizeResult;$/;"	v
optimize_code	OPTIMIZE/exception/exception.h	/^typedef enum optimize_code$/;"	g
optimize_code	OPTIMIZE/tools/exception/exception.h	/^typedef enum optimize_code$/;"	g
optimize_exception_decorator	OPTIMIZE/exception/exception.c	/^void  optimize_exception_decorator(int code,OPTIMIZE_RESULT* ret, char desc[])$/;"	f
optimize_exception_decorator	OPTIMIZE/tools/exception/exception.c	/^void  optimize_exception_decorator(int code,OPTIMIZE_RESULT* ret, char desc[])$/;"	f
optimize_result	OPTIMIZE/exception/exception.h	/^typedef struct optimize_result$/;"	s
optimize_result	OPTIMIZE/tools/exception/exception.h	/^typedef struct optimize_result$/;"	s
os_info	OPTIMIZE/drivecontrol/rt_definition.h	/^	RT_OS_INFO os_info;$/;"	m	struct:rt_output
os_info	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	RT_OS_INFO os_info;$/;"	m	struct:rt_output
out_dist	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t out_dist;          \/* 出岔距离 *\/$/;"	m	struct:sidetrack_t
out_dist	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t out_dist;          \/* 出岔距离 *\/$/;"	m	struct:sidetrack_t
out_dist	route_data.h	/^    uint16_t out_dist;          \/* 出岔距离 *\/$/;"	m	struct:sidetrack_t
out_limit_code	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t out_limit_code;    \/* 出岔限速代号 *\/$/;"	m	struct:sidetrack_t
out_limit_code	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t out_limit_code;    \/* 出岔限速代号 *\/$/;"	m	struct:sidetrack_t
out_limit_code	route_data.h	/^    uint16_t out_limit_code;    \/* 出岔限速代号 *\/$/;"	m	struct:sidetrack_t
over_speed_info	OPTIMIZE/drivecontrol/rt_definition.h	/^struct over_speed_info$/;"	s
over_speed_info	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct over_speed_info$/;"	s
overspeed_flag	OPTIMIZE/drivecontrol/rt_definition.h	/^	int overspeed_flag;$/;"	m	struct:over_speed_info
overspeed_flag	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int overspeed_flag;$/;"	m	struct:over_speed_info
parameter	message_queue/event.h	/^    uint8_t parameter;  \/*参数，可不填*\/$/;"	m	struct:event_t
parent	conf_manage/xmlopt/mxml.h	/^  struct mxml_node_s	*parent;	\/* Parent node *\/$/;"	m	struct:mxml_node_s	typeref:struct:mxml_node_s::mxml_node_s
partGradFlag	conf_manage/xml_extract.h	/^   int partGradFlag; \/**< 是否有局部非坡段类型的坡度*\/$/;"	m	struct:strategyFlags
partGradNum	OPTIMIZE/opt_definition.h	/^	int partGradNum; \/**<段中存在非该坡段类型的局部小坡段的个数*\/$/;"	m	struct:roadCategory
partGradNum	OPTIMIZE/tools/opt_definition.h	/^	int partGradNum; \/**<段中存在非该坡段类型的局部小坡段的个数*\/$/;"	m	struct:roadCategory
partGradient	OPTIMIZE/opt_definition.h	/^struct partGradient$/;"	s
partGradient	OPTIMIZE/tools/opt_definition.h	/^struct partGradient$/;"	s
partGradients	OPTIMIZE/opt_definition.h	/^	PARTGRADIENT*  partGradients; \/**< 段中存在非该坡段类型的局部小坡段*\/$/;"	m	struct:roadCategory
partGradients	OPTIMIZE/tools/opt_definition.h	/^	PARTGRADIENT*  partGradients; \/**< 段中存在非该坡段类型的局部小坡段*\/$/;"	m	struct:roadCategory
part_num	conf_manage/xml_extract.h	/^	int part_num;\/\/"pusherEngine"中的“part num”的个数$/;"	m	struct:ROUTEINFO
partition	OPTIMIZE/tools/tools.c	/^int partition(int src[],int i,int j)$/;"	f
partitionByCat	OPTIMIZE/optimize/preprocess/roadCategory.c	/^int partitionByCat(CATPOINT* src,int i,int j)$/;"	f
partitionByCat	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^int partitionByCat(CATPOINT* src,int i,int j)$/;"	f
pool	to_init.c	/^threadpool_t *pool;                 \/\/定义全局线程池$/;"	v
port	app_socket/app_socket.c	/^    uint16_t    port;$/;"	m	struct:board_addr_t	file:
post	OPTIMIZE/opt_definition.h	/^	int post; \/**< 公里标*\/$/;"	m	struct:teleseme
post	OPTIMIZE/tools/opt_definition.h	/^	int post; \/**< 公里标*\/$/;"	m	struct:teleseme
post_process	OPTIMIZE/optimize/optimize.c	/^OPTIMIZE_RESULT  post_process(OPTSCH* optSch,OPTSCHCURVE* final_curves,int len)$/;"	f
post_process	OPTIMIZE/tools/optimize/optimize.c	/^OPTIMIZE_RESULT  post_process(OPTSCH* optSch,OPTSCHCURVE* final_curves,int len)$/;"	f
pre	message_queue/message_queue.h	/^    struct message_node *pre;$/;"	m	struct:message_node	typeref:struct:message_node::message_node
pre_exception_decorator	OPTIMIZE/exception/exception.c	/^void  pre_exception_decorator(int  code,PRE_PROCESS_RESULT* ret, char desc[])$/;"	f
pre_exception_decorator	OPTIMIZE/tools/exception/exception.c	/^void  pre_exception_decorator(int  code,PRE_PROCESS_RESULT* ret, char desc[])$/;"	f
pre_process_code	OPTIMIZE/exception/exception.h	/^typedef enum pre_process_code$/;"	g
pre_process_code	OPTIMIZE/tools/exception/exception.h	/^typedef enum pre_process_code$/;"	g
pre_process_result	OPTIMIZE/exception/exception.h	/^typedef struct pre_process_result$/;"	s
pre_process_result	OPTIMIZE/tools/exception/exception.h	/^typedef struct pre_process_result$/;"	s
pre_result_adapter	OPTIMIZE/exception/exception.c	/^OPTIMIZE_RESULT  pre_result_adapter(PRE_PROCESS_RESULT result)$/;"	f
pre_result_adapter	OPTIMIZE/tools/exception/exception.c	/^OPTIMIZE_RESULT  pre_result_adapter(PRE_PROCESS_RESULT result)$/;"	f
preprocess	OPTIMIZE/optimize/preprocess/preprocess.c	/^OPTIMIZE_RESULT  preprocess(int startPost,int endPost) {$/;"	f
preprocess	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^OPTIMIZE_RESULT  preprocess(int startPost,int endPost) {$/;"	f
preprocess_result	OPTIMIZE/exception/exception.h	/^	 PRE_PROCESS_CODE  preprocess_result;\/\/!<预处理异常代码$/;"	m	struct:pre_process_result
preprocess_result	OPTIMIZE/tools/exception/exception.h	/^	 PRE_PROCESS_CODE  preprocess_result;\/\/!<预处理异常代码$/;"	m	struct:pre_process_result
prev	conf_manage/xmlopt/mxml.h	/^  struct mxml_node_s	*prev;		\/* Previous node under same parent *\/$/;"	m	struct:mxml_node_s	typeref:struct:mxml_node_s::mxml_node_s
priority	message_queue/event.h	/^    uint8_t priority;$/;"	m	struct:event_t
priority	message_queue/message_queue.h	/^    uint8_t priority;$/;"	m	struct:message_queue
protocal_result	app_socket/protocal.h	/^typedef enum protocal_result$/;"	g
ptr	conf_manage/xml_extract.h	/^	struct EXTRACT_FR_STT *ptr;\/\/ptr为指向存放roadStationTime.xml信息的结构体的指针$/;"	m	struct:rt_extrRoadStationTime	typeref:struct:rt_extrRoadStationTime::EXTRACT_FR_STT
ptr_size	conf_manage/xml_extract.h	/^	int ptr_size;\/\/用于存放roadStationTime.xml中的条目数，每组(车站号+TMIS号+交路号)为一个条目$/;"	m	struct:rt_extrRoadStationTime
pusherEngine	OPTIMIZE/opt_definition.h	/^struct pusherEngine$/;"	s
pusherEngine	OPTIMIZE/tools/opt_definition.h	/^struct pusherEngine$/;"	s
pusherEngines	OPTIMIZE/datacontrol/extractData.c	/^PUSHERENGINE pusherEngines;$/;"	v
pusherEngines	OPTIMIZE/tools/datacontrol/extractData.c	/^PUSHERENGINE pusherEngines;$/;"	v
put_event_mutex	message_queue/schedule.c	/^static struct event_mutex_t put_event_mutex = {NULL, PTHREAD_MUTEX_INITIALIZER};  \/\/提交事件锁$/;"	v	typeref:struct:event_mutex_t	file:
q_front	message_queue/message_queue.h	/^    MESSAGE_NODE *q_front;  $/;"	m	struct:message_queue
q_rear	message_queue/message_queue.h	/^    MESSAGE_NODE *q_rear;$/;"	m	struct:message_queue
queue	threadpool/threadpool.c	/^  threadpool_task_t *queue;$/;"	m	struct:threadpool_t	file:
queue_clear_all	message_queue/message_queue.c	/^QUEUE_MANAGE_RESULT queue_clear_all(struct multilevel_queue_t *multi_queue)$/;"	f
queue_create	message_queue/message_queue.c	/^struct multilevel_queue_t *queue_create(uint8_t number)$/;"	f
queue_destroy	message_queue/message_queue.c	/^QUEUE_MANAGE_RESULT queue_destroy(struct multilevel_queue_t *multi_queue)$/;"	f
queue_lock	message_queue/message_queue.c	/^static int queue_lock()$/;"	f	file:
queue_manage_result	message_queue/message_queue.h	/^typedef enum queue_manage_result$/;"	g
queue_mutex	message_queue/message_queue.c	/^static pthread_mutex_t queue_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
queue_size	threadpool/threadpool.c	/^  int queue_size;$/;"	m	struct:threadpool_t	file:
queue_unlock	message_queue/message_queue.c	/^static int queue_unlock()$/;"	f	file:
queues	message_queue/message_queue.h	/^    MESSAGE_QUEUE *queues;  \/* 队列数组，按优先级从高到低排列 *\/$/;"	m	struct:multilevel_queue_t
queues	to_init.c	/^struct multilevel_queue_t *queues;  \/\/定义全局消息队列$/;"	v	typeref:struct:multilevel_queue_t
quickSort	OPTIMIZE/tools/tools.c	/^void quickSort(int src[],int i,int j)$/;"	f
quickSortByCat	OPTIMIZE/optimize/preprocess/roadCategory.c	/^void quickSortByCat(CATPOINT* src,int i,int j)$/;"	f
quickSortByCat	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^void quickSortByCat(CATPOINT* src,int i,int j)$/;"	f
radius	OPTIMIZE/opt_definition.h	/^	int radius; \/**< 曲率半径*\/$/;"	m	struct:curve
radius	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int radius; \/**< 曲线半径*\/$/;"	m	struct:curveTemp	file:
radius	OPTIMIZE/tools/opt_definition.h	/^	int radius; \/**< 曲率半径*\/$/;"	m	struct:curve
radius	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int radius; \/**< 曲线半径*\/$/;"	m	struct:curveTemp	file:
rawOptimize	OPTIMIZE/optimize/rawoptimize/rawOptimize.c	/^OPTSCH* rawOptimize(int massType,int startPost, int endPost,float vStart,float vEnd,OPTIMIZE_RESULT *ret) {$/;"	f
rawOptimize	OPTIMIZE/tools/optimize/rawoptimize/rawOptimize.c	/^OPTSCH* rawOptimize(int massType,int startPost, int endPost,float vStart,float vEnd,OPTIMIZE_RESULT *ret) {$/;"	f
rawStrategy	OPTIMIZE/optimize/rawoptimize/rawStrategy.h	/^OPTSCH* (*rawStrategy)(float vo,float v_interval,int count,int roadIndex,int index,OPTSCH* optSch,float avgV,OPTIMIZE_RESULT* ret);$/;"	v
rawStrategy	OPTIMIZE/tools/optimize/rawoptimize/rawStrategy.h	/^OPTSCH* (*rawStrategy)(float vo,float v_interval,int count,int roadIndex,int index,OPTSCH* optSch,float avgV,OPTIMIZE_RESULT* ret);$/;"	v
rawStrategyExecute	OPTIMIZE/optimize/rawoptimize/rawOptimize.c	/^OPTSCH* rawStrategyExecute(float vo, float  v_interval, int count, int roadIndex,$/;"	f
rawStrategyExecute	OPTIMIZE/tools/optimize/rawoptimize/rawOptimize.c	/^OPTSCH* rawStrategyExecute(float vo, float  v_interval, int count, int roadIndex,$/;"	f
rawStrategyMatcher	OPTIMIZE/optimize/rawoptimize/rawOptimize.c	/^OPTIMIZE_RESULT rawStrategyMatcher(int roadIndex,float totalWeight,int length,float avgV, int partGradFlag,int downPect,int upPect) {$/;"	f
rawStrategyMatcher	OPTIMIZE/tools/optimize/rawoptimize/rawOptimize.c	/^OPTIMIZE_RESULT rawStrategyMatcher(int roadIndex,float totalWeight,int length,float avgV, int partGradFlag,int downPect,int upPect) {$/;"	f
rawStrategyMetrics	OPTIMIZE/datacontrol/extractData.c	/^RAWSTRFLAGS* rawStrategyMetrics;$/;"	v
rawStrategyMetrics	OPTIMIZE/tools/datacontrol/extractData.c	/^RAWSTRFLAGS* rawStrategyMetrics;$/;"	v
raw_opt_exception_decorator	OPTIMIZE/exception/exception.c	/^void  raw_opt_exception_decorator(int  code,RAW_OPTIMIZE_RESULT* ret, char desc[])$/;"	f
raw_opt_exception_decorator	OPTIMIZE/tools/exception/exception.c	/^void  raw_opt_exception_decorator(int  code,RAW_OPTIMIZE_RESULT* ret, char desc[])$/;"	f
raw_optimize_code	OPTIMIZE/exception/exception.h	/^typedef enum raw_optimize_code$/;"	g
raw_optimize_code	OPTIMIZE/tools/exception/exception.h	/^typedef enum raw_optimize_code$/;"	g
raw_optimize_result	OPTIMIZE/exception/exception.h	/^typedef struct raw_optimize_result$/;"	s
raw_optimize_result	OPTIMIZE/tools/exception/exception.h	/^typedef struct raw_optimize_result$/;"	s
raw_result_adapter	OPTIMIZE/exception/exception.c	/^OPTIMIZE_RESULT  raw_result_adapter(RAW_OPTIMIZE_RESULT  result)$/;"	f
raw_result_adapter	OPTIMIZE/tools/exception/exception.c	/^OPTIMIZE_RESULT  raw_result_adapter(RAW_OPTIMIZE_RESULT  result)$/;"	f
rawopt_result	OPTIMIZE/exception/exception.h	/^	RAW_OPTIMIZE_CODE  rawopt_result;\/\/!<原始优化异常处理代码$/;"	m	struct:raw_optimize_result
rawopt_result	OPTIMIZE/tools/exception/exception.h	/^	RAW_OPTIMIZE_CODE  rawopt_result;\/\/!<原始优化异常处理代码$/;"	m	struct:raw_optimize_result
rc	OPTIMIZE/datacontrol/extractData.c	/^ROADCATEGORY* rc;$/;"	v
rc	OPTIMIZE/optimize/common/optimizeTools.c	/^ROADCATEGORY* rc;$/;"	v
rc	OPTIMIZE/optimize/preprocess/roadCategory.c	/^ROADCATEGORY* rc;$/;"	v
rc	OPTIMIZE/tools/datacontrol/extractData.c	/^ROADCATEGORY* rc;$/;"	v
rc	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^ROADCATEGORY* rc;$/;"	v
rc	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^ROADCATEGORY* rc;$/;"	v
rc_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t rc_num;                \/* 交路转移编号，自定义 *\/$/;"	m	struct:route_change_t
rc_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t rc_num;                \/* 交路转移编号，自定义 *\/$/;"	m	struct:route_change_t
rc_num	route_data.h	/^    uint32_t rc_num;                \/* 交路转移编号，自定义 *\/$/;"	m	struct:route_change_t
reRoadCategory	OPTIMIZE/optimize/preprocess/roadCategory.c	/^ROADCATEGORY* reRoadCategory(CATEGORY* cat,int len_cat,ROADCATEGORY* rcTmp,int* rc_tmp_len,PRE_PROCESS_RESULT* pre_ret)$/;"	f
reRoadCategory	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^ROADCATEGORY* reRoadCategory(CATEGORY* cat,int len_cat,ROADCATEGORY* rcTmp,int* rc_tmp_len,PRE_PROCESS_RESULT* pre_ret)$/;"	f
read_binary_file	OPTIMIZE/datacontrol/read_binary_for_route.c	/^void *read_binary_file(int type, int *length)$/;"	f
read_binary_file	OPTIMIZE/tools/datacontrol/read_binary_for_route.c	/^void *read_binary_file(int type, int *length)$/;"	f
real	conf_manage/xmlopt/mxml.h	/^  double		real;		\/* Real number *\/$/;"	m	union:mxml_value_u
real_distance	OPTIMIZE/opt_definition.h	/^	float real_distance;$/;"	m	struct:airBrakeResult
real_distance	OPTIMIZE/tools/opt_definition.h	/^	float real_distance;$/;"	m	struct:airBrakeResult
realtime_data_rcv_handle	frame_rcv_handle.c	/^static void realtime_data_rcv_handle(char *data, int length) {$/;"	f	file:
ref_count	conf_manage/xmlopt/mxml.h	/^  int			ref_count;	\/* Use count *\/$/;"	m	struct:mxml_node_s
rightRType	conf_manage/xml_extract.h	/^   int rightRType;\/**<后(右)坡度类型*\/$/;"	m	struct:timeStrategyFlags
roadCategory	OPTIMIZE/opt_definition.h	/^struct roadCategory$/;"	s
roadCategory	OPTIMIZE/tools/opt_definition.h	/^struct roadCategory$/;"	s
roundInt	OPTIMIZE/tools/tools.c	/^int roundInt(float v)$/;"	f
route_change	OPTIMIZE/datacontrol/read_binary_for_route.h	/^   struct route_change_t    *route_change;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::route_change_t
route_change	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^   struct route_change_t    *route_change;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::route_change_t
route_change	route_data.h	/^   struct route_change_t    *route_change;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::route_change_t
route_change_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct route_change_t$/;"	s
route_change_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct route_change_t$/;"	s
route_change_t	route_data.h	/^struct route_change_t$/;"	s
route_data_rcv_handle	frame_rcv_handle.c	/^static inline void route_data_rcv_handle(char *data, uint16_t length, char type, int amount, int count)$/;"	f	file:
route_id_t	route_data.h	/^struct route_id_t$/;"	s
route_index	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	int route_index;$/;"	m	struct:route_par
route_index	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	int route_index;$/;"	m	struct:route_par
route_init	route_init.c	/^void route_init(void *arg)$/;"	f
route_list	OPTIMIZE/datacontrol/read_binary_for_route.h	/^typedef struct route_list$/;"	s
route_list	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^typedef struct route_list$/;"	s
route_list	route_data.h	/^typedef struct route_list$/;"	s
route_node	OPTIMIZE/datacontrol/read_binary_for_route.h	/^typedef struct route_node$/;"	s
route_node	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^typedef struct route_node$/;"	s
route_node	route_data.h	/^typedef struct route_node$/;"	s
route_num	conf_manage/xml_extract.h	/^	int route_num;$/;"	m	struct:EXTRACT_FR_STT
route_par	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^struct route_par$/;"	s
route_par	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^struct route_par$/;"	s
routine	message_queue/event.h	/^    void *routine;$/;"	m	struct:event_t
rt_arr_flag	auto_control.c	/^RT_ARR_FLAG rt_arr_flag = {PTHREAD_MUTEX_INITIALIZER, PTHREAD_COND_INITIALIZER, 0};$/;"	v
rt_check_temp_flag	OPTIMIZE/drivecontrol/rt_definition.h	/^	int rt_check_temp_flag;$/;"	m	struct:rt_flag
rt_check_temp_flag	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int rt_check_temp_flag;$/;"	m	struct:rt_flag
rt_con_end_post	OPTIMIZE/drivecontrol/rt_definition.h	/^	int rt_con_end_post;$/;"	m	struct:rt_input
rt_con_end_post	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int rt_con_end_post;$/;"	m	struct:rt_input
rt_con_start_post	OPTIMIZE/drivecontrol/rt_definition.h	/^	int rt_con_start_post;$/;"	m	struct:rt_input
rt_con_start_post	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int rt_con_start_post;$/;"	m	struct:rt_input
rt_con_tel_kp	OPTIMIZE/drivecontrol/rt_definition.h	/^	float rt_con_tel_kp;$/;"	m	struct:rt_input
rt_con_tel_kp	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	float rt_con_tel_kp;$/;"	m	struct:rt_input
rt_cond	realtime_data.h	/^    pthread_cond_t rt_cond;$/;"	m	struct:__anon1
rt_controller	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_controller.c	/^RT_RESULT rt_controller(OPTSCHCURVE current_opt_result, RT_INPUT rt_in, RT_FLAG* rt_flag_p, int *gear_p)$/;"	f
rt_controller	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_controller.c	/^RT_RESULT rt_controller(OPTSCHCURVE current_opt_result, RT_INPUT rt_in, RT_FLAG* rt_flag_p, int *gear_p)$/;"	f
rt_ctr_flag	OPTIMIZE/drivecontrol/rt_definition.h	/^	int rt_ctr_flag;$/;"	m	struct:rt_flag
rt_ctr_flag	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int rt_ctr_flag;$/;"	m	struct:rt_flag
rt_data	auto_control.c	/^RT_DATA rt_data;$/;"	v
rt_extrRoadStationTime	conf_manage/xml_extract.h	/^struct rt_extrRoadStationTime{$/;"	s
rt_flag	OPTIMIZE/drivecontrol/rt_definition.h	/^struct rt_flag$/;"	s
rt_flag	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct rt_flag$/;"	s
rt_flag	realtime_data.h	/^    uint8_t rt_flag;   $/;"	m	struct:__anon1
rt_global_index	OPTIMIZE/drivecontrol/rt_definition.h	/^	int rt_global_index;$/;"	m	struct:rt_index
rt_global_index	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int rt_global_index;$/;"	m	struct:rt_index
rt_global_locate	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_global_locate(float rt_con_tel_kp, int *rt_global_index_p)$/;"	f
rt_global_locate	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_global_locate(float rt_con_tel_kp, int *rt_global_index_p)$/;"	f
rt_gradeability_est	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_gradeability_est(RT_GA_INFO* ga_info)$/;"	f
rt_gradeability_est	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_gradeability_est(RT_GA_INFO* ga_info)$/;"	f
rt_index	OPTIMIZE/drivecontrol/rt_definition.h	/^struct rt_index$/;"	s
rt_index	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct rt_index$/;"	s
rt_inout	OPTIMIZE/drivecontrol/rt_definition.h	/^struct rt_inout$/;"	s
rt_inout	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct rt_inout$/;"	s
rt_input	OPTIMIZE/drivecontrol/rt_definition.h	/^struct rt_input$/;"	s
rt_input	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct rt_input$/;"	s
rt_locate	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_locate(RT_INPUT rt_in, RT_INOUT* rt_inout_p, RT_FLAG* rt_flag_p, RT_INDEX* rt_index_p, OPTSCHCURVE* current_opt_result_p)$/;"	f
rt_locate	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_locate(RT_INPUT rt_in, RT_INOUT* rt_inout_p, RT_FLAG* rt_flag_p, RT_INDEX* rt_index_p, OPTSCHCURVE* current_opt_result_p)$/;"	f
rt_main	OPTIMIZE/drivecontrol/rt_main.c	/^void rt_main()$/;"	f
rt_main	OPTIMIZE/tools/drivecontrol/rt_main.c	/^void rt_main()$/;"	f
rt_mutex	realtime_data.h	/^    pthread_mutex_t rt_mutex;$/;"	m	struct:__anon1
rt_opt_flag	OPTIMIZE/drivecontrol/rt_definition.h	/^	int rt_opt_flag;$/;"	m	struct:rt_flag
rt_opt_flag	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int rt_opt_flag;$/;"	m	struct:rt_flag
rt_output	OPTIMIZE/drivecontrol/rt_definition.h	/^struct rt_output$/;"	s
rt_output	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^struct rt_output$/;"	s
rt_over_speed_est	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_over_speed_est(RT_OS_INFO* os_info)$/;"	f
rt_over_speed_est	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_over_speed_est(RT_OS_INFO* os_info)$/;"	f
rt_process	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_process(RT_INPUT rt_in, RT_INOUT* rt_inout_p, RT_FLAG* rt_flag_p, RT_INDEX* rt_index_p, RT_OUTPUT* rt_out_p)$/;"	f
rt_process	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_process(RT_INPUT rt_in, RT_INOUT* rt_inout_p, RT_FLAG* rt_flag_p, RT_INDEX* rt_index_p, RT_OUTPUT* rt_out_p)$/;"	f
rt_process_result	OPTIMIZE/drivecontrol/rt_definition.h	/^typedef enum rt_process_result$/;"	g
rt_process_result	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^typedef enum rt_process_result$/;"	g
rt_temp_end	OPTIMIZE/drivecontrol/rt_definition.h	/^	float rt_temp_end;$/;"	m	struct:rt_inout
rt_temp_end	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	float rt_temp_end;$/;"	m	struct:rt_inout
rt_temp_index	OPTIMIZE/drivecontrol/rt_definition.h	/^	int rt_temp_index;$/;"	m	struct:rt_index
rt_temp_index	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int rt_temp_index;$/;"	m	struct:rt_index
rt_temp_locate	OPTIMIZE/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_temp_locate(float rt_con_tel_kp, RT_INDEX* rt_index_p, LL_NODE* p_node)$/;"	f
rt_temp_locate	OPTIMIZE/tools/drivecontrol/rt_process_n_controller/rt_process.c	/^RT_RESULT rt_temp_locate(float rt_con_tel_kp, RT_INDEX* rt_index_p, LL_NODE* p_node)$/;"	f
rt_temp_start	OPTIMIZE/drivecontrol/rt_definition.h	/^	float rt_temp_start;$/;"	m	struct:rt_inout
rt_temp_start	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	float rt_temp_start;$/;"	m	struct:rt_inout
rt_velocity	OPTIMIZE/drivecontrol/rt_definition.h	/^	float rt_velocity;$/;"	m	struct:rt_input
rt_velocity	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	float rt_velocity;$/;"	m	struct:rt_input
runTime	OPTIMIZE/opt_definition.h	/^   float runTime; \/**< 该段路程的标准时间*\/$/;"	m	struct:intervalRunTimeUnit
runTime	OPTIMIZE/tools/opt_definition.h	/^   float runTime; \/**< 该段路程的标准时间*\/$/;"	m	struct:intervalRunTimeUnit
running_train	OPTIMIZE/drivecontrol/train_model_4_testing/runningTrain.c	/^RT_RESULT running_train(RT_OUTPUT rt_out, int *route_index_p, RT_INPUT* rt_in_p, DRIVING_RECORD* driving_record_p)$/;"	f
running_train	OPTIMIZE/tools/drivecontrol/train_model_4_testing/runningTrain.c	/^RT_RESULT running_train(RT_OUTPUT rt_out, int *route_index_p, RT_INPUT* rt_in_p, DRIVING_RECORD* driving_record_p)$/;"	f
rvrs_cal_til_inctersect	OPTIMIZE/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT rvrs_cal_til_inctersect(int gear, int *localIndex, int*localCount, int* backLength, int* flag,int roadIndex, OPTSCH** optSch,OPTSCH** backOpt)$/;"	f
rvrs_cal_til_inctersect	OPTIMIZE/tools/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT rvrs_cal_til_inctersect(int gear, int *localIndex, int*localCount, int* backLength, int* flag,int roadIndex, OPTSCH** optSch,OPTSCH** backOpt)$/;"	f
s_dr_num	route_data.h	/^    uint8_t     s_dr_num;       \/**<data routing number*\/$/;"	m	struct:route_id_t
s_mr_num	route_data.h	/^    uint8_t     s_mr_num;       \/**<monitor routing number*\/$/;"	m	struct:route_id_t
s_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t s_num;                 \/* station number *\/$/;"	m	struct:station_t
s_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t s_num;                 \/* station number *\/$/;"	m	struct:station_t
s_num	route_data.h	/^    uint16_t s_num;                 \/* station number *\/$/;"	m	struct:station_t
s_up_or_down	route_data.h	/^    uint8_t     s_up_or_down;   \/**<1 : up; 0 : down*\/$/;"	m	struct:route_id_t
saveFinalResult	OPTIMIZE/optimize/common/optimizeTools.c	/^void saveFinalResult(OPTSCHCURVE* final_curve,int len) {$/;"	f
saveFinalResult	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^void saveFinalResult(OPTSCHCURVE* final_curve,int len) {$/;"	f
saveResult	OPTIMIZE/optimize/common/optimizeTools.c	/^void saveResult(OPTSCH* optSch,int len,char* fileName) {$/;"	f
saveResult	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^void saveResult(OPTSCH* optSch,int len,char* fileName) {$/;"	f
saveTmpFinalResult	OPTIMIZE/optimize/common/optimizeTools.c	/^void saveTmpFinalResult(OPTSCHCURVE* final_curve,int length) {$/;"	f
saveTmpFinalResult	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^void saveTmpFinalResult(OPTSCHCURVE* final_curve,int length) {$/;"	f
save_driving_records	OPTIMIZE/drivecontrol/rt_main.c	/^void save_driving_records(DRIVING_RECORD* driving_records, int record_index){$/;"	f
save_driving_records	OPTIMIZE/tools/drivecontrol/rt_main.c	/^void save_driving_records(DRIVING_RECORD* driving_records, int record_index){$/;"	f
saveoptSch	OPTIMIZE/optimize/rawoptimize/rawOptimize.c	/^void saveoptSch(OPTSCH* optSch){$/;"	f
saveoptSch	OPTIMIZE/tools/optimize/rawoptimize/rawOptimize.c	/^void saveoptSch(OPTSCH* optSch){$/;"	f
schedule	message_queue/schedule.c	/^void schedule(void *arg)$/;"	f
schedule_init	to_init.c	/^static inline void schedule_init(void)$/;"	f	file:
schedule_mutex	message_queue/schedule.c	/^static struct schedule_mutex_t schedule_mutex = {0, PTHREAD_MUTEX_INITIALIZER, PTHREAD_COND_INITIALIZER};$/;"	v	typeref:struct:schedule_mutex_t	file:
schedule_mutex_t	message_queue/schedule.c	/^struct schedule_mutex_t$/;"	s	file:
schedule_result	message_queue/schedule.h	/^typedef enum schedule_result$/;"	g
seg_ed_rvrs_cal	OPTIMIZE/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT  seg_ed_rvrs_cal(float startV,int gear, int rcIndex, int categoryStartIndex,int* localIndex, int* flag, int* localCount,OPTSCH** optSch, OPTSCH** backOpt, int* backLength)$/;"	f
seg_ed_rvrs_cal	OPTIMIZE/tools/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT  seg_ed_rvrs_cal(float startV,int gear, int rcIndex, int categoryStartIndex,int* localIndex, int* flag, int* localCount,OPTSCH** optSch, OPTSCH** backOpt, int* backLength)$/;"	f
seg_ed_rvrs_cal_til_mark	OPTIMIZE/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT  seg_ed_rvrs_cal_til_mark(float startV,int gear, int rcIndex, int* localIndex, int* localCount, int* flag, OPTSCH** optSch, OPTSCH** backOpt, int* backLength, float mark)$/;"	f
seg_ed_rvrs_cal_til_mark	OPTIMIZE/tools/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT  seg_ed_rvrs_cal_til_mark(float startV,int gear, int rcIndex, int* localIndex, int* localCount, int* flag, OPTSCH** optSch, OPTSCH** backOpt, int* backLength, float mark)$/;"	f
seg_ed_rvrs_cal_til_mark_or_inter	OPTIMIZE/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT  seg_ed_rvrs_cal_til_mark_or_inter(float startV,int gear, int rcIndex,int* localIndex, int* flag, int* localCount,OPTSCH** optSch, OPTSCH** backOpt, int* backLength,float mark)$/;"	f
seg_ed_rvrs_cal_til_mark_or_inter	OPTIMIZE/tools/optimize/rawoptimize/base/reverse_opt_imp.c	/^OPTIMIZE_RESULT  seg_ed_rvrs_cal_til_mark_or_inter(float startV,int gear, int rcIndex,int* localIndex, int* flag, int* localCount,OPTSCH** optSch, OPTSCH** backOpt, int* backLength,float mark)$/;"	f
set_board_addr	app_socket/app_socket.c	/^int set_board_addr(int board)$/;"	f
set_loc_socket_by_type	app_socket/app_socket.c	/^static int set_loc_socket_by_type(uint8_t type, int socket_fd)$/;"	f	file:
set_sys_status	to_status.c	/^void set_sys_status(SYSTEM_STATUS status)$/;"	f
shutdown	threadpool/threadpool.c	/^  int shutdown;$/;"	m	struct:threadpool_t	file:
sidetrack	OPTIMIZE/datacontrol/read_binary_for_route.h	/^   struct sidetrack_t       *sidetrack;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::sidetrack_t
sidetrack	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^   struct sidetrack_t       *sidetrack;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::sidetrack_t
sidetrack	route_data.h	/^   struct sidetrack_t       *sidetrack;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::sidetrack_t
sidetrack_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct sidetrack_t$/;"	s
sidetrack_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct sidetrack_t$/;"	s
sidetrack_t	route_data.h	/^struct sidetrack_t$/;"	s
sign_1	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  sign_1;$/;"	m	struct:branch_change_t
sign_1	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  sign_1;$/;"	m	struct:branch_change_t
sign_1	route_data.h	/^    uint8_t  sign_1;$/;"	m	struct:branch_change_t
sign_2	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  sign_2;$/;"	m	struct:branch_change_t
sign_2	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  sign_2;$/;"	m	struct:branch_change_t
sign_2	route_data.h	/^    uint8_t  sign_2;$/;"	m	struct:branch_change_t
singleR	conf_manage/xml_extract.h	/^   int singleR;\/**< 是否处理单独的段*\/$/;"	m	struct:timeStrategyFlags
snprintf	conf_manage/xmlopt/config.h	86;"	d
socket_comm_init	to_init.c	/^static inline void socket_comm_init(void)$/;"	f	file:
socket_connect	app_socket/app_socket.c	/^SOCKET_RESULT socket_connect(uint8_t type)$/;"	f
socket_err_handle	app_socket/app_socket.c	/^static void socket_err_handle(int err_code, void *arg)$/;"	f	file:
socket_fd	app_socket/app_socket.c	/^    int      socket_fd;$/;"	m	struct:socket_t	file:
socket_rcv	app_socket/app_socket.c	/^void socket_rcv(void *arg)$/;"	f
socket_register	app_socket/app_socket.c	/^static int socket_register(int socket_fd, uint8_t type)$/;"	f	file:
socket_result	app_socket/app_socket.h	/^typedef enum socket_result$/;"	g
socket_snd	app_socket/app_socket.c	/^SOCKET_RESULT socket_snd(uint8_t type, char *data, int length)$/;"	f
socket_t	app_socket/app_socket.c	/^struct socket_t$/;"	s	file:
socket_type	app_socket/app_socket.c	/^    uint8_t  socket_type;   $/;"	m	struct:socket_t	file:
source	message_queue/event.h	/^    EVENT_SOURCE source;$/;"	m	struct:event_t
sp_limit_code	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t sp_limit_code;     \/* speed limit code 限速代号 *\/$/;"	m	struct:tele_t
sp_limit_code	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t sp_limit_code;     \/* speed limit code 限速代号 *\/$/;"	m	struct:tele_t
sp_limit_code	route_data.h	/^    uint16_t sp_limit_code;     \/* speed limit code 限速代号 *\/$/;"	m	struct:tele_t
speed	realtime_data.h	/^	int16_t speed;\/\/时速$/;"	m	struct:_speed_and_location
speed_and_location	realtime_data.h	/^	SPEED_AND_LOCATION speed_and_location;$/;"	m	struct:_realtime_data
split	OPTIMIZE/tools/tools.c	/^void split(char *strTime, int *time, char ch)$/;"	f
ss_num	route_data.h	/^    uint16_t    ss_num;         \/**<start station number*\/$/;"	m	struct:route_id_t
st_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  st_num;            \/* 股道号 *\/$/;"	m	struct:sidetrack_t
st_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  st_num;            \/* 股道号 *\/$/;"	m	struct:sidetrack_t
st_num	route_data.h	/^    uint8_t  st_num;            \/* 股道号 *\/$/;"	m	struct:sidetrack_t
start	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	float start;  \/**<公里标*\/$/;"	m	struct:driving_record
start	OPTIMIZE/opt_definition.h	/^	float start;   \/**<公里标*\/$/;"	m	struct:optSch
start	OPTIMIZE/opt_definition.h	/^	float start;  \/**<公里标*\/$/;"	m	struct:optimizeResult
start	OPTIMIZE/opt_definition.h	/^	float start;$/;"	m	struct:geData
start	OPTIMIZE/opt_definition.h	/^	int start;   \/**<  起始公里标 *\/$/;"	m	struct:gradient
start	OPTIMIZE/opt_definition.h	/^	int start;  \/**< 起始公里标 *\/$/;"	m	struct:roadCategory
start	OPTIMIZE/opt_definition.h	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:limit
start	OPTIMIZE/opt_definition.h	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:mGradient
start	OPTIMIZE/opt_definition.h	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:tunnel
start	OPTIMIZE/opt_definition.h	/^	int start; \/**< 公里标*\/$/;"	m	struct:station
start	OPTIMIZE/opt_definition.h	/^	int start; \/**< 起始公里标 *\/$/;"	m	struct:partGradient
start	OPTIMIZE/opt_definition.h	/^	int start; \/**< 起始公里标*\/$/;"	m	struct:curve
start	OPTIMIZE/opt_definition.h	/^     float start;   \/**<起始公里标（连续的）*\/$/;"	m	struct:handArea
start	OPTIMIZE/optimize/limitadjust/limitAdjustStrategy.h	/^	float start;  \/**< 限速起始公里标*\/$/;"	m	struct:limitInfo
start	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:curveTemp	file:
start	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:gradientTemp	file:
start	OPTIMIZE/optimize/preprocess/preprocess.c	/^	int start; \/**< 起始公里标*\/$/;"	m	struct:tunnelTemp	file:
start	OPTIMIZE/optimize/preprocess/roadCategory.c	/^	int start;  \/**< 车站公里标*\/$/;"	m	struct:cz	file:
start	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	int start;  \/**< 段起始公里标 *\/$/;"	m	struct:Category
start	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	float start;  \/**<公里标*\/$/;"	m	struct:driving_record
start	OPTIMIZE/tools/opt_definition.h	/^	float start;   \/**<公里标*\/$/;"	m	struct:optSch
start	OPTIMIZE/tools/opt_definition.h	/^	float start;  \/**<公里标*\/$/;"	m	struct:optimizeResult
start	OPTIMIZE/tools/opt_definition.h	/^	float start;$/;"	m	struct:geData
start	OPTIMIZE/tools/opt_definition.h	/^	int start;   \/**<  起始公里标 *\/$/;"	m	struct:gradient
start	OPTIMIZE/tools/opt_definition.h	/^	int start;  \/**< 起始公里标 *\/$/;"	m	struct:roadCategory
start	OPTIMIZE/tools/opt_definition.h	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:limit
start	OPTIMIZE/tools/opt_definition.h	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:mGradient
start	OPTIMIZE/tools/opt_definition.h	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:tunnel
start	OPTIMIZE/tools/opt_definition.h	/^	int start; \/**< 公里标*\/$/;"	m	struct:station
start	OPTIMIZE/tools/opt_definition.h	/^	int start; \/**< 起始公里标 *\/$/;"	m	struct:partGradient
start	OPTIMIZE/tools/opt_definition.h	/^	int start; \/**< 起始公里标*\/$/;"	m	struct:curve
start	OPTIMIZE/tools/opt_definition.h	/^     float start;   \/**<起始公里标（连续的）*\/$/;"	m	struct:handArea
start	OPTIMIZE/tools/optimize/limitadjust/limitAdjustStrategy.h	/^	float start;  \/**< 限速起始公里标*\/$/;"	m	struct:limitInfo
start	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:curveTemp	file:
start	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int start;  \/**< 起始公里标*\/$/;"	m	struct:gradientTemp	file:
start	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	int start; \/**< 起始公里标*\/$/;"	m	struct:tunnelTemp	file:
start	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^	int start;  \/**< 车站公里标*\/$/;"	m	struct:cz	file:
start	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	int start;  \/**< 段起始公里标 *\/$/;"	m	struct:Category
startCzh	OPTIMIZE/opt_definition.h	/^   int startCzh;  \/**<   起始车站号*\/$/;"	m	struct:intervalRunTimeUnit
startCzh	OPTIMIZE/tools/opt_definition.h	/^   int startCzh;  \/**<   起始车站号*\/$/;"	m	struct:intervalRunTimeUnit
startIndex	OPTIMIZE/optimize/afterprocess/after_process.h	/^	  int startIndex; \/\/起始公里标$/;"	m	struct:gearSegInfo
startIndex	OPTIMIZE/tools/optimize/afterprocess/after_process.h	/^	  int startIndex; \/\/起始公里标$/;"	m	struct:gearSegInfo
startPosOffset	conf_manage/xml_extract.h	/^	int startPosOffset;$/;"	m	struct:IN_ROUTEINFO
startTelesemes	conf_manage/xml_extract.h	/^	int startTelesemes;$/;"	m	struct:IN_ROUTEINFO
startTime	OPTIMIZE/opt_definition.h	/^   char startTime[10]; \/**<  起始车站号时刻*\/$/;"	m	struct:intervalRunTimeUnit
startTime	OPTIMIZE/tools/opt_definition.h	/^   char startTime[10]; \/**<  起始车站号时刻*\/$/;"	m	struct:intervalRunTimeUnit
startV	OPTIMIZE/opt_definition.h	/^	 float startV; \/**<起始速度*\/$/;"	m	struct:initialData
startV	OPTIMIZE/tools/opt_definition.h	/^	 float startV; \/**<起始速度*\/$/;"	m	struct:initialData
start_dr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  start_dr_num;$/;"	m	struct:branch_change_t
start_dr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  start_dr_num;$/;"	m	struct:branch_change_t
start_dr_num	route_data.h	/^    uint8_t  start_dr_num;$/;"	m	struct:branch_change_t
start_mile	OPTIMIZE/opt_definition.h	/^	float start_mile;$/;"	m	struct:airBrakeResult
start_mile	OPTIMIZE/tools/opt_definition.h	/^	float start_mile;$/;"	m	struct:airBrakeResult
start_mr_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  start_mr_num;$/;"	m	struct:route_change_t
start_mr_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  start_mr_num;$/;"	m	struct:route_change_t
start_mr_num	route_data.h	/^    uint8_t  start_mr_num;$/;"	m	struct:route_change_t
start_velocity	OPTIMIZE/opt_definition.h	/^	float start_velocity;$/;"	m	struct:airBrakeResult
start_velocity	OPTIMIZE/tools/opt_definition.h	/^	float start_velocity;$/;"	m	struct:airBrakeResult
started	threadpool/threadpool.c	/^  int started;$/;"	m	struct:threadpool_t	file:
starttime	conf_manage/xml_extract.h	/^	char starttime[ARRAY_LEN];$/;"	m	struct:EXTRACT_FR_STT
station	OPTIMIZE/datacontrol/read_binary_for_route.h	/^   struct station_t         *station;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::station_t
station	OPTIMIZE/opt_definition.h	/^struct station \/\/车站$/;"	s
station	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^   struct station_t         *station;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::station_t
station	OPTIMIZE/tools/opt_definition.h	/^struct station \/\/车站$/;"	s
station	conf_manage/xml_extract.h	/^	int station;$/;"	m	struct:EXTRACT_FR_STT
station	route_data.h	/^   struct station_t         *station;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::station_t
station_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct station_t$/;"	s
station_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct station_t$/;"	s
station_t	route_data.h	/^struct station_t$/;"	s
stations	OPTIMIZE/datacontrol/extractData.c	/^STATION* stations;$/;"	v
stations	OPTIMIZE/tools/datacontrol/extractData.c	/^STATION* stations;$/;"	v
status	message_queue/event.h	/^    EVENT_STATUS status;$/;"	m	struct:event_t
status_mutex	to_status.c	/^static pthread_mutex_t status_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
steepDownPect	OPTIMIZE/opt_definition.h	/^   int steepDownPect; \/**< 车站间陡下坡所占的比例 *\/$/;"	m	struct:intervalRunTimeUnit
steepDownPect	OPTIMIZE/tools/opt_definition.h	/^   int steepDownPect; \/**< 车站间陡下坡所占的比例 *\/$/;"	m	struct:intervalRunTimeUnit
steepUpPect	OPTIMIZE/opt_definition.h	/^   int steepUpPect;  \/**< 车站间陡上坡所占的比例 *\/$/;"	m	struct:intervalRunTimeUnit
steepUpPect	OPTIMIZE/tools/opt_definition.h	/^   int steepUpPect;  \/**< 车站间陡上坡所占的比例 *\/$/;"	m	struct:intervalRunTimeUnit
steep_dwn_more_gentle_hill_strgy	OPTIMIZE/optimize/rawoptimize/steep_dwn_more_gentle_hill_strgy.c	/^OPTSCH* steep_dwn_more_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
steep_dwn_more_gentle_hill_strgy	OPTIMIZE/tools/optimize/rawoptimize/steep_dwn_more_gentle_hill_strgy.c	/^OPTSCH* steep_dwn_more_gentle_hill_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
steep_dwn_strgy	OPTIMIZE/optimize/rawoptimize/steep_dwn_strgy.c	/^OPTSCH* steep_dwn_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
steep_dwn_strgy	OPTIMIZE/tools/optimize/rawoptimize/steep_dwn_strgy.c	/^OPTSCH* steep_dwn_strgy(float vo, float v_interval, int count, int roadIndex,int index, OPTSCH* optSch, float avgV,OPTIMIZE_RESULT *ret) {$/;"	f
steep_up_strgy	OPTIMIZE/optimize/rawoptimize/steep_up_strgy.c	/^OPTSCH* steep_up_strgy(float vo, float v_interval, int count, int roadIndex,$/;"	f
steep_up_strgy	OPTIMIZE/tools/optimize/rawoptimize/steep_up_strgy.c	/^OPTSCH* steep_up_strgy(float vo, float v_interval, int count, int roadIndex,$/;"	f
strategyFlags	conf_manage/xml_extract.h	/^struct strategyFlags$/;"	s
strategyFlags_len	conf_manage/xml_extract.h	/^	int strategyFlags_len; \/\/strategyFlags_len - strategyFlags length, 结构体strategyFlags的元素个数$/;"	m	struct:EXTR_OPT_RTN
strategyFlags_p	conf_manage/xml_extract.h	/^	struct strategyFlags *strategyFlags_p; \/\/strategyFlags_p - strategyFlags pointer$/;"	m	struct:EXTR_OPT_RTN	typeref:struct:EXTR_OPT_RTN::strategyFlags
strdup	conf_manage/xmlopt/config.h	78;"	d
string	conf_manage/xmlopt/mxml.h	/^  char			*string;	\/* Fragment string *\/$/;"	m	struct:mxml_text_s
subregion_dis	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t subregion_dis;$/;"	m	struct:limit_t
subregion_dis	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t subregion_dis;$/;"	m	struct:limit_t
subregion_dis	route_data.h	/^    uint16_t subregion_dis;$/;"	m	struct:limit_t
sugGear	OPTIMIZE/opt_definition.h	/^	float sugGear; \/**< 推荐档位*\/$/;"	m	struct:roadCategory
sugGear	OPTIMIZE/tools/opt_definition.h	/^	float sugGear; \/**< 推荐档位*\/$/;"	m	struct:roadCategory
suggear	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	float suggear; \/**< 段推荐的档位*\/$/;"	m	struct:Category
suggear	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	float suggear; \/**< 段推荐的档位*\/$/;"	m	struct:Category
sup_steep_dwn_strgy	OPTIMIZE/optimize/rawoptimize/sup_steep_dwn_strgy.c	/^OPTSCH* sup_steep_dwn_strgy(float vo, float v_interval, int count, int roadIndex,$/;"	f
sup_steep_dwn_strgy	OPTIMIZE/tools/optimize/rawoptimize/sup_steep_dwn_strgy.c	/^OPTSCH* sup_steep_dwn_strgy(float vo, float v_interval, int count, int roadIndex,$/;"	f
swap	OPTIMIZE/tools/tools.c	/^void swap(int src[],int i,int j)$/;"	f
swapByCat	OPTIMIZE/optimize/preprocess/roadCategory.c	/^void swapByCat(CATPOINT* src,int i,int j)$/;"	f
swapByCat	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^void swapByCat(CATPOINT* src,int i,int j)$/;"	f
sys_status	to_status.c	/^static SYSTEM_STATUS sys_status = SYS_INIT;$/;"	v	file:
system_status	to_status.h	/^typedef enum system_status$/;"	g
t_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t t_num;             \/* 信号机编号 *\/$/;"	m	struct:tele_t
t_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t t_num;             \/* 信号机编号 *\/$/;"	m	struct:tele_t
t_num	route_data.h	/^    uint16_t t_num;             \/* 信号机编号 *\/$/;"	m	struct:tele_t
t_to_next_station	OPTIMIZE/drivecontrol/rt_definition.h	/^	float t_to_next_station;$/;"	m	struct:next_station_info
t_to_next_station	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	float t_to_next_station;$/;"	m	struct:next_station_info
t_trend	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  t_trend;           \/* 信号机趋势 *\/$/;"	m	struct:tele_t
t_trend	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  t_trend;           \/* 信号机趋势 *\/$/;"	m	struct:tele_t
t_trend	route_data.h	/^    uint8_t  t_trend;           \/* 信号机趋势 *\/$/;"	m	struct:tele_t
t_type	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  t_type;            \/* 信号机类型 *\/$/;"	m	struct:tele_t
t_type	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  t_type;            \/* 信号机类型 *\/$/;"	m	struct:tele_t
t_type	route_data.h	/^    uint8_t  t_type;            \/* 信号机类型 *\/$/;"	m	struct:tele_t
tail	threadpool/threadpool.c	/^  int tail;$/;"	m	struct:threadpool_t	file:
tel_kp	OPTIMIZE/opt_definition.h	/^	float tel_kp;\/**<信号机实际公里标*\/$/;"	m	struct:opt_sch_curve
tel_kp	OPTIMIZE/tools/opt_definition.h	/^	float tel_kp;\/**<信号机实际公里标*\/$/;"	m	struct:opt_sch_curve
tel_num	OPTIMIZE/opt_definition.h	/^	int tel_num;\/**<信号机编号*\/$/;"	m	struct:opt_sch_curve
tel_num	OPTIMIZE/opt_definition.h	/^	int tel_num;\/**<信号机编号*\/$/;"	m	struct:teleseme
tel_num	OPTIMIZE/tools/opt_definition.h	/^	int tel_num;\/**<信号机编号*\/$/;"	m	struct:opt_sch_curve
tel_num	OPTIMIZE/tools/opt_definition.h	/^	int tel_num;\/**<信号机编号*\/$/;"	m	struct:teleseme
tele	OPTIMIZE/datacontrol/read_binary_for_route.h	/^   struct tele_t            *tele;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::tele_t
tele	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^   struct tele_t            *tele;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::tele_t
tele	route_data.h	/^   struct tele_t            *tele;$/;"	m	struct:node_value_t	typeref:struct:node_value_t::tele_t
tele_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;  \/* 所属信号机编号 *\/$/;"	m	struct:gradient_t
tele_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:curve_t
tele_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:limit_t
tele_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:station_t
tele_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:tunnel_t
tele_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;  \/* 所属信号机编号 *\/$/;"	m	struct:gradient_t
tele_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:curve_t
tele_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:limit_t
tele_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:station_t
tele_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t tele_num;$/;"	m	struct:tunnel_t
tele_num	route_data.h	/^    uint16_t tele_num;              \/* 出站信号机编号 *\/$/;"	m	struct:station_t
tele_num	route_data.h	/^    uint16_t tele_num;  \/* 所属信号机编号 *\/$/;"	m	struct:gradient_t
tele_num	route_data.h	/^    uint16_t tele_num;$/;"	m	struct:curve_t
tele_num	route_data.h	/^    uint16_t tele_num;$/;"	m	struct:limit_t
tele_num	route_data.h	/^    uint16_t tele_num;$/;"	m	struct:tunnel_t
tele_start	OPTIMIZE/drivecontrol/rt_definition.h	/^	int tele_start;$/;"	m	struct:over_speed_info
tele_start	OPTIMIZE/tools/drivecontrol/rt_definition.h	/^	int tele_start;$/;"	m	struct:over_speed_info
tele_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct tele_t$/;"	s
tele_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct tele_t$/;"	s
tele_t	route_data.h	/^struct tele_t$/;"	s
teleseme	OPTIMIZE/opt_definition.h	/^struct teleseme$/;"	s
teleseme	OPTIMIZE/tools/opt_definition.h	/^struct teleseme$/;"	s
telesemes	OPTIMIZE/datacontrol/extractData.c	/^TELESEME* telesemes;$/;"	v
telesemes	OPTIMIZE/tools/datacontrol/extractData.c	/^TELESEME* telesemes;$/;"	v
tempLimitAdjust	OPTIMIZE/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  tempLimitAdjust(OPTSCH* optsch,int len, int limitStart,int limitEnd,int value,int *limitIndexS,int *limitIndexE)$/;"	f
tempLimitAdjust	OPTIMIZE/tools/optimize/limitadjust/limitAdjust.c	/^OPTIMIZE_RESULT  tempLimitAdjust(OPTSCH* optsch,int len, int limitStart,int limitEnd,int value,int *limitIndexS,int *limitIndexE)$/;"	f
tempLimitOpimize	OPTIMIZE/optimize/tempLimitOptimize.c	/^OPTSCHCURVE* tempLimitOpimize(int startPost, int endPost,int value,OPTSCH* optSch,int len,int* tmp_len){$/;"	f
tempLimitOpimize	OPTIMIZE/tools/optimize/tempLimitOptimize.c	/^OPTSCHCURVE* tempLimitOpimize(int startPost, int endPost,int value,OPTSCH* optSch,int len,int* tmp_len){$/;"	f
text	conf_manage/xmlopt/mxml.h	/^  mxml_text_t		text;		\/* Text fragment *\/$/;"	m	union:mxml_value_u
thread_count	threadpool/threadpool.c	/^  int thread_count;$/;"	m	struct:threadpool_t	file:
thread_pool_init	to_init.c	/^static inline void thread_pool_init(void)$/;"	f	file:
threadpool_add	threadpool/threadpool.c	/^int threadpool_add(threadpool_t *pool, void (*function)(void *),$/;"	f
threadpool_create	threadpool/threadpool.c	/^threadpool_t *threadpool_create(int thread_cnt, int queue_size, int flags)$/;"	f
threadpool_create_flags_t	threadpool/threadpool.h	/^} threadpool_create_flags_t;$/;"	t	typeref:enum:__anon6
threadpool_destroy	threadpool/threadpool.c	/^int threadpool_destroy(threadpool_t *pool, int flags)$/;"	f
threadpool_destroy_flags_t	threadpool/threadpool.h	/^} threadpool_destroy_flags_t;$/;"	t	typeref:enum:__anon5
threadpool_error_t	threadpool/threadpool.h	/^} threadpool_error_t;$/;"	t	typeref:enum:__anon4
threadpool_free	threadpool/threadpool.c	/^int threadpool_free(threadpool_t *pool)$/;"	f
threadpool_graceful	threadpool/threadpool.h	/^    threadpool_graceful       = 1$/;"	e	enum:__anon5
threadpool_invalid	threadpool/threadpool.h	/^    threadpool_invalid        = -1,$/;"	e	enum:__anon4
threadpool_lock_failure	threadpool/threadpool.h	/^    threadpool_lock_failure   = -2,$/;"	e	enum:__anon4
threadpool_queue_full	threadpool/threadpool.h	/^    threadpool_queue_full     = -3,$/;"	e	enum:__anon4
threadpool_shutdown	threadpool/threadpool.h	/^    threadpool_shutdown       = -4,$/;"	e	enum:__anon4
threadpool_shutdown_t	threadpool/threadpool.c	/^} threadpool_shutdown_t;$/;"	t	typeref:enum:__anon2	file:
threadpool_t	threadpool/threadpool.c	/^struct threadpool_t {$/;"	s	file:
threadpool_t	threadpool/threadpool.h	/^typedef struct threadpool_t threadpool_t;$/;"	t	typeref:struct:threadpool_t
threadpool_task_t	threadpool/threadpool.c	/^} threadpool_task_t;$/;"	t	typeref:struct:__anon3	file:
threadpool_thread	threadpool/threadpool.c	/^static void *threadpool_thread(void *threadpool)$/;"	f	file:
threadpool_thread_failure	threadpool/threadpool.h	/^    threadpool_thread_failure = -5$/;"	e	enum:__anon4
threads	threadpool/threadpool.c	/^  pthread_t *threads;$/;"	m	struct:threadpool_t	file:
throughExpert	OPTIMIZE/datacontrol/extractData.c	/^HANDAREA throughExpert;$/;"	v
throughExpert	OPTIMIZE/tools/datacontrol/extractData.c	/^HANDAREA throughExpert;$/;"	v
time	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	float time; \/**<时间*\/$/;"	m	struct:driving_record
time	OPTIMIZE/opt_definition.h	/^	 float time; \/**< 运行时间*\/$/;"	m	struct:initialData
time	OPTIMIZE/opt_definition.h	/^	float time;  \/**<时间 *\/$/;"	m	struct:optSch
time	OPTIMIZE/opt_definition.h	/^	float time; \/**<时间*\/$/;"	m	struct:optimizeResult
time	OPTIMIZE/opt_definition.h	/^	float time;\/**<行走的时间*\/$/;"	m	struct:opt_sch_curve
time	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	float time; \/**<时间*\/$/;"	m	struct:driving_record
time	OPTIMIZE/tools/opt_definition.h	/^	 float time; \/**< 运行时间*\/$/;"	m	struct:initialData
time	OPTIMIZE/tools/opt_definition.h	/^	float time;  \/**<时间 *\/$/;"	m	struct:optSch
time	OPTIMIZE/tools/opt_definition.h	/^	float time; \/**<时间*\/$/;"	m	struct:optimizeResult
time	OPTIMIZE/tools/opt_definition.h	/^	float time;\/**<行走的时间*\/$/;"	m	struct:opt_sch_curve
timeDiff	OPTIMIZE/opt_definition.h	/^   float timeDiff; \/**< 该段路程的附加时分*\/$/;"	m	struct:intervalRunTimeUnit
timeDiff	OPTIMIZE/tools/opt_definition.h	/^   float timeDiff; \/**< 该段路程的附加时分*\/$/;"	m	struct:intervalRunTimeUnit
timeLimit	OPTIMIZE/optimize/common/optimizeTools.c	/^float timeLimit;$/;"	v
timeLimit	OPTIMIZE/optimize/preprocess/preprocess.c	/^float timeLimit;$/;"	v
timeLimit	OPTIMIZE/tools/optimize/common/optimizeTools.c	/^float timeLimit;$/;"	v
timeLimit	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^float timeLimit;$/;"	v
timeStrategyFlags	conf_manage/xml_extract.h	/^struct timeStrategyFlags$/;"	s
timeStrategyFlags_len	conf_manage/xml_extract.h	/^	int timeStrategyFlags_len;$/;"	m	struct:EXTR_OPT_RTN
timeStrategyFlags_p	conf_manage/xml_extract.h	/^	struct timeStrategyFlags *timeStrategyFlags_p;$/;"	m	struct:EXTR_OPT_RTN	typeref:struct:EXTR_OPT_RTN::timeStrategyFlags
timeStrategyMetrics	OPTIMIZE/datacontrol/extractData.c	/^TIMESTRFLAGS* timeStrategyMetrics;$/;"	v
timeStrategyMetrics	OPTIMIZE/tools/datacontrol/extractData.c	/^TIMESTRFLAGS* timeStrategyMetrics;$/;"	v
tmis	conf_manage/xml_extract.h	/^	int tmis;$/;"	m	struct:EXTRACT_FR_STT
tmis_num	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint32_t tmis_num;              \/* tmis number *\/$/;"	m	struct:station_t
tmis_num	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint32_t tmis_num;              \/* tmis number *\/$/;"	m	struct:station_t
tmis_num	route_data.h	/^    uint32_t tmis_num;              \/* tmis number *\/$/;"	m	struct:station_t
tmp_after_process	OPTIMIZE/optimize/afterprocess/tmp_after_process.c	/^OPTSCH*  tmp_after_process(OPTSCH* optSch,int len,OPTSCH* new_final_curve,int* final_len,int *cap, OPTIMIZE_RESULT*final_ret,float tmpStart,float tmpEnd,float tmpValue)$/;"	f
tmp_after_process	OPTIMIZE/tools/optimize/afterprocess/tmp_after_process.c	/^OPTSCH*  tmp_after_process(OPTSCH* optSch,int len,OPTSCH* new_final_curve,int* final_len,int *cap, OPTIMIZE_RESULT*final_ret,float tmpStart,float tmpEnd,float tmpValue)$/;"	f
tmp_end_process	OPTIMIZE/optimize/afterprocess/tmp_after_process.c	/^OPTSCH* tmp_end_process(OPTSCH* new_tmp_curve ,int* tmp_final_len,int * cap,OPTSCH* optSch,int* inx,OPTIMIZE_RESULT* ret)$/;"	f
tmp_end_process	OPTIMIZE/tools/optimize/afterprocess/tmp_after_process.c	/^OPTSCH* tmp_end_process(OPTSCH* new_tmp_curve ,int* tmp_final_len,int * cap,OPTSCH* optSch,int* inx,OPTIMIZE_RESULT* ret)$/;"	f
tmp_post_process	OPTIMIZE/optimize/tempLimitOptimize.c	/^OPTIMIZE_RESULT  tmp_post_process(OPTSCHCURVE* opt_final_curves,int srcLen,OPTSCH* optSch,int len, OPTSCHCURVE* tmp_final_curves,int startIndex,int endIndex)$/;"	f
tmp_post_process	OPTIMIZE/tools/optimize/tempLimitOptimize.c	/^OPTIMIZE_RESULT  tmp_post_process(OPTSCHCURVE* opt_final_curves,int srcLen,OPTSCH* optSch,int len, OPTSCHCURVE* tmp_final_curves,int startIndex,int endIndex)$/;"	f
to_init	to_init.c	/^int to_init(void) {$/;"	f
to_log	log.h	28;"	d
to_log_init	log.h	19;"	d
totalAvgV	OPTIMIZE/optimize/preprocess/preprocess.c	/^float totalAvgV;$/;"	v
totalAvgV	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^float totalAvgV;$/;"	v
totalLength	OPTIMIZE/opt_definition.h	/^	float totalLength; \/**< 车总长度  include train head *\/$/;"	m	struct:locoParameter
totalLength	OPTIMIZE/tools/opt_definition.h	/^	float totalLength; \/**< 车总长度  include train head *\/$/;"	m	struct:locoParameter
totalRuntime	OPTIMIZE/opt_definition.h	/^   float totalRuntime; \/**< 该段路程的总运行时间(标准时间+附加时分) *\/$/;"	m	struct:intervalRunTimeUnit
totalRuntime	OPTIMIZE/tools/opt_definition.h	/^   float totalRuntime; \/**< 该段路程的总运行时间(标准时间+附加时分) *\/$/;"	m	struct:intervalRunTimeUnit
totalWeight	OPTIMIZE/opt_definition.h	/^	 float totalWeight; \/**< 车总重 *\/$/;"	m	struct:initialData
totalWeight	OPTIMIZE/opt_definition.h	/^	float totalWeight;\/**< 车总重量  include train head *\/$/;"	m	struct:locoParameter
totalWeight	OPTIMIZE/tools/opt_definition.h	/^	 float totalWeight; \/**< 车总重 *\/$/;"	m	struct:initialData
totalWeight	OPTIMIZE/tools/opt_definition.h	/^	float totalWeight;\/**< 车总重量  include train head *\/$/;"	m	struct:locoParameter
trac_cal_code	OPTIMIZE/exception/exception.h	/^typedef enum trac_cal_code$/;"	g
trac_cal_code	OPTIMIZE/tools/exception/exception.h	/^typedef enum trac_cal_code$/;"	g
trac_cal_result	OPTIMIZE/exception/exception.h	/^typedef struct trac_cal_result$/;"	s
trac_cal_result	OPTIMIZE/tools/exception/exception.h	/^typedef struct trac_cal_result$/;"	s
trac_exception_decorator	OPTIMIZE/exception/exception.c	/^void  trac_exception_decorator(int code,TRAC_CAL_RESULT* ret, char desc[])$/;"	f
trac_exception_decorator	OPTIMIZE/tools/exception/exception.c	/^void  trac_exception_decorator(int code,TRAC_CAL_RESULT* ret, char desc[])$/;"	f
trac_result	OPTIMIZE/exception/exception.h	/^     TRAC_CAL_CODE  trac_result; \/\/!<牵引计算异常代码$/;"	m	struct:trac_cal_result
trac_result	OPTIMIZE/tools/exception/exception.h	/^     TRAC_CAL_CODE  trac_result; \/\/!<牵引计算异常代码$/;"	m	struct:trac_cal_result
trac_result_adapter	OPTIMIZE/exception/exception.c	/^OPTIMIZE_RESULT  trac_result_adapter(TRAC_CAL_RESULT result)$/;"	f
trac_result_adapter	OPTIMIZE/tools/exception/exception.c	/^OPTIMIZE_RESULT  trac_result_adapter(TRAC_CAL_RESULT result)$/;"	f
tunnel	OPTIMIZE/opt_definition.h	/^struct tunnel \/\/隧道$/;"	s
tunnel	OPTIMIZE/tools/opt_definition.h	/^struct tunnel \/\/隧道$/;"	s
tunnelTemp	OPTIMIZE/optimize/preprocess/preprocess.c	/^struct tunnelTemp {$/;"	s	file:
tunnelTemp	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^struct tunnelTemp {$/;"	s	file:
tunnel_t	OPTIMIZE/datacontrol/read_binary_for_route.h	/^struct tunnel_t$/;"	s
tunnel_t	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^struct tunnel_t$/;"	s
tunnel_t	route_data.h	/^struct tunnel_t$/;"	s
tunnels	OPTIMIZE/datacontrol/extractData.c	/^TUNNEL* tunnels;$/;"	v
tunnels	OPTIMIZE/tools/datacontrol/extractData.c	/^TUNNEL* tunnels;$/;"	v
type	OPTIMIZE/datacontrol/read_binary_for_route.h	/^   uint8_t                  type;   \/*type 代表该节点具有的类型：0001：tele 0010：station $/;"	m	struct:node_value_t
type	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^   uint8_t                  type;   \/*type 代表该节点具有的类型：0001：tele 0010：station $/;"	m	struct:node_value_t
type	conf_manage/xml_extract.h	/^	int type;  \/**< 限速类型标号*\/$/;"	m	struct:limitStrategyFLags
type	conf_manage/xml_extract.h	/^	int type;$/;"	m	struct:IN_ROUTEINFO
type	conf_manage/xmlopt/mxml.h	/^  mxml_type_t		type;		\/* Node type *\/$/;"	m	struct:mxml_node_s
type	message_queue/event.h	/^    EVENT_TYPE type;$/;"	m	struct:event_t
type	route_data.h	/^   uint8_t                  type;   \/*type 代表该节点具有的类型：0001：tele 0010：station $/;"	m	struct:node_value_t
unique	OPTIMIZE/tools/tools.c	/^void unique(int src[],int srcLength,int dest[],int* desLength)$/;"	f
uniqueByCat	OPTIMIZE/optimize/preprocess/roadCategory.c	/^void uniqueByCat(CATPOINT src[],int srcLength,CATPOINT* dest,int* desLength)$/;"	f
uniqueByCat	OPTIMIZE/tools/optimize/preprocess/roadCategory.c	/^void uniqueByCat(CATPOINT src[],int srcLength,CATPOINT* dest,int* desLength)$/;"	f
up	conf_manage/xml_extract.h	/^   int up; \/**< 升速或降速*\/$/;"	m	struct:timeStrategyFlags
user_data	conf_manage/xmlopt/mxml.h	/^  void			*user_data;	\/* User data *\/$/;"	m	struct:mxml_node_s
va_copy	conf_manage/xmlopt/mxml-string.c	39;"	d	file:
va_copy	conf_manage/xmlopt/mxml-string.c	41;"	d	file:
value	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    float value;        \/* 坡度值 +:上坡; -:下坡 *\/$/;"	m	struct:gradient_t
value	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    node_value_t    value;      $/;"	m	struct:route_node
value	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t value;     \/* 曲线值 *\/$/;"	m	struct:curve_t
value	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint16_t value;$/;"	m	struct:limit_t
value	OPTIMIZE/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:gradient
value	OPTIMIZE/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:mGradient
value	OPTIMIZE/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:partGradient
value	OPTIMIZE/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:roadCategory
value	OPTIMIZE/optimize/preprocess/preprocess.c	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:gradientTemp	file:
value	OPTIMIZE/optimize/preprocess/preprocess.c	/^	float value;\/** 隧道的加算坡度值*\/$/;"	m	struct:tunnelTemp	file:
value	OPTIMIZE/optimize/preprocess/preprocess.c	/^	float value;\/**< 曲线的加算坡度值*\/$/;"	m	struct:curveTemp	file:
value	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	float value;   \/**<  临界速度值 *\/$/;"	m	struct:critical_v
value	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	int value;  \/**<公里标*\/$/;"	m	struct:catPoint
value	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    float value;        \/* 坡度值 +:上坡; -:下坡 *\/$/;"	m	struct:gradient_t
value	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    node_value_t    value;      $/;"	m	struct:route_node
value	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t value;     \/* 曲线值 *\/$/;"	m	struct:curve_t
value	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint16_t value;$/;"	m	struct:limit_t
value	OPTIMIZE/tools/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:gradient
value	OPTIMIZE/tools/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:mGradient
value	OPTIMIZE/tools/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:partGradient
value	OPTIMIZE/tools/opt_definition.h	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:roadCategory
value	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	float value; \/**< 坡度值 *\/$/;"	m	struct:gradientTemp	file:
value	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	float value;\/** 隧道的加算坡度值*\/$/;"	m	struct:tunnelTemp	file:
value	OPTIMIZE/tools/optimize/preprocess/preprocess.c	/^	float value;\/**< 曲线的加算坡度值*\/$/;"	m	struct:curveTemp	file:
value	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	float value;   \/**<  临界速度值 *\/$/;"	m	struct:critical_v
value	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	int value;  \/**<公里标*\/$/;"	m	struct:catPoint
value	conf_manage/xml_extract.h	/^	char value[ARRAY_LEN] ; \/\/存放OptimizeStrategy.xml中"ParameterConfig"里"name"的value值$/;"	m	struct:PARAMCFG
value	conf_manage/xml_extract.h	/^	char value[ARRAY_LEN];$/;"	m	struct:ROUTEINFO
value	conf_manage/xmlopt/mxml.h	/^  char			*value;		\/* Attribute value *\/$/;"	m	struct:mxml_attr_s
value	conf_manage/xmlopt/mxml.h	/^  mxml_value_t		value;		\/* Node value *\/$/;"	m	struct:mxml_node_s
value	message_queue/message_queue.h	/^    void *value;$/;"	m	struct:message_node
value	route_data.h	/^    float value;        \/* 坡度值 +:上坡; -:下坡 *\/$/;"	m	struct:gradient_t
value	route_data.h	/^    node_value_t    value;      $/;"	m	struct:route_node
value	route_data.h	/^    uint16_t value;     \/* 曲线值 *\/$/;"	m	struct:curve_t
value	route_data.h	/^    uint16_t value;$/;"	m	struct:limit_t
velocity	OPTIMIZE/drivecontrol/train_model_4_testing/running_train.h	/^	float velocity; \/**<速度*\/$/;"	m	struct:driving_record
velocity	OPTIMIZE/opt_definition.h	/^	float velocity;  \/**<速度 *\/$/;"	m	struct:optSch
velocity	OPTIMIZE/opt_definition.h	/^	float velocity; \/**<速度*\/$/;"	m	struct:optimizeResult
velocity	OPTIMIZE/opt_definition.h	/^	float velocity;\/**<速度*\/$/;"	m	struct:opt_sch_curve
velocity	OPTIMIZE/tools/drivecontrol/train_model_4_testing/running_train.h	/^	float velocity; \/**<速度*\/$/;"	m	struct:driving_record
velocity	OPTIMIZE/tools/opt_definition.h	/^	float velocity;  \/**<速度 *\/$/;"	m	struct:optSch
velocity	OPTIMIZE/tools/opt_definition.h	/^	float velocity; \/**<速度*\/$/;"	m	struct:optimizeResult
velocity	OPTIMIZE/tools/opt_definition.h	/^	float velocity;\/**<速度*\/$/;"	m	struct:opt_sch_curve
verifyFwdGear	OPTIMIZE/optimize/afterprocess/tmp_gear_trasfer.c	/^int verifyFwdGear(OPTSCH* optSch,int len, int srcGear,int index,float time)$/;"	f
verifyFwdGear	OPTIMIZE/tools/optimize/afterprocess/tmp_gear_trasfer.c	/^int verifyFwdGear(OPTSCH* optSch,int len, int srcGear,int index,float time)$/;"	f
vi	OPTIMIZE/opt_definition.h	/^	float vi;  \/**< 坡段首速度*\/$/;"	m	struct:roadCategory
vi	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	float vi; \/**< 段起始速度*\/$/;"	m	struct:Category
vi	OPTIMIZE/tools/opt_definition.h	/^	float vi;  \/**< 坡段首速度*\/$/;"	m	struct:roadCategory
vi	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	float vi; \/**< 段起始速度*\/$/;"	m	struct:Category
vo	OPTIMIZE/opt_definition.h	/^	float vo; \/**< 坡段尾速度 *\/$/;"	m	struct:roadCategory
vo	OPTIMIZE/optimize/preprocess/roadCategory.h	/^	float vo; \/**< 段终止速度*\/$/;"	m	struct:Category
vo	OPTIMIZE/tools/opt_definition.h	/^	float vo; \/**< 坡段尾速度 *\/$/;"	m	struct:roadCategory
vo	OPTIMIZE/tools/optimize/preprocess/roadCategory.h	/^	float vo; \/**< 段终止速度*\/$/;"	m	struct:Category
vsnprintf	conf_manage/xmlopt/config.h	91;"	d
weight	OPTIMIZE/opt_definition.h	/^	float weight[2];  \/**< 包括车头weight[0]为车头的重量,weight[1]为单节车厢平均重量 *\/$/;"	m	struct:locoParameter
weight	OPTIMIZE/tools/opt_definition.h	/^	float weight[2];  \/**< 包括车头weight[0]为车头的重量,weight[1]为单节车厢平均重量 *\/$/;"	m	struct:locoParameter
whitespace	conf_manage/xmlopt/mxml.h	/^  int			whitespace;	\/* Leading whitespace? *\/$/;"	m	struct:mxml_text_s
work_info	OPTIMIZE/datacontrol/read_binary_for_route.h	/^    uint8_t  work_info;$/;"	m	struct:branch_change_t
work_info	OPTIMIZE/tools/datacontrol/read_binary_for_route.h	/^    uint8_t  work_info;$/;"	m	struct:branch_change_t
work_info	route_data.h	/^    uint8_t  work_info;$/;"	m	struct:branch_change_t
wrap	conf_manage/xmlopt/mxml-private.h	/^  int	wrap;$/;"	m	struct:_mxml_global_s
zeroIntArray	OPTIMIZE/tools/tools.c	/^void zeroIntArray(int src[],int length)$/;"	f
zerofloatArray	OPTIMIZE/tools/tools.c	/^void zerofloatArray(float src[],int length)$/;"	f
